---
http_interactions:
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '275228'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Wed, 27 Feb 2019 04:52:25 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 5403dac1c8184ecaec0838c37f7a4ab3.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - iT4gEUlsGQrIyminnJ-6qsvxijUlFobg10Mlfi1l67kwKTE1qpv6yA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 27 Feb 2019 04:52:25 GMT
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '275228'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Wed, 27 Feb 2019 04:52:25 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 104795f381a243817cf3c80a4bb8bb09.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - uh9XU-X3x5HASZPWwpsOqGNOX2TJSrxEa2YHNosO3CpjAmQTL0j2vg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJjb2xsZWN0aW9uIjp7Im1ldGFkYXRhIjp7InRvdGFsX2hpdHMiOjQzN30sInZlcnNpb24iOiIxLjAiLCJsaW5rcyI6W3sicmVsIjoibmV4dCIsInByb21wdCI6Ik5leHQiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXBpLm5hc2EuZ292L3NlYXJjaD9xPWh1YmJsZSZwYWdlPTImY2VudGVyPUdTRkMmbWVkaWFfdHlwZT1pbWFnZSJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFwaS5uYXNhLmdvdi9zZWFyY2g/Y2VudGVyPUdTRkMmbWVkaWFfdHlwZT1pbWFnZSZxPWh1YmJsZSIsIml0ZW1zIjpbeyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9odWJibGUtZXllcy1nYWxhY3RpYy1yZWZ1cmJpc2htZW50XzE3MzIyODk2OTI1X28vaHViYmxlLWV5ZXMtZ2FsYWN0aWMtcmVmdXJiaXNobWVudF8xNzMyMjg5NjkyNV9vfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9odWJibGUtZXllcy1nYWxhY3RpYy1yZWZ1cmJpc2htZW50XzE3MzIyODk2OTI1X28vY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlIiwiZ2FsYXh5IiwiVUdDIDU3OTcuIl0sImRlc2NyaXB0aW9uIjoiVGhlIHNtdWRnZSBvZiBzdGFycyBhdCB0aGUgY2VudGVyIG9mIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSBpcyBhIGdhbGF4eSBrbm93biBhcyBVR0MgNTc5Ny4gVUdDIDU3OTcgaXMgYW4gZW1pc3Npb24gbGluZSBnYWxheHksIG1lYW5pbmcgdGhhdCBpdCBpcyBjdXJyZW50bHkgdW5kZXJnb2luZyBhY3RpdmUgc3RhciBmb3JtYXRpb24uIFRoZSByZXN1bHQgaXMgYSBzdGVsbGFyIHBvcHVsYXRpb24gdGhhdCBpcyBjb25zdGFudGx5IGJlaW5nIHJlZnVyYmlzaGVkIGFzIG1hc3NpdmUgYnJpZ2h0IGJsdWUgc3RhcnMgZm9ybS4gR2FsYXhpZXMgd2l0aCBwcm9saWZpYyBzdGFyIGZvcm1hdGlvbiBhcmUgbm90IG9ubHkgdmVpbGVkIGluIGEgYmx1ZSB0aW50LCBidXQgYXJlIGtleSB0byB0aGUgY29udGludWF0aW9uIG9mIGEgc3RlbGxhciBjeWNsZS4gIEluIHRoaXMgaW1hZ2UgVUdDIDU3OTcgYXBwZWFycyBpbiBmcm9udCBvZiBhIGJhY2tncm91bmQgb2Ygc3BpcmFsIGdhbGF4aWVzLiBTcGlyYWwgZ2FsYXhpZXMgaGF2ZSBjb3Bpb3VzIGFtb3VudHMgb2YgZHVzdCBhbmQgZ2FzIOKAlCB0aGUgbWFpbiBpbmdyZWRpZW50IGZvciBzdGFycyDigJQgYW5kIHRoZXJlZm9yZSBvZnRlbiBhbHNvIGJlbG9uZyB0byB0aGUgY2xhc3Mgb2YgZW1pc3Npb24gbGluZSBnYWxheGllcy4gIFNwaXJhbCBnYWxheGllcyBoYXZlIGRpc2stbGlrZSBzaGFwZXMgdGhhdCBkcmFzdGljYWxseSB2YXJ5IGluIGFwcGVhcmFuY2UgZGVwZW5kaW5nIG9uIHRoZSBhbmdsZSBhdCB3aGljaCB0aGV5IGFyZSBvYnNlcnZlZC4gVGhlIGNvbGxlY3Rpb24gb2Ygc3BpcmFsIGdhbGF4aWVzIGluIHRoaXMgZnJhbWUgZXhoaWJpdHMgdGhpcyBhdHRyaWJ1dGUgYWN1dGVseTogU29tZSBhcmUgdmlld2VkIGZhY2Utb24sIHJldmVhbGluZyB0aGUgc3RydWN0dXJlIG9mIHRoZSBzcGlyYWwgYXJtcywgd2hpbGUgdGhlIHR3byBpbiB0aGUgYm90dG9tIGxlZnQgYXJlIHNlZW4gZWRnZS1vbiwgYXBwZWFyaW5nIGFzIHBsYWluIHN0cmVha3MgaW4gdGhlIHNreS4gVGhlcmUgYXJlIG1hbnkgc3BpcmFsIGdhbGF4aWVzLCB3aXRoIHZhcnlpbmcgY29sb3JzIGFuZCBhdCBkaWZmZXJlbnQgYW5nbGVzLCBzcHJpbmtsZWQgYWNyb3NzIHRoaXMgaW1hZ2Ug4oCUIGp1c3QgdGFrZSBhIGxvb2suICAgQ3JlZGl0OiBFU0EvSHViYmxlICYgTkFTQSwgQWNrbm93bGVkZ2VtZW50OiBMdWNhIExpbWF0b2xhIiwibmFzYV9pZCI6Imh1YmJsZS1leWVzLWdhbGFjdGljLXJlZnVyYmlzaG1lbnRfMTczMjI4OTY5MjVfbyIsImRhdGVfY3JlYXRlZCI6IjIwMTUtMDQtMzBUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgRXllcyBHYWxhY3RpYyBSZWZ1cmJpc2htZW50IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9odWJibGUtb2JzZXJ2ZXMtb25lLW9mLWEta2luZC1zdGFyLW5pY2tuYW1lZC1uYXN0eV8xNzc1NDY1Mjk2MF9vL2h1YmJsZS1vYnNlcnZlcy1vbmUtb2YtYS1raW5kLXN0YXItbmlja25hbWVkLW5hc3R5XzE3NzU0NjUyOTYwX29+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2h1YmJsZS1vYnNlcnZlcy1vbmUtb2YtYS1raW5kLXN0YXItbmlja25hbWVkLW5hc3R5XzE3NzU0NjUyOTYwX28vY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlIiwiTWlsa3kgV2F5Iiwic3RhciJdLCJkZXNjcmlwdGlvbiI6IkFzdHJvbm9tZXJzIHVzaW5nIE5BU0HigJlzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGF2ZSB1bmNvdmVyZWQgc3VycHJpc2luZyBuZXcgY2x1ZXMgYWJvdXQgYSBoZWZ0eSwgcmFwaWRseSBhZ2luZyBzdGFyIHdob3NlIGJlaGF2aW9yIGhhcyBuZXZlciBiZWVuIHNlZW4gYmVmb3JlIGluIG91ciBNaWxreSBXYXkgZ2FsYXh5LiBJbiBmYWN0LCB0aGUgc3RhciBpcyBzbyB3ZWlyZCB0aGF0IGFzdHJvbm9tZXJzIGhhdmUgbmlja25hbWVkIGl0IOKAnE5hc3R5IDEs4oCdIGEgcGxheSBvbiBpdHMgY2F0YWxvZyBuYW1lIG9mIE5hU3QxLiBUaGUgc3RhciBtYXkgcmVwcmVzZW50IGEgYnJpZWYgdHJhbnNpdG9yeSBzdGFnZSBpbiB0aGUgZXZvbHV0aW9uIG9mIGV4dHJlbWVseSBtYXNzaXZlIHN0YXJzLiAgRmlyc3QgZGlzY292ZXJlZCBzZXZlcmFsIGRlY2FkZXMgYWdvLCBOYXN0eSAxIHdhcyBpZGVudGlmaWVkIGFzIGEgV29sZi1SYXlldCBzdGFyLCBhIHJhcGlkbHkgZXZvbHZpbmcgc3RhciB0aGF0IGlzIG11Y2ggbW9yZSBtYXNzaXZlIHRoYW4gb3VyIHN1bi4gVGhlIHN0YXIgbG9zZXMgaXRzIGh5ZHJvZ2VuLWZpbGxlZCBvdXRlciBsYXllcnMgcXVpY2tseSwgZXhwb3NpbmcgaXRzIHN1cGVyLWhvdCBhbmQgZXh0cmVtZWx5IGJyaWdodCBoZWxpdW0tYnVybmluZyBjb3JlLiAgQnV0IE5hc3R5IDEgZG9lc27igJl0IGxvb2sgbGlrZSBhIHR5cGljYWwgV29sZi1SYXlldCBzdGFyLiBUaGUgYXN0cm9ub21lcnMgdXNpbmcgSHViYmxlIGhhZCBleHBlY3RlZCB0byBzZWUgdHdpbiBsb2JlcyBvZiBnYXMgZmxvd2luZyBmcm9tIG9wcG9zaXRlIHNpZGVzIG9mIHRoZSBzdGFyLCBwZXJoYXBzIHNpbWlsYXIgdG8gdGhvc2UgZW1hbmF0aW5nIGZyb20gdGhlIG1hc3NpdmUgc3RhciBFdGEgQ2FyaW5hZSwgd2hpY2ggaXMgYSBXb2xmLVJheWV0IGNhbmRpZGF0ZS4gICBJbnN0ZWFkLCBIdWJibGUgcmV2ZWFsZWQgYSBwYW5jYWtlLXNoYXBlZCBkaXNrIG9mIGdhcyBlbmNpcmNsaW5nIHRoZSBzdGFyLiBUaGUgdmFzdCBkaXNrIGlzIG5lYXJseSAyIHRyaWxsaW9uIG1pbGVzIHdpZGUsIGFuZCBtYXkgaGF2ZSBmb3JtZWQgZnJvbSBhbiB1bnNlZW4gY29tcGFuaW9uIHN0YXIgdGhhdCBzbmFja2VkIG9uIHRoZSBvdXRlciBlbnZlbG9wZSBvZiB0aGUgbmV3bHkgZm9ybWVkIFdvbGYtUmF5ZXQuICBCYXNlZCBvbiBjdXJyZW50IGVzdGltYXRlcywgdGhlIG5lYnVsYSBzdXJyb3VuZGluZyB0aGUgc3RhcnMgaXMganVzdCBhIGZldyB0aG91c2FuZCB5ZWFycyBvbGQsIGFuZCBhcyBjbG9zZSBhcyAzLDAwMCBsaWdodC15ZWFycyBmcm9tIEVhcnRoLiAgQ3JlZGl0czogTkFTQS9IdWJibGUiLCJuYXNhX2lkIjoiaHViYmxlLW9ic2VydmVzLW9uZS1vZi1hLWtpbmQtc3Rhci1uaWNrbmFtZWQtbmFzdHlfMTc3NTQ2NTI5NjBfbyIsImRhdGVfY3JlYXRlZCI6IjIwMTUtMDMtMjFUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgT2JzZXJ2ZXMgT25lLW9mLWEtS2luZCBTdGFyIE5pY2tuYW1lZCDigJhOYXN0eeKAmSIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3NDEvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3NDF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzQxL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSAyNSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3NDEiLCJkYXRlX2NyZWF0ZWQiOiIyMDE1LTA0LTIzVDIxOjA2OjU5WiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIDI1IiwiZGVzY3JpcHRpb24iOiJJZiB5b3UgbG92ZSBIdWJibGUgYXMgbXVjaCBhcyB3ZSBkbyB5b3Ugd2lsbCBMT1ZFIHRoaXMgdmlkZW8uICBTaXQgYmFjayBhbmQgZW5qb3kgMjUgbWVzbWVyaXppbmcgeWVhcnMgb2YgSHViYmxlIGltYWdlcyEgICNIdWJibGUyNSAgWW91IGNhbiB2aWV3IGFsbCBvZiB0aGVzZSBpbWFnZXMgb24gRmxpY2tyIGhlcmU6IDxhIGhyZWY9XCJodHRwczovL3d3dy5mbGlja3IuY29tL3Bob3Rvcy80MDUyMzgyOEBOMDcvc2V0cy83MjE1NzY0OTY5MjQzMDQ2MVwiPnd3dy5mbGlja3IuY29tL3Bob3Rvcy80MDUyMzgyOEBOMDcvc2V0cy83MjE1NzY0OTY5MjQzMDQ2MTwvYT4gIENyZWRpdCBOQVNBIEdvZGRhcmQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2h1YmJsZS1jYXB0dXJlcy12aXZpZC1hdXJvcmFzLWluLWp1cGl0ZXJzLWF0bW9zcGhlcmVfMjgwMDAwMjk1MjVfby9odWJibGUtY2FwdHVyZXMtdml2aWQtYXVyb3Jhcy1pbi1qdXBpdGVycy1hdG1vc3BoZXJlXzI4MDAwMDI5NTI1X29+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2h1YmJsZS1jYXB0dXJlcy12aXZpZC1hdXJvcmFzLWluLWp1cGl0ZXJzLWF0bW9zcGhlcmVfMjgwMDAwMjk1MjVfby9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUiLCJKdXBpdGVyIiwiQXVyb3JhIiwiQXVyb3JhcyJdLCJkZXNjcmlwdGlvbiI6IkFzdHJvbm9tZXJzIGFyZSB1c2luZyB0aGUgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSB0byBzdHVkeSBhdXJvcmFzIOKAlCBzdHVubmluZyBsaWdodCBzaG93cyBpbiBhIHBsYW5ldOKAmXMgYXRtb3NwaGVyZSDigJQgb24gdGhlIHBvbGVzIG9mIHRoZSBsYXJnZXN0IHBsYW5ldCBpbiB0aGUgc29sYXIgc3lzdGVtLCBKdXBpdGVyLiBUaGlzIG9ic2VydmF0aW9uIHByb2dyYW0gaXMgc3VwcG9ydGVkIGJ5IG1lYXN1cmVtZW50cyBtYWRlIGJ5IE5BU0HigJlzIEp1bm8gc3BhY2VjcmFmdCwgY3VycmVudGx5IG9uIGl0cyB3YXkgdG8gSnVwaXRlci4gIEp1cGl0ZXIsIHRoZSBsYXJnZXN0IHBsYW5ldCBpbiB0aGUgc29sYXIgc3lzdGVtLCBpcyBiZXN0IGtub3duIGZvciBpdHMgY29sb3JmdWwgc3Rvcm1zLCB0aGUgbW9zdCBmYW1vdXMgYmVpbmcgdGhlIEdyZWF0IFJlZCBTcG90LiBOb3cgYXN0cm9ub21lcnMgaGF2ZSBmb2N1c2VkIG9uIGFub3RoZXIgYmVhdXRpZnVsIGZlYXR1cmUgb2YgdGhlIHBsYW5ldCwgdXNpbmcgSHViYmxlJ3MgdWx0cmF2aW9sZXQgY2FwYWJpbGl0aWVzLiAgVGhlIGV4dHJhb3JkaW5hcnkgdml2aWQgZ2xvd3Mgc2hvd24gaW4gdGhlIG5ldyBvYnNlcnZhdGlvbnMgYXJlIGtub3duIGFzIGF1cm9yYXMuIFRoZXkgYXJlIGNyZWF0ZWQgd2hlbiBoaWdoLWVuZXJneSBwYXJ0aWNsZXMgZW50ZXIgYSBwbGFuZXTigJlzIGF0bW9zcGhlcmUgbmVhciBpdHMgbWFnbmV0aWMgcG9sZXMgYW5kIGNvbGxpZGUgd2l0aCBhdG9tcyBvZiBnYXMuIEFzIHdlbGwgYXMgcHJvZHVjaW5nIGJlYXV0aWZ1bCBpbWFnZXMsIHRoaXMgcHJvZ3JhbSBhaW1zIHRvIGRldGVybWluZSBob3cgdmFyaW91cyBjb21wb25lbnRzIG9mIEp1cGl0ZXLigJlzIGF1cm9yYXMgcmVzcG9uZCB0byBkaWZmZXJlbnQgY29uZGl0aW9ucyBpbiB0aGUgc29sYXIgd2luZCwgYSBzdHJlYW0gb2YgY2hhcmdlZCBwYXJ0aWNsZXMgZWplY3RlZCBmcm9tIHRoZSBzdW4uICBUaGlzIG9ic2VydmF0aW9uIHByb2dyYW0gaXMgcGVyZmVjdGx5IHRpbWVkIGFzIE5BU0HigJlzIEp1bm8gc3BhY2VjcmFmdCBpcyBjdXJyZW50bHkgaW4gdGhlIHNvbGFyIHdpbmQgbmVhciBKdXBpdGVyIGFuZCB3aWxsIGVudGVyIHRoZSBvcmJpdCBvZiB0aGUgcGxhbmV0IGluIGVhcmx5IEp1bHkgMjAxNi4gV2hpbGUgSHViYmxlIGlzIG9ic2VydmluZyBhbmQgbWVhc3VyaW5nIHRoZSBhdXJvcmFzIG9uIEp1cGl0ZXIsIEp1bm8gaXMgbWVhc3VyaW5nIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBzb2xhciB3aW5kIGl0c2VsZjsgYSBwZXJmZWN0IGNvbGxhYm9yYXRpb24gYmV0d2VlbiBhIHRlbGVzY29wZSBhbmQgYSBzcGFjZSBwcm9iZS4gIOKAnFRoZXNlIGF1cm9yYXMgYXJlIHZlcnkgZHJhbWF0aWMgYW5kIGFtb25nIHRoZSBtb3N0IGFjdGl2ZSBJIGhhdmUgZXZlciBzZWVu4oCdLCBzYWlkIEpvbmF0aGFuIE5pY2hvbHMgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBMZWljZXN0ZXIsIFUuSy4sIGFuZCBwcmluY2lwYWwgaW52ZXN0aWdhdG9yIG9mIHRoZSBzdHVkeS4g4oCcSXQgYWxtb3N0IHNlZW1zIGFzIGlmIEp1cGl0ZXIgaXMgdGhyb3dpbmcgYSBmaXJld29yayBwYXJ0eSBmb3IgdGhlIGltbWluZW50IGFycml2YWwgb2YgSnVuby7igJ0gICBDcmVkaXRzOiBOQVNBLCBFU0EsIGFuZCBKLiBOaWNob2xzIChVbml2ZXJzaXR5IG9mIExlaWNlc3RlcikiLCJuYXNhX2lkIjoiaHViYmxlLWNhcHR1cmVzLXZpdmlkLWF1cm9yYXMtaW4tanVwaXRlcnMtYXRtb3NwaGVyZV8yODAwMDAyOTUyNV9vIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNi0wNi0zMFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBDYXB0dXJlcyBWaXZpZCBBdXJvcmFzIGluIEp1cGl0ZXLigJlzIEF0bW9zcGhlcmUiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDM0L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDM0fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAzNC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGXigJlzIFNwaXJvZ3JhcGgiXSwiZGVzY3JpcHRpb24iOiJIdWJibGXigJlzIFNwaXJvZ3JhcGggIEluIHRoaXMgY2xhc3NpYyBIdWJibGUgaW1hZ2UgZnJvbSAyMDAwLCB0aGUgcGxhbmV0YXJ5IG5lYnVsYSBJQyA0MTggZ2xvd3MgbGlrZSBhIG11bHRpZmFjZXRlZCBqZXdlbCB3aXRoIGVuaWdtYXRpYyBwYXR0ZXJucy4gSUMgNDE4IGxpZXMgYWJvdXQgMiwwMDAgbGlnaHQteWVhcnMgZnJvbSBFYXJ0aCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjb25zdGVsbGF0aW9uIExlcHVzLiAgIEEgcGxhbmV0YXJ5IG5lYnVsYSByZXByZXNlbnRzIHRoZSBmaW5hbCBzdGFnZSBpbiB0aGUgZXZvbHV0aW9uIG9mIGEgc3RhciBzaW1pbGFyIHRvIG91ciBzdW4uIFRoZSBzdGFyIGF0IHRoZSBjZW50ZXIgb2YgSUMgNDE4IHdhcyBhIHJlZCBnaWFudCBhIGZldyB0aG91c2FuZCB5ZWFycyBhZ28sIGJ1dCB0aGVuIGVqZWN0ZWQgaXRzIG91dGVyIGxheWVycyBpbnRvIHNwYWNlIHRvIGZvcm0gdGhlIG5lYnVsYSwgd2hpY2ggaGFzIG5vdyBleHBhbmRlZCB0byBhIGRpYW1ldGVyIG9mIGFib3V0IDAuMSBsaWdodC15ZWFyLiBUaGUgc3RlbGxhciByZW1uYW50IGF0IHRoZSBjZW50ZXIgaXMgdGhlIGhvdCBjb3JlIG9mIHRoZSByZWQgZ2lhbnQsIGZyb20gd2hpY2ggdWx0cmF2aW9sZXQgcmFkaWF0aW9uIGZsb29kcyBvdXQgaW50byB0aGUgc3Vycm91bmRpbmcgZ2FzLCBjYXVzaW5nIGl0IHRvIGZsdW9yZXNjZS4gT3ZlciB0aGUgbmV4dCBzZXZlcmFsIHRob3VzYW5kIHllYXJzLCB0aGUgbmVidWxhIHdpbGwgZ3JhZHVhbGx5IGRpc3BlcnNlIGludG8gc3BhY2UsIGFuZCB0aGVuIHRoZSBzdGFyIHdpbGwgY29vbCBhbmQgZmFkZSBhd2F5IGZvciBiaWxsaW9ucyBvZiB5ZWFycyBhcyBhIHdoaXRlIGR3YXJmLiBPdXIgb3duIHN1biBpcyBleHBlY3RlZCB0byB1bmRlcmdvIGEgc2ltaWxhciBmYXRlLCBidXQgZm9ydHVuYXRlbHksIHRoaXMgd2lsbCBub3Qgb2NjdXIgdW50aWwgc29tZSA1IGJpbGxpb24geWVhcnMgZnJvbSBub3cuICBUaGUgSHViYmxlIGltYWdlIG9mIElDIDQxOCBpcyBzaG93biB3aXRoIGNvbG9ycyBhZGRlZCB0byByZXByZXNlbnQgdGhlIGRpZmZlcmVudCBjYW1lcmEgZmlsdGVycyB1c2VkIHRoYXQgaXNvbGF0ZSBsaWdodCBmcm9tIHZhcmlvdXMgY2hlbWljYWwgZWxlbWVudHMuIFJlZCBzaG93cyBlbWlzc2lvbiBmcm9tIGlvbml6ZWQgbml0cm9nZW4gKHRoZSBjb29sZXN0IGdhcyBpbiB0aGUgbmVidWxhLCBsb2NhdGVkIGZ1cnRoZXN0IGZyb20gdGhlIGhvdCBudWNsZXVzKSwgZ3JlZW4gc2hvd3MgZW1pc3Npb24gZnJvbSBoeWRyb2dlbiBhbmQgYmx1ZSB0cmFjZXMgdGhlIGVtaXNzaW9uIGZyb20gaW9uaXplZCBveHlnZW4gKHRoZSBob3R0ZXN0IGdhcywgY2xvc2VzdCB0byB0aGUgY2VudHJhbCBzdGFyKS4gVGhlIHJlbWFya2FibGUgdGV4dHVyZXMgc2VlbiBpbiB0aGUgbmVidWxhIGFyZSBuZXdseSByZXZlYWxlZCBieSB0aGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSwgYW5kIHRoZWlyIG9yaWdpbiBpcyBzdGlsbCB1bmNlcnRhaW4uICAgUmVhZCBtb3JlOiA8YSBocmVmPVwiaHR0cHM6Ly9nby5uYXNhLmdvdi8ycm9vZktTXCIgcmVsPVwibm9mb2xsb3dcIj5nby5uYXNhLmdvdi8ycm9vZktTPC9hPiAgQ3JlZGl0OiBOQVNBIGFuZCBUaGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpOyAgQWNrbm93bGVkZ21lbnQ6IERyLiBSYWdodmVuZHJhIFNhaGFpIChKUEwpIGFuZCBEci4gQXJzZW4gUi4gSGFqaWFuIChVU05PKSIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAzNCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGXigJlzIFNwaXJvZ3JhcGgiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2h1YmJsZS1jYXRjaGVzLXN0ZWxsYXItZXhvZHVzLWluLWFjdGlvbl8xNzY0NDg0NTM0MV9vL2h1YmJsZS1jYXRjaGVzLXN0ZWxsYXItZXhvZHVzLWluLWFjdGlvbl8xNzY0NDg0NTM0MV9vfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9odWJibGUtY2F0Y2hlcy1zdGVsbGFyLWV4b2R1cy1pbi1hY3Rpb25fMTc2NDQ4NDUzNDFfby9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUiLCJzcGFjZSIsInN0YXIiLCJkd2FyZiBzdGFycyIsImR3YXJmIHN0YXIiLCJHbG9idWxhciBzdGFyIl0sImRlc2NyaXB0aW9uIjoiVXNpbmcgTkFTQeKAmXMgSHViYmxlIFNwYWNlIFRlbGVzY29wZSwgYXN0cm9ub21lcnMgaGF2ZSBjYXB0dXJlZCBmb3IgdGhlIGZpcnN0IHRpbWUgc25hcHNob3RzIG9mIGZsZWRnaW5nIHdoaXRlIGR3YXJmIHN0YXJzIGJlZ2lubmluZyB0aGVpciBzbG93LXBhY2VkLCA0MC1taWxsaW9uLXllYXIgbWlncmF0aW9uIGZyb20gdGhlIGNyb3dkZWQgY2VudGVyIG9mIGFuIGFuY2llbnQgc3RhciBjbHVzdGVyIHRvIHRoZSBsZXNzIHBvcHVsYXRlZCBzdWJ1cmJzLiAgV2hpdGUgZHdhcmZzIGFyZSB0aGUgYnVybmVkLW91dCByZWxpY3Mgb2Ygc3RhcnMgdGhhdCByYXBpZGx5IGxvc2UgbWFzcywgY29vbCBkb3duIGFuZCBzaHV0IG9mZiB0aGVpciBudWNsZWFyIGZ1cm5hY2VzLiBBcyB0aGVzZSBnbG93aW5nIGNhcmNhc3NlcyBhZ2UgYW5kIHNoZWQgd2VpZ2h0LCB0aGVpciBvcmJpdHMgYmVnaW4gdG8gZXhwYW5kIG91dHdhcmQgZnJvbSB0aGUgc3RhciBjbHVzdGVy4oCZcyBwYWNrZWQgZG93bnRvd24uIFRoaXMgbWlncmF0aW9uIGlzIGNhdXNlZCBieSBhIGdyYXZpdGF0aW9uYWwgdHVzc2xlIGFtb25nIHN0YXJzIGluc2lkZSB0aGUgY2x1c3Rlci4gR2xvYnVsYXIgc3RhciBjbHVzdGVycyBzb3J0IG91dCBzdGFycyBhY2NvcmRpbmcgdG8gdGhlaXIgbWFzcywgZ292ZXJuZWQgYnkgYSBncmF2aXRhdGlvbmFsIGJpbGxpYXJkIGJhbGwgZ2FtZSB3aGVyZSBsb3dlciBtYXNzIHN0YXJzIHJvYiBtb21lbnR1bSBmcm9tIG1vcmUgbWFzc2l2ZSBzdGFycy4gVGhlIHJlc3VsdCBpcyB0aGF0IGhlYXZpZXIgc3RhcnMgc2xvdyBkb3duIGFuZCBzaW5rIHRvIHRoZSBjbHVzdGVyJ3MgY29yZSwgd2hpbGUgbGlnaHRlciBzdGFycyBwaWNrIHVwIHNwZWVkIGFuZCBtb3ZlIGFjcm9zcyB0aGUgY2x1c3RlciB0byB0aGUgZWRnZS4gVGhpcyBwcm9jZXNzIGlzIGtub3duIGFzIFwibWFzcyBzZWdyZWdhdGlvbi5cIiBVbnRpbCB0aGVzZSBIdWJibGUgb2JzZXJ2YXRpb25zLCBhc3Ryb25vbWVycyBoYWQgbmV2ZXIgZGVmaW5pdGl2ZWx5IHNlZW4gdGhlIGR5bmFtaWNhbCBjb252ZXlvciBiZWx0IGluIGFjdGlvbi4gIEFzdHJvbm9tZXJzIHVzZWQgSHViYmxlIHRvIHdhdGNoIHRoZSB3aGl0ZS1kd2FyZiBleG9kdXMgaW4gdGhlIGdsb2J1bGFyIHN0YXIgY2x1c3RlciA0NyBUdWNhbmFlLCBhIGRlbnNlIHN3YXJtIG9mIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBzdGFycyBpbiBvdXIgTWlsa3kgV2F5IGdhbGF4eS4gVGhlIGNsdXN0ZXIgcmVzaWRlcyAxNiw3MDAgbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgc291dGhlcm4gY29uc3RlbGxhdGlvbiBUdWNhbmEuICBDcmVkaXRzOiBOQVNBLCBFU0EsIGFuZCBILiBSaWNoZXIgYW5kIEouIEhleWwgKFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSwgVmFuY291dmVyLCBDYW5hZGEpOyBhY2tub3dsZWRnZW1lbnQ6IEouIE1hY2sgKFNUU2NJKSBhbmQgRy4gUGlvdHRvIChVbml2ZXJzaXR5IG9mIFBhZG92YSwgSXRhbHkpIiwibmFzYV9pZCI6Imh1YmJsZS1jYXRjaGVzLXN0ZWxsYXItZXhvZHVzLWluLWFjdGlvbl8xNzY0NDg0NTM0MV9vIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wNS0xNFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBDYXRjaGVzIFN0ZWxsYXIgRXhvZHVzIGluIEFjdGlvbiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4NDAvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4NDB+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxODQwL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSdzIE5lY2tsYWNlIiwibmFzYSIsImdvZGRhcmQiLCJodWJibGUiXSwiZGVzY3JpcHRpb24iOiJJbWFnZSByZWxlYXNlZCAxMSBBdWcgMjAxMS4gIFRoZSAmcXVvdDtOZWNrbGFjZSBOZWJ1bGEmcXVvdDsgaXMgbG9jYXRlZCAxNSwwMDAgbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgY29uc3RlbGxhdGlvbiBTYWdpdHRhICh0aGUgQXJyb3cpLiBJbiB0aGlzIGNvbXBvc2l0ZSBpbWFnZSwgdGFrZW4gb24gSnVseSAyLCAyMDExLCBIdWJibGUncyBXaWRlIEZpZWxkIENhbWVyYSAzIGNhcHR1cmVkIHRoZSBnbG93IG9mIGh5ZHJvZ2VuIChibHVlKSwgb3h5Z2VuIChncmVlbiksIGFuZCBuaXRyb2dlbiAocmVkKS4gIFRoZSBvYmplY3QsIGFwdGx5IG5hbWVkIHRoZSBOZWNrbGFjZSBOZWJ1bGEsIGlzIGEgcmVjZW50bHkgZGlzY292ZXJlZCBwbGFuZXRhcnkgbmVidWxhLCB0aGUgZ2xvd2luZyByZW1haW5zIG9mIGFuIG9yZGluYXJ5LCBTdW4tbGlrZSBzdGFyLiBUaGUgbmVidWxhIGNvbnNpc3RzIG9mIGEgYnJpZ2h0IHJpbmcsIG1lYXN1cmluZyAxMiB0cmlsbGlvbiBtaWxlcyB3aWRlLCBkb3R0ZWQgd2l0aCBkZW5zZSwgYnJpZ2h0IGtub3RzIG9mIGdhcyB0aGF0IHJlc2VtYmxlIGRpYW1vbmRzIGluIGEgbmVja2xhY2UuICA8YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9zY2llbmNlL25lY2tsYWNlLW5lYnVsYS5odG1sXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3dcIj48L2E+ICA8Yj5DcmVkaXQ6PC9iPiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3dlYi5zdGFncmFtLmNvbS9uL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTg0MCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUncyBOZWNrbGFjZSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvaHViYmxlLXJldmVhbHMtc3RlbGxhci1maXJld29ya3MtaW4tc2t5cm9ja2V0LWdhbGF4eV8yNzk0NjkwNzEwNl9vL2h1YmJsZS1yZXZlYWxzLXN0ZWxsYXItZmlyZXdvcmtzLWluLXNreXJvY2tldC1nYWxheHlfMjc5NDY5MDcxMDZfb350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvaHViYmxlLXJldmVhbHMtc3RlbGxhci1maXJld29ya3MtaW4tc2t5cm9ja2V0LWdhbGF4eV8yNzk0NjkwNzEwNl9vL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSIsIkdhbGF4eSIsIktpc28gNTYzOSJdLCJkZXNjcmlwdGlvbiI6IkZpcmV3b3JrcyBzaG93cyBhcmUgbm90IGp1c3QgY29uZmluZWQgdG8gRWFydGjigJlzIHNraWVzLiBOQVNB4oCZcyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGhhcyBjYXB0dXJlZCBhIHNwZWN0YWN1bGFyIGZpcmV3b3JrcyBkaXNwbGF5IGluIGEgc21hbGwsIG5lYXJieSBnYWxheHksIHdoaWNoIHJlc2VtYmxlcyBhIEp1bHkgNHRoIHNreXJvY2tldC4gIEEgZmlyZXN0b3JtIG9mIHN0YXIgYmlydGggaXMgbGlnaHRpbmcgdXAgb25lIGVuZCBvZiB0aGUgZGltaW51dGl2ZSBnYWxheHkgS2lzbyA1NjM5LiBUaGUgZHdhcmYgZ2FsYXh5IGlzIHNoYXBlZCBsaWtlIGEgZmxhdHRlbmVkIHBhbmNha2UsIGJ1dCBiZWNhdXNlIGl0IGlzIHRpbHRlZCBlZGdlLW9uLCBpdCByZXNlbWJsZXMgYSBza3lyb2NrZXQsIHdpdGggYSBicmlsbGlhbnQgYmxhemluZyBoZWFkIGFuZCBhIGxvbmcsIHN0YXItc3R1ZGRlZCB0YWlsLiAgS2lzbyA1NjM5IGlzIGEgcmFyZSwgbmVhcmJ5IGV4YW1wbGUgb2YgZWxvbmdhdGVkIGdhbGF4aWVzIHRoYXQgb2NjdXIgaW4gYWJ1bmRhbmNlIGF0IGxhcmdlciBkaXN0YW5jZXMsIHdoZXJlIHdlIG9ic2VydmUgdGhlIHVuaXZlcnNlIGR1cmluZyBlYXJsaWVyIGVwb2Nocy4gQXN0cm9ub21lcnMgc3VnZ2VzdCB0aGF0IHRoZSBmcmVuemllZCBzdGFyIGJpcnRoIGlzIHNwYXJrZWQgYnkgaW50ZXJnYWxhY3RpYyBnYXMgcmFpbmluZyBvbiBvbmUgZW5kIG9mIHRoZSBnYWxheHkgYXMgaXQgZHJpZnRzIHRocm91Z2ggc3BhY2UuICDigJxJIHRoaW5rIEtpc28gNTYzOSBpcyBhIGJlYXV0aWZ1bCwgdXAtY2xvc2UgZXhhbXBsZSBvZiB3aGF0IG11c3QgaGF2ZSBiZWVuIGNvbW1vbiBsb25nIGFnbyzigJ0gc2FpZCBsZWFkIHJlc2VhcmNoZXIgRGVicmEgRWxtZWdyZWVuIG9mIFZhc3NhciBDb2xsZWdlLCBpbiBQb3VnaGtlZXBzaWUsIE5ldyBZb3JrLiDigJxUaGUgY3VycmVudCB0aGlua2luZyBpcyB0aGF0IGdhbGF4aWVzIGluIHRoZSBlYXJseSB1bml2ZXJzZSBncm93IGZyb20gYWNjcmV0aW5nIGdhcyBmcm9tIHRoZSBzdXJyb3VuZGluZyBuZWlnaGJvcmhvb2QuIEl04oCZcyBhIHN0YWdlIHRoYXQgZ2FsYXhpZXMsIGluY2x1ZGluZyBvdXIgTWlsa3kgV2F5LCBtdXN0IGdvIHRocm91Z2ggYXMgdGhleSBhcmUgZ3Jvd2luZyB1cC7igJ0gIE9ic2VydmF0aW9ucyBvZiB0aGUgZWFybHkgdW5pdmVyc2UsIHN1Y2ggYXMgSHViYmxl4oCZcyBVbHRyYS1EZWVwIEZpZWxkLCByZXZlYWwgdGhhdCBhYm91dCAxMCBwZXJjZW50IG9mIGFsbCBnYWxheGllcyBoYXZlIHRoZXNlIGVsb25nYXRlZCBzaGFwZXMsIGFuZCBhcmUgY29sbGVjdGl2ZWx5IGNhbGxlZCDigJx0YWRwb2xlcy7igJ0gQnV0IHN0dWRpZXMgb2YgdGhlIG5lYXJieSB1bml2ZXJzZSBoYXZlIHR1cm5lZCB1cCBvbmx5IGEgZmV3IG9mIHRoZXNlIHVudXN1YWwgZ2FsYXhpZXMsIGluY2x1ZGluZyBLaXNvIDU2MzkuIFRoZSBkZXZlbG9wbWVudCBvZiB0aGUgbmVhcmJ5IHN0YXItbWFraW5nIHRhZHBvbGUgZ2FsYXhpZXMsIGhvd2V2ZXIsIGhhcyBsYWdnZWQgYmVoaW5kIHRoYXQgb2YgdGhlaXIgcGVlcnMsIHdoaWNoIGhhdmUgc3BlbnQgYmlsbGlvbnMgb2YgeWVhcnMgYnVpbGRpbmcgdGhlbXNlbHZlcyB1cCBpbnRvIG1hbnkgb2YgdGhlIHNwaXJhbCBnYWxheGllcyBzZWVuIHRvZGF5LiAgRWxtZWdyZWVuIHVzZWQgSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYSAzIHRvIGNvbmR1Y3QgYSBkZXRhaWxlZCBpbWFnaW5nIHN0dWR5IG9mIEtpc28gNTYzOS4gVGhlIGltYWdlcyBpbiBkaWZmZXJlbnQgZmlsdGVycyByZXZlYWwgaW5mb3JtYXRpb24gYWJvdXQgYW4gb2JqZWN0IGJ5IGRpc3NlY3RpbmcgaXRzIGxpZ2h0IGludG8gaXRzIGNvbXBvbmVudCBjb2xvcnMuIEh1YmJsZeKAmXMgY3Jpc3AgcmVzb2x1dGlvbiBoZWxwZWQgRWxtZWdyZWVuIGFuZCBoZXIgdGVhbSBhbmFseXplIHRoZSBnaWFudCBzdGFyLWZvcm1pbmcgY2x1bXBzIGluIEtpc28gNTYzOSBhbmQgZGV0ZXJtaW5lIHRoZSBtYXNzZXMgYW5kIGFnZXMgb2YgdGhlIHN0YXIgY2x1c3RlcnMuICBUaGUgaW50ZXJuYXRpb25hbCB0ZWFtIG9mIHJlc2VhcmNoZXJzIHNlbGVjdGVkIEtpc28gNTYzOSBmcm9tIGEgc3BlY3Ryb3Njb3BpYyBzdXJ2ZXkgb2YgMTAgbmVhcmJ5IHRhZHBvbGUgZ2FsYXhpZXMsIG9ic2VydmVkIHdpdGggdGhlIEdyYW5kIENhbmFyeSBUZWxlc2NvcGUgaW4gTGEgUGFsbWEsIFNwYWluLCBieSBKb3JnZSBTYW5jaGV6IEFsbWVpZGEgYW5kIGNvbGxhYm9yYXRvcnMgYXQgdGhlIEluc3RpdHV0byBkZSBBc3Ryb2Zpc2ljYSBkZSBDYW5hcmlhcy4gVGhlIG9ic2VydmF0aW9ucyByZXZlYWxlZCB0aGF0IGluIG1vc3Qgb2YgdGhvc2UgZ2FsYXhpZXMsIGluY2x1ZGluZyBLaXNvIDU2MzksIHRoZSBnYXMgY29tcG9zaXRpb24gaXMgbm90IHVuaWZvcm0uICBUaGUgYnJpZ2h0IGdhcyBpbiB0aGUgZ2FsYXh54oCZcyBoZWFkIGNvbnRhaW5zIGZld2VyIGhlYXZpZXIgZWxlbWVudHMgKGNvbGxlY3RpdmVseSBjYWxsZWQg4oCcbWV0YWxz4oCdKSwgc3VjaCBhcyBjYXJib24gYW5kIG94eWdlbiwgdGhhbiB0aGUgcmVzdCBvZiB0aGUgZ2FsYXh5LiBTdGFycyBjb25zaXN0IG1haW5seSBvZiBoeWRyb2dlbiBhbmQgaGVsaXVtLCBidXQgY29vayB1cCBvdGhlciDigJxoZWF2aWVy4oCdIGVsZW1lbnRzLiBXaGVuIHRoZSBzdGFycyBkaWUsIHRoZXkgcmVsZWFzZSB0aGVpciBoZWF2eSBlbGVtZW50cyBhbmQgZW5yaWNoIHRoZSBzdXJyb3VuZGluZyBnYXMuICDigJxUaGUgbWV0YWxsaWNpdHkgc3VnZ2VzdHMgdGhhdCB0aGVyZSBoYXMgdG8gYmUgcmF0aGVyIHB1cmUgZ2FzLCBjb21wb3NlZCBtb3N0bHkgb2YgaHlkcm9nZW4sIGNvbWluZyBpbnRvIHRoZSBzdGFyLWZvcm1pbmcgcGFydCBvZiB0aGUgZ2FsYXh5LCBiZWNhdXNlIGludGVyZ2FsYWN0aWMgc3BhY2UgY29udGFpbnMgbW9yZSBwcmlzdGluZSBoeWRyb2dlbi1yaWNoIGdhcyzigJ0gRWxtZWdyZWVuIGV4cGxhaW5lZC4g4oCcT3RoZXJ3aXNlLCB0aGUgc3RhcmJ1cnN0IHJlZ2lvbiBzaG91bGQgYmUgYXMgcmljaCBpbiBoZWF2eSBlbGVtZW50cyBhcyB0aGUgcmVzdCBvZiB0aGUgZ2FsYXh5LuKAnSAgSHViYmxlIG9mZmVycyBhIGRldGFpbGVkIHZpZXcgb2YgdGhlIGdhbGF4eeKAmXMgc3Rhci1tYWtpbmcgZnJlbnp5LiBUaGUgdGVsZXNjb3BlIHVuY292ZXJlZCBzZXZlcmFsIGRvemVuIGNsdXN0ZXJzIG9mIHN0YXJzIGluIHRoZSBnYWxheHnigJlzIHN0YXItZm9ybWluZyBoZWFkLCB3aGljaCBzcGFucyAyLDcwMCBsaWdodC15ZWFycyBhY3Jvc3MuIFRoZXNlIGNsdXN0ZXJzIGhhdmUgYW4gYXZlcmFnZSBhZ2Ugb2YgbGVzcyB0aGFuIDEgbWlsbGlvbiB5ZWFycyBhbmQgbWFzc2VzIHRoYXQgYXJlIHRocmVlIHRvIHNpeCB0aW1lcyBsYXJnZXIgdGhhbiB0aG9zZSBpbiB0aGUgcmVzdCBvZiB0aGUgZ2FsYXh5LiBPdGhlciBzdGFyIGZvcm1hdGlvbiBpcyB0YWtpbmcgcGxhY2UgdGhyb3VnaG91dCB0aGUgZ2FsYXh5IGJ1dCBvbiBhIG11Y2ggc21hbGxlciBzY2FsZS4gU3RhciBjbHVzdGVycyBpbiB0aGUgcmVzdCBvZiB0aGUgZ2FsYXh5IGFyZSBiZXR3ZWVuIHNldmVyYWwgbWlsbGlvbiB0byBhIGZldyBiaWxsaW9uIHllYXJzIG9sZC4gIOKAnFRoZXJlIGlzIG11Y2ggbW9yZSBzdGFyIGZvcm1hdGlvbiBnb2luZyBvbiBpbiB0aGUgaGVhZCB0aGFuIHdoYXQgeW91IHdvdWxkIGV4cGVjdCBpbiBzdWNoIGEgdGlueSBnYWxheHks4oCdIHNhaWQgdGVhbSBtZW1iZXIgQnJ1Y2UgRWxtZWdyZWVuIG9mIElCTeKAmXMgVGhvbWFzIEouIFdhdHNvbuKAmXMgUmVzZWFyY2ggQ2VudGVyLCBpbiBZb3JrdG93biBIZWlnaHRzLCBOZXcgWW9yay4g4oCcQW5kIHdlIHRoaW5rIHRoZSBzdGFyIGZvcm1hdGlvbiBpcyB0cmlnZ2VyZWQgYnkgdGhlIG9uZ29pbmcgYWNjcmV0aW9uIG9mIG1ldGFsLXBvb3IgZ2FzIG9udG8gYSBwYXJ0IG9mIGFuIG90aGVyd2lzZSBxdWllc2NlbnQgZHdhcmYgZ2FsYXh5LuKAnSAgSHViYmxlIGFsc28gcmV2ZWFsZWQgZ2lhbnQgaG9sZXMgcGVwcGVyZWQgdGhyb3VnaG91dCB0aGUgZ2FsYXh54oCZcyBzdGFyYnVyc3QgaGVhZC4gVGhlc2UgY2F2aXRpZXMgZ2l2ZSB0aGUgZ2FsYXh54oCZcyBoZWFkIGEgU3dpc3MtY2hlZXNlIGFwcGVhcmFuY2UgYmVjYXVzZSBudW1lcm91cyBzdXBlcm5vdmEgZGV0b25hdGlvbnMg4oCTIGxpa2UgZmlyZXdvcmsgYWVyaWFsIGJ1cnN0cyDigJMgaGF2ZSBjYXJ2ZWQgb3V0IGhvbGVzIG9mIHJhcmlmaWVkIHN1cGVyaGVhdGVkIGdhcy4gIFRoZSBnYWxheHksIGxvY2F0ZWQgODIgbWlsbGlvbiBsaWdodC15ZWFycyBhd2F5LCBoYXMgdGFrZW4gYmlsbGlvbnMgb2YgeWVhcnMgdG8gZGV2ZWxvcCBiZWNhdXNlIGl0IGhhcyBiZWVuIGRyaWZ0aW5nIHRocm91Z2ggYW4gaXNvbGF0ZWQg4oCcZGVzZXJ04oCdIGluIHRoZSB1bml2ZXJzZSwgZGV2b2lkIG9mIG11Y2ggZ2FzLiAgV2hhdCB0cmlnZ2VyZWQgdGhlIHN0YXJidXJzdCBpbiBzdWNoIGEgYmFja3dhdGVyIGdhbGF4eT8gQmFzZWQgb24gc2ltdWxhdGlvbnMgYnkgRGFuaWVsIENldmVyaW5vIG9mIHRoZSBDZW50ZXIgZm9yIEFzdHJvbm9teSBhdCBIZWlkZWxiZXJnIFVuaXZlcnNpdHkgaW4gR2VybWFueSwgYW5kIG90aGVyIHRlYW0gbWVtYmVycywgdGhlIG9ic2VydmF0aW9ucyBzdWdnZXN0IHRoYXQgbGVzcyB0aGFuIDEgbWlsbGlvbiB5ZWFycyBhZ28sIEtpc28gNTYzOeKAmXMgbGVhZGluZyBlZGdlIGVuY291bnRlcmVkIGEgZmlsYW1lbnQgb2YgZ2FzLiBUaGUgZmlsYW1lbnQgZHJvcHBlZCBhIGxhcmdlIGNsdW1wIG9mIG1hdHRlciBvbnRvIHRoZSBnYWxheHksIHN0b2tpbmcgdGhlIHZpZ29yb3VzIHN0YXIgYmlydGguICBEZWJyYSBFbG1lZ3JlZW4gZXhwZWN0cyB0aGF0IGluIHRoZSBmdXR1cmUgb3RoZXIgcGFydHMgb2YgdGhlIGdhbGF4eSB3aWxsIGpvaW4gaW4gdGhlIHN0YXItbWFraW5nIGZpcmV3b3JrcyBzaG93LiDigJxHYWxheGllcyByb3RhdGUsIGFuZCBhcyBLaXNvIDU2MzkgY29udGludWVzIHRvIHNwaW4sIGFub3RoZXIgcGFydCBvZiB0aGUgZ2FsYXh5IG1heSByZWNlaXZlIGFuIGluZnVzaW9uIG9mIG5ldyBnYXMgZnJvbSB0aGlzIGZpbGFtZW50LCBpbnN0aWdhdGluZyBhbm90aGVyIHJvdW5kIG9mIHN0YXIgYmlydGgs4oCdIHNoZSBzYWlkLiAgVGhlIHRlYW3igJlzIHJlc3VsdHMgaGF2ZSBiZWVuIGFjY2VwdGVkIGZvciBwdWJsaWNhdGlvbiBpbiBUaGUgQXN0cm9waHlzaWNhbCBKb3VybmFsLiAgT3RoZXIgdGVhbSBtZW1iZXJzIGluY2x1ZGUgQ2FzaWFuYSBNdW5vei1UdW5vbiBhbmQgTWVyY2VkZXMgRmlsaG8gKEluc3RpdHV0byBkZSBBc3Ryb2bDrXNpY2EgZGUgQ2FuYXJpYXMsIENhbmFyeSBJc2xhbmRzKSwgSmFpcm8gTWVuZGV6LUFicmV1IChVbml2ZXJzaXR5IG9mIFN0LiBBbmRyZXdzLCBVbml0ZWQgS2luZ2RvbSksIEpvaG4gR2FsbGFnaGVyIChVbml2ZXJzaXR5IG9mIFdpc2NvbnNpbi1NYWRpc29uKSwgYW5kIE1hcmMgUmFmZWxza2kgKE5BU0EncyBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXIsIEdyZWVuYmVsdCwgTWFyeWxhbmQpLiAgVGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaXMgYSBwcm9qZWN0IG9mIGludGVybmF0aW9uYWwgY29vcGVyYXRpb24gYmV0d2VlbiBOQVNBIGFuZCB0aGUgRXVyb3BlYW4gU3BhY2UgQWdlbmN5LiBOQVNBJ3MgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyIGluIEdyZWVuYmVsdCwgTWFyeWxhbmQsIG1hbmFnZXMgdGhlIHRlbGVzY29wZS4gVGhlIFNwYWNlIFRlbGVzY29wZSBTY2llbmNlIEluc3RpdHV0ZSAoU1RTY0kpIGluIEJhbHRpbW9yZSwgTWFyeWxhbmQsIGNvbmR1Y3RzIEh1YmJsZSBzY2llbmNlIG9wZXJhdGlvbnMuIFNUU2NJIGlzIG9wZXJhdGVkIGZvciBOQVNBIGJ5IHRoZSBBc3NvY2lhdGlvbiBvZiBVbml2ZXJzaXRpZXMgZm9yIFJlc2VhcmNoIGluIEFzdHJvbm9teSBpbiBXYXNoaW5ndG9uLCBELkMuIiwibmFzYV9pZCI6Imh1YmJsZS1yZXZlYWxzLXN0ZWxsYXItZmlyZXdvcmtzLWluLXNreXJvY2tldC1nYWxheHlfMjc5NDY5MDcxMDZfbyIsImRhdGVfY3JlYXRlZCI6IjIwMTYtMDYtMjlUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgUmV2ZWFscyBTdGVsbGFyIEZpcmV3b3JrcyBpbiDigJhTa3lyb2NrZXTigJkgR2FsYXh5IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDc5MS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDc5MX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3OTEvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlIFNlZXMgQSBTbWlsaW5nIExlbnMiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzkxIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wMi0xMFQxNjo0MDoxM1oiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIEEgU21pbGluZyBMZW5zIiwiZGVzY3JpcHRpb24iOiJJbiB0aGUgY2VudGVyIG9mIHRoaXMgaW1hZ2UsIHRha2VuIHdpdGggdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUsIGlzIHRoZSBnYWxheHkgY2x1c3RlciBTRFNTIEoxMDM4KzQ4NDkg4oCUIGFuZCBpdCBzZWVtcyB0byBiZSBzbWlsaW5nLiAgWW91IGNhbiBtYWtlIG91dCBpdHMgdHdvIG9yYW5nZSBleWVzIGFuZCB3aGl0ZSBidXR0b24gbm9zZS4gSW4gdGhlIGNhc2Ugb2YgdGhpcyDigJxoYXBweSBmYWNl4oCdLCB0aGUgdHdvIGV5ZXMgYXJlIHZlcnkgYnJpZ2h0IGdhbGF4aWVzIGFuZCB0aGUgbWlzbGVhZGluZyBzbWlsZSBsaW5lcyBhcmUgYWN0dWFsbHkgYXJjcyBjYXVzZWQgYnkgYW4gZWZmZWN0IGtub3duIGFzIHN0cm9uZyBncmF2aXRhdGlvbmFsIGxlbnNpbmcuICBHYWxheHkgY2x1c3RlcnMgYXJlIHRoZSBtb3N0IG1hc3NpdmUgc3RydWN0dXJlcyBpbiB0aGUgVW5pdmVyc2UgYW5kIGV4ZXJ0IHN1Y2ggYSBwb3dlcmZ1bCBncmF2aXRhdGlvbmFsIHB1bGwgdGhhdCB0aGV5IHdhcnAgdGhlIHNwYWNldGltZSBhcm91bmQgdGhlbSBhbmQgYWN0IGFzIGNvc21pYyBsZW5zZXMgd2hpY2ggY2FuIG1hZ25pZnksIGRpc3RvcnQgYW5kIGJlbmQgdGhlIGxpZ2h0IGJlaGluZCB0aGVtLiBUaGlzIHBoZW5vbWVub24sIGNydWNpYWwgdG8gbWFueSBvZiBIdWJibGXigJlzIGRpc2NvdmVyaWVzLCBjYW4gYmUgZXhwbGFpbmVkIGJ5IEVpbnN0ZWlu4oCZcyB0aGVvcnkgb2YgZ2VuZXJhbCByZWxhdGl2aXR5LiAgSW4gdGhpcyBzcGVjaWFsIGNhc2Ugb2YgZ3Jhdml0YXRpb25hbCBsZW5zaW5nLCBhIHJpbmcg4oCUIGtub3duIGFzIGFuIEVpbnN0ZWluIFJpbmcg4oCUIGlzIHByb2R1Y2VkIGZyb20gdGhpcyBiZW5kaW5nIG9mIGxpZ2h0LCBhIGNvbnNlcXVlbmNlIG9mIHRoZSBleGFjdCBhbmQgc3ltbWV0cmljYWwgYWxpZ25tZW50IG9mIHRoZSBzb3VyY2UsIGxlbnMgYW5kIG9ic2VydmVyIGFuZCByZXN1bHRpbmcgaW4gdGhlIHJpbmctbGlrZSBzdHJ1Y3R1cmUgd2Ugc2VlIGhlcmUuICBIdWJibGUgaGFzIHByb3ZpZGVkIGFzdHJvbm9tZXJzIHdpdGggdGhlIHRvb2xzIHRvIHByb2JlIHRoZXNlIG1hc3NpdmUgZ2FsYXhpZXMgYW5kIG1vZGVsIHRoZWlyIGxlbnNpbmcgZWZmZWN0cywgYWxsb3dpbmcgdXMgdG8gcGVlciBmdXJ0aGVyIGludG8gdGhlIGVhcmx5IFVuaXZlcnNlIHRoYW4gZXZlciBiZWZvcmUuIFRoaXMgb2JqZWN0IHdhcyBzdHVkaWVkIGJ5IEh1YmJsZeKAmXMgV2lkZSBGaWVsZCBhbmQgUGxhbmV0YXJ5IENhbWVyYSAyIChXRlBDMikgYW5kIFdpZGUgRmllbGQgQ2FtZXJhIDMgKFdGQzMpIGFzIHBhcnQgb2YgYSBzdXJ2ZXkgb2Ygc3Ryb25nIGxlbnNlcy4gIEEgdmVyc2lvbiBvZiB0aGlzIGltYWdlIHdhcyBlbnRlcmVkIGludG8gdGhlIEh1YmJsZeKAmXMgSGlkZGVuIFRyZWFzdXJlcyBpbWFnZSBwcm9jZXNzaW5nIGNvbXBldGl0aW9uIGJ5IGNvbnRlc3RhbnQgSnVkeSBTY2htaWR0LiAgSW1hZ2UgQ3JlZGl0OiBOQVNBL0VTQSAiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjI2L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjI2fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDIyNi9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgUGVlcnMgaW50byB0aGUgU3Rvcm0iLCJsaGExMjBuMTU5Il0sImRlc2NyaXB0aW9uIjoiVGhpcyBzaG90IGZyb20gdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgc2hvd3MgYSBtYWVsc3Ryb20gb2YgZ2xvd2luZyBnYXMgYW5kIGRhcmsgZHVzdCB3aXRoaW4gb25lIG9mIHRoZSBNaWxreSBXYXnigJlzIHNhdGVsbGl0ZSBnYWxheGllcywgdGhlIExhcmdlIE1hZ2VsbGFuaWMgQ2xvdWQgKExNQykuICBUaGlzIHN0b3JteSBzY2VuZSBzaG93cyBhIHN0ZWxsYXIgbnVyc2VyeSBrbm93biBhcyBOMTU5LCBhbiBISUkgcmVnaW9uIG92ZXIgMTUwIGxpZ2h0LXllYXJzIGFjcm9zcy4gTjE1OSBjb250YWlucyBtYW55IGhvdCB5b3VuZyBzdGFycy4gVGhlc2Ugc3RhcnMgYXJlIGVtaXR0aW5nIGludGVuc2UgdWx0cmF2aW9sZXQgbGlnaHQsIHdoaWNoIGNhdXNlcyBuZWFyYnkgaHlkcm9nZW4gZ2FzIHRvIGdsb3csIGFuZCB0b3JyZW50aWFsIHN0ZWxsYXIgd2luZHMsIHdoaWNoIGFyZSBjYXJ2aW5nIG91dCByaWRnZXMsIGFyY3MsIGFuZCBmaWxhbWVudHMgZnJvbSB0aGUgc3Vycm91bmRpbmcgbWF0ZXJpYWwuICBBdCB0aGUgaGVhcnQgb2YgdGhpcyBjb3NtaWMgY2xvdWQgbGllcyB0aGUgUGFwaWxsb24gTmVidWxhLCBhIGJ1dHRlcmZseS1zaGFwZWQgcmVnaW9uIG9mIG5lYnVsb3NpdHkuIFRoaXMgc21hbGwsIGRlbnNlIG9iamVjdCBpcyBjbGFzc2lmaWVkIGFzIGEgSGlnaC1FeGNpdGF0aW9uIEJsb2IsIGFuZCBpcyB0aG91Z2h0IHRvIGJlIHRpZ2h0bHkgbGlua2VkIHRvIHRoZSBlYXJseSBzdGFnZXMgb2YgbWFzc2l2ZSBzdGFyIGZvcm1hdGlvbi4gIE4xNTkgaXMgbG9jYXRlZCBvdmVyIDE2MCwwMDAgbGlnaHQteWVhcnMgYXdheS4gSXQgcmVzaWRlcyBqdXN0IHNvdXRoIG9mIHRoZSBUYXJhbnR1bGEgTmVidWxhIChoZWljMTQwMiksIGFub3RoZXIgbWFzc2l2ZSBzdGFyLWZvcm1pbmcgY29tcGxleCB3aXRoaW4gdGhlIExNQy4gIFRoaXMgaW1hZ2UgY29tZXMgZnJvbSBIdWJibGXigJlzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cy4gIFRoZSByZWdpb24gd2FzIHByZXZpb3VzbHkgaW1hZ2VkIGJ5IEh1YmJsZeKAmXMgV2lkZSBGaWVsZCBQbGFuZXRhcnkgQ2FtZXJhIDIsIHdoaWNoIGFsc28gcmVzb2x2ZWQgdGhlIFBhcGlsbG9uIE5lYnVsYSBmb3IgdGhlIGZpcnN0IHRpbWUuICAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAyMjYiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFBlZXJzIGludG8gdGhlIFN0b3JtIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAxMy9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAxM350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMTMvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlJ3MgQ29zbWljIEF0bGFzIiwibmdjNDI0OCJdLCJ0aXRsZSI6Ikh1YmJsZSdzIENvc21pYyBBdGxhcyIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAxMyIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJNb3JwaG9sb2dpZXMsIG1hc3NlcywgYW5kIHN0cnVjdHVyZXMgLSBvaCwgbXkhICAgVGhpcyBiZWF1dGlmdWwgY2x1bXAgb2YgZ2xvd2luZyBnYXMsIGRhcmsgZHVzdCBhbmQgZ2xpdHRlcmluZyBzdGFycyBpcyB0aGUgc3BpcmFsIGdhbGF4eSBOR0MgNDI0OCwgbG9jYXRlZCBhYm91dCAyNCBtaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXkgaW4gdGhlIGNvbnN0ZWxsYXRpb24gb2YgQ2FuZXMgVmVuYXRpY2kgKFRoZSBIdW50aW5nIERvZ3MpLiAgVGhpcyBpbWFnZSB3YXMgcHJvZHVjZWQgYnkgdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgYXMgaXQgZW1iYXJrZWQgdXBvbiBjb21waWxpbmcgdGhlIGZpcnN0IEh1YmJsZSB1bHRyYXZpb2xldCDigJxhdGxhcyzigJ0gZm9yIHdoaWNoIHRoZSB0ZWxlc2NvcGUgdGFyZ2V0ZWQgNTAgbmVhcmJ5IHN0YXItZm9ybWluZyBnYWxheGllcy4gVGhlIGNvbGxlY3Rpb24gc3BhbnMgYWxsIGtpbmRzIG9mIGRpZmZlcmVudCBtb3JwaG9sb2dpZXMsIG1hc3NlcywgYW5kIHN0cnVjdHVyZXMuIFN0dWR5aW5nIHRoaXMgc2FtcGxlIGNhbiBoZWxwIHVzIHRvIHBpZWNlIHRvZ2V0aGVyIHRoZSBzdGFyLWZvcm1hdGlvbiBoaXN0b3J5IG9mIHRoZSBVbml2ZXJzZS4gIEJ5IGV4cGxvcmluZyBob3cgbWFzc2l2ZSBzdGFycyBmb3JtIGFuZCBldm9sdmUgd2l0aGluIHN1Y2ggZ2FsYXhpZXMsIGFzdHJvbm9tZXJzIGNhbiBsZWFybiBtb3JlIGFib3V0IGhvdywgd2hlbiwgYW5kIHdoZXJlIHN0YXIgZm9ybWF0aW9uIG9jY3VycywgaG93IHN0YXIgY2x1c3RlcnMgY2hhbmdlIG92ZXIgdGltZSwgYW5kIGhvdyB0aGUgcHJvY2VzcyBvZiBmb3JtaW5nIG5ldyBzdGFycyBpcyByZWxhdGVkIHRvIHRoZSBwcm9wZXJ0aWVzIG9mIGJvdGggdGhlIGhvc3QgZ2FsYXh5IGFuZCB0aGUgc3Vycm91bmRpbmcgaW50ZXJzdGVsbGFyIG1lZGl1bSAodGhlIGdhcyBhbmQgZHVzdCB0aGF0IGZpbGxzIHRoZSBzcGFjZSBiZXR3ZWVuIGluZGl2aWR1YWwgc3RhcnMpLiAgVGhpcyBnYWxheHkgd2FzIGltYWdlZCB3aXRoIG9ic2VydmF0aW9ucyBmcm9tIEh1YmJsZeKAmXMgV2lkZSBGaWVsZCBDYW1lcmEgMy4gIEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBICAiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2JlZGluMS9iZWRpbjF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2JlZGluMS9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJCZWRpbiBJIiwiR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyIiwiSHViYmxlIiwiSHViYmxlIFNwYWNlIFRlbGVzY29wZSIsIk5HQyA2NzUyIiwiZ2FsYXhpZXMiLCJ1bml2ZXJzZSJdLCJkZXNjcmlwdGlvbiI6IlRoaXMgaXMgYSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIG9mIGEgY29uY2VudHJhdGlvbiBvZiBzdGFycyB3aXRoaW4gdGhlIGdsb2J1bGFyIGNsdXN0ZXIgTkdDIDY3NTIuIEhpZGRlbiBhbW9uZyB0aGUgc3RhcnMgaXMgYW4gaW1hZ2Ugb2YgYSBiYWNrZ3JvdW5kIGdhbGF4eSB0aGF0IGlzIG11Y2ggZmFydGhlciBhd2F5LiBUaGUgZGltaW51dGl2ZSBnYWxheHksIG5hbWVkIGJ5IGl0cyBkaXNjb3ZlcmVycyBhcyBCZWRpbiAxLCBtZWFzdXJlcyBvbmx5IGFyb3VuZCAzLDAwMCBsaWdodC15ZWFycyBhdCBpdHMgZ3JlYXRlc3QgZXh0ZW50IOKAlCBhIGZyYWN0aW9uIG9mIHRoZSBzaXplIG9mIHRoZSBNaWxreSBXYXkuIE5vdCBvbmx5IGlzIGl0IHRpbnksIGJ1dCBpdCBpcyBhbHNvIGluY3JlZGlibHkgZmFpbnQuIFRoZXNlIHByb3BlcnRpZXMgbGVkIGFzdHJvbm9tZXJzIHRvIGNsYXNzaWZ5IGl0IGFzIGEgZHdhcmYgc3BoZXJvaWRhbCBnYWxheHkgdGhhdCBpcyBhcyBvbGQgYXMgdGhlIHVuaXZlcnNlLiAgTW9yZSBpbmZvOiBodHRwczovL2dvLm5hc2EuZ292LzJ0Q2F4R1MgIENyZWRpdHM6IE5BU0EsIEVTQSBhbmQgTC4gQmVkaW4gKEFzdHJvbm9taWNhbCBPYnNlcnZhdG9yeSBvZiBQYWR1YSwgSXRhbHkpIiwibmFzYV9pZCI6ImJlZGluMSIsImRhdGVfY3JlYXRlZCI6IjIwMTktMDEtMzFUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgQWNjaWRlbnRhbGx5IERpc2NvdmVycyBhIE5ldyBHYWxheHkgaW4gQ29zbWljIE5laWdoYm9yaG9vIiwiY2VudGVyIjoiR1NGQyIsInBob3RvZ3JhcGhlciI6Ikh1YmJsZSBTcGFjZSBUZWxlc2NvcGUifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIxNTEvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIxNTF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMTUxL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBTcGFjZSBUZWxlc2NvcGUiLCJzaGlueSIsInNwYWNlIiwibmFzYSIsInRlbGVzY29wZSIsImdhbGF4eSIsInNwYWNlc2h1dHRsZSIsImdvZGRhcmQiLCJodWJibGUiLCJoc3QiLCJzbTQiLCJodWJibGVzcGFjZXRlbGVzY29wZSIsInNwYWNlc2h1dHRsZWF0bGFudGlzIiwiZ29kZGFyZHNwYWNlZmxpZ2h0Y2VudGVyIiwic3RzMTI1Il0sInRpdGxlIjoiSHViYmxlIFNwYWNlIFRlbGVzY29wZSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjE1MSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbiBhIHBpY3R1cmUgc25hcHBlZCBieSBhIFNlcnZpY2luZyBNaXNzaW9uIDQgY3Jld21lbWJlciBqdXN0IGFmdGVyIHRoZSBTcGFjZSBTaHV0dGxlIEF0bGFudGlzIGNhcHR1cmVkIEh1YmJsZSB3aXRoIGl0cyByb2JvdGljIGFybSBvbiBNYXkgMTMsIDIwMDksIGJlZ2lubmluZyB0aGUgbWlzc2lvbiB0byB1cGdyYWRlIGFuZCByZXBhaXIgdGhlIHRlbGVzY29wZS4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIGEgcHJvamVjdCBvZiBpbnRlcm5hdGlvbmFsIGNvb3BlcmF0aW9uIGJldHdlZW4gTkFTQSBhbmQgdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeS4gTkFTQSdzIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciBtYW5hZ2VzIHRoZSB0ZWxlc2NvcGUuIFRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgY29uZHVjdHMgSHViYmxlIHNjaWVuY2Ugb3BlcmF0aW9ucy4gIEdvZGRhcmQgaXMgcmVzcG9uc2libGUgZm9yIEhTVCBwcm9qZWN0IG1hbmFnZW1lbnQsIGluY2x1ZGluZyBtaXNzaW9uIGFuZCBzY2llbmNlIG9wZXJhdGlvbnMsIHNlcnZpY2luZyBtaXNzaW9ucywgYW5kIGFsbCBhc3NvY2lhdGVkIGRldmVsb3BtZW50IGFjdGl2aXRpZXMuICBUbyBsZWFybiBtb3JlIGFib3V0IHRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGdvIGhlcmU6ICA8YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9tYWluL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9tYWluL2luZGV4Lmh0bWw8L2E+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAwMS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAwMX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMDEvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlJ3MgTWVnYW1hc2VyIEdhbGF4eSIsIm1jZzAxMzgwMDQiLCJtY2cwMTM4MDA1Il0sInRpdGxlIjoiSHViYmxlJ3MgTWVnYW1hc2VyIEdhbGF4eSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAwMSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJGZWFzdCB5b3VyIGV5ZXMgb24gSHViYmxlJ3MgTWVnYW1hc2VyIGdhbGF4eSEgICBQaGVub21lbmEgYWNyb3NzIHRoZSBVbml2ZXJzZSBlbWl0IHJhZGlhdGlvbiBzcGFubmluZyB0aGUgZW50aXJlIGVsZWN0cm9tYWduZXRpYyBzcGVjdHJ1bSDigJQgZnJvbSBoaWdoLWVuZXJneSBnYW1tYSByYXlzLCB3aGljaCBzdHJlYW0gb3V0IGZyb20gdGhlIG1vc3QgZW5lcmdldGljIGV2ZW50cyBpbiB0aGUgY29zbW9zLCB0byBsb3dlci1lbmVyZ3kgbWljcm93YXZlcyBhbmQgcmFkaW8gd2F2ZXMuICBNaWNyb3dhdmVzLCB0aGUgdmVyeSBzYW1lIHJhZGlhdGlvbiB0aGF0IGNhbiBoZWF0IHVwIHlvdXIgZGlubmVyLCBhcmUgcHJvZHVjZWQgYnkgYSBtdWx0aXR1ZGUgb2YgYXN0cm9waHlzaWNhbCBzb3VyY2VzLCBpbmNsdWRpbmcgc3Ryb25nIGVtaXR0ZXJzIGtub3duIGFzIG1hc2VycyAobWljcm93YXZlIGxhc2VycyksIGV2ZW4gc3Ryb25nZXIgZW1pdHRlcnMgd2l0aCB0aGUgc29tZXdoYXQgdmlsbGFpbm91cyBuYW1lIG9mIG1lZ2FtYXNlcnMgYW5kIHRoZSBjZW50ZXJzIG9mIHNvbWUgZ2FsYXhpZXMuIEVzcGVjaWFsbHkgaW50ZW5zZSBhbmQgbHVtaW5vdXMgZ2FsYWN0aWMgY2VudGVycyBhcmUga25vd24gYXMgYWN0aXZlIGdhbGFjdGljIG51Y2xlaS4gVGhleSBhcmUgaW4gdHVybiB0aG91Z2h0IHRvIGJlIGRyaXZlbiBieSB0aGUgcHJlc2VuY2Ugb2Ygc3VwZXJtYXNzaXZlIGJsYWNrIGhvbGVzLCB3aGljaCBkcmFnIHN1cnJvdW5kaW5nIG1hdGVyaWFsIGlud2FyZHMgYW5kIHNwaXQgb3V0IGJyaWdodCBqZXRzIGFuZCByYWRpYXRpb24gYXMgdGhleSBkbyBzby4gIFRoZSB0d28gZ2FsYXhpZXMgc2hvd24gaGVyZSwgaW1hZ2VkIGJ5IHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlLCBhcmUgbmFtZWQgTUNHKzAxLTM4LTAwNCAodGhlIHVwcGVyLCByZWQtdGludGVkIG9uZSkgYW5kIE1DRyswMS0zOC0wMDUgKHRoZSBsb3dlciwgYmx1ZS10aW50ZWQgb25lKS4gTUNHKzAxLTM4LTAwNSAoYWxzbyBrbm93biBhcyBOR0MgNTc2NUIpIGlzIGEgc3BlY2lhbCBraW5kIG9mIG1lZ2FtYXNlcjsgdGhlIGdhbGF4eeKAmXMgYWN0aXZlIGdhbGFjdGljIG51Y2xldXMgcHVtcHMgb3V0IGh1Z2UgYW1vdW50cyBvZiBlbmVyZ3ksIHdoaWNoIHN0aW11bGF0ZXMgY2xvdWRzIG9mIHN1cnJvdW5kaW5nIHdhdGVyLiBXYXRlcuKAmXMgY29uc3RpdHVlbnQgYXRvbXMgb2YgaHlkcm9nZW4gYW5kIG94eWdlbiBhcmUgYWJsZSB0byBhYnNvcmIgc29tZSBvZiB0aGlzIGVuZXJneSBhbmQgcmUtZW1pdCBpdCBhdCBzcGVjaWZpYyB3YXZlbGVuZ3Rocywgb25lIG9mIHdoaWNoIGZhbGxzIHdpdGhpbiB0aGUgbWljcm93YXZlIHJlZ2ltZSwgaW52aXNpYmxlIHRvIEh1YmJsZSBidXQgZGV0ZWN0YWJsZSBieSBtaWNyb3dhdmUgdGVsZXNjb3Blcy4gTUNHKzAxLTM4LTAwNSBpcyB0aHVzIGtub3duIGFzIGEgd2F0ZXIgbWVnYW1hc2VyISAgQXN0cm9ub21lcnMgY2FuIHVzZSBzdWNoIG9iamVjdHMgdG8gcHJvYmUgdGhlIGZ1bmRhbWVudGFsIHByb3BlcnRpZXMgb2YgdGhlIFVuaXZlcnNlLiBUaGUgbWljcm93YXZlIGVtaXNzaW9ucyBmcm9tIE1DRyswMS0zOC0wMDUgd2VyZSB1c2VkIHRvIGNhbGN1bGF0ZSBhIHJlZmluZWQgdmFsdWUgZm9yIHRoZSBIdWJibGUgY29uc3RhbnQsIGEgbWVhc3VyZSBvZiBob3cgZmFzdCB0aGUgVW5pdmVyc2UgaXMgZXhwYW5kaW5nLiBUaGlzIGNvbnN0YW50IGlzIG5hbWVkIGFmdGVyIHRoZSBhc3Ryb25vbWVyIHdob3NlIG9ic2VydmF0aW9ucyB3ZXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgZGlzY292ZXJ5IG9mIHRoZSBleHBhbmRpbmcgVW5pdmVyc2UgYW5kIGFmdGVyIHdob20gdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgd2FzIG5hbWVkLCBFZHdpbiBIdWJibGUuICAiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMjE5L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMjE5fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjIxOS9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUgT24gSXRzIFdheSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIyMTkiLCJkYXRlX2NyZWF0ZWQiOiIyMDA5LTA1LTIxVDAyOjQ0OjMxWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiVGhpcyBzdGlsbCBpbWFnZSBvZiB0aGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSB3YXMgY2FwdHVyZWQgYnkgYW4gU1RTLTEyNSBjcmV3IG1lbWJlciBhcyB0aGUgdHdvIHNwYWNlY3JhZnQgY29udGludWUgdGhlaXIgcmVsYXRpdmUgc2VwYXJhdGlvbi4gIER1cmluZyB0aGUgd2VlayBmaXZlIHNwYWNld2Fsa3Mgd2VyZSBwZXJmb3JtZWQgdG8gY29tcGxldGUgdGhlIGZpbmFsIHNlcnZpY2luZyBtaXNzaW9uIGZvciB0aGUgb3JiaXRhbCBvYnNlcnZhdG9yeS4gIFBob3RvIGNyZWRpdDogTkFTQSBNYXkgMTksIDIwMDkiLCJ0aXRsZSI6Ikh1YmJsZSBPbiBJdHMgV2F5IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDEzNy9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDEzN350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxMzcvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlJ3MgU2xpY2Ugb2YgU2FnaXR0YXJpdXMiXSwiZGVzY3JpcHRpb24iOiJUaGlzIHN0dW5uaW5nIGltYWdlLCBjYXB0dXJlZCBieSB0aGUgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZeKAmXMgQWR2YW5jZWQgQ2FtZXJhIGZvciBTdXJ2ZXlzIChBQ1MpLCBzaG93cyBwYXJ0IG9mIHRoZSBza3kgaW4gdGhlIGNvbnN0ZWxsYXRpb24gb2YgU2FnaXR0YXJpdXMgKFRoZSBBcmNoZXIpLiBUaGUgcmVnaW9uIGlzIHJlbmRlcmVkIGluIGV4cXVpc2l0ZSBkZXRhaWwg4oCUIGRlZXAgcmVkIGFuZCBicmlnaHQgYmx1ZSBzdGFycyBhcmUgc2NhdHRlcmVkIGFjcm9zcyB0aGUgZnJhbWUsIHNldCBhZ2FpbnN0IGEgYmFja2dyb3VuZCBvZiB0aG91c2FuZHMgb2YgbW9yZSBkaXN0YW50IHN0YXJzIGFuZCBnYWxheGllcy4gVHdvIGZlYXR1cmVzIGFyZSBwYXJ0aWN1bGFybHkgc3RyaWtpbmc6IHRoZSBjb2xvcnMgb2YgdGhlIHN0YXJzLCBhbmQgdGhlIGRyYW1hdGljIGNyb3NzZXMgdGhhdCBidXJzdCBmcm9tIHRoZSBjZW50ZXJzIG9mIHRoZSBicmlnaHRlc3QgYm9kaWVzLiAgV2hpbGUgc29tZSBvZiB0aGUgY29sb3JzIGluIHRoaXMgZnJhbWUgaGF2ZSBiZWVuIGVuaGFuY2VkIGFuZCB0d2Vha2VkIGR1cmluZyB0aGUgcHJvY2VzcyBvZiBjcmVhdGluZyB0aGUgaW1hZ2UgZnJvbSB0aGUgb2JzZXJ2YXRpb25hbCBkYXRhLCBkaWZmZXJlbnQgc3RhcnMgZG8gaW5kZWVkIGdsb3cgaW4gZGlmZmVyZW50IGNvbG9ycy4gU3RhcnMgZGlmZmVyIGluIGNvbG9yIGFjY29yZGluZyB0byB0aGVpciBzdXJmYWNlIHRlbXBlcmF0dXJlOiB2ZXJ5IGhvdCBzdGFycyBhcmUgYmx1ZSBvciB3aGl0ZSwgd2hpbGUgY29vbGVyIHN0YXJzIGFyZSByZWRkZXIuIFRoZXkgbWF5IGJlIGNvb2xlciBiZWNhdXNlIHRoZXkgYXJlIHNtYWxsZXIsIG9yIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBvbGQgYW5kIGhhdmUgZW50ZXJlZCB0aGUgcmVkIGdpYW50IHBoYXNlLCB3aGVuIGFuIG9sZCBzdGFyIGV4cGFuZHMgYW5kIGNvb2xzIGRyYW1hdGljYWxseSBhcyBpdHMgY29yZSBjb2xsYXBzZXMuICBUaGUgY3Jvc3NlcyBhcmUgbm90aGluZyB0byBkbyB3aXRoIHRoZSBzdGFycyB0aGVtc2VsdmVzLCBhbmQsIGJlY2F1c2UgSHViYmxlIG9yYml0cyBhYm92ZSBFYXJ0aOKAmXMgYXRtb3NwaGVyZSwgbm9yIGFyZSB0aGV5IGR1ZSB0byBhbnkga2luZCBvZiBhdG1vc3BoZXJpYyBkaXN0dXJiYW5jZS4gVGhleSBhcmUgYWN0dWFsbHkga25vd24gYXMgZGlmZnJhY3Rpb24gc3Bpa2VzLCBhbmQgYXJlIGNhdXNlZCBieSB0aGUgc3RydWN0dXJlIG9mIHRoZSB0ZWxlc2NvcGUgaXRzZWxmLiAgTGlrZSBhbGwgYmlnIG1vZGVybiB0ZWxlc2NvcGVzLCBIdWJibGUgdXNlcyBtaXJyb3JzIHRvIGNhcHR1cmUgbGlnaHQgYW5kIGZvcm0gaW1hZ2VzLiBJdHMgc2Vjb25kYXJ5IG1pcnJvciBpcyBzdXBwb3J0ZWQgYnkgc3RydXRzLCBjYWxsZWQgdGVsZXNjb3BlIHNwaWRlcnMsIGFycmFuZ2VkIGluIGEgY3Jvc3MgZm9ybWF0aW9uLCBhbmQgdGhleSBkaWZmcmFjdCB0aGUgaW5jb21pbmcgbGlnaHQuIERpZmZyYWN0aW9uIGlzIHRoZSBzbGlnaHQgYmVuZGluZyBvZiBsaWdodCBhcyBpdCBwYXNzZXMgbmVhciB0aGUgZWRnZSBvZiBhbiBvYmplY3QuIEV2ZXJ5IGNyb3NzIGluIHRoaXMgaW1hZ2UgaXMgZHVlIHRvIGEgc2luZ2xlIHNldCBvZiBzdHJ1dHMgd2l0aGluIEh1YmJsZSBpdHNlbGYhIFdoaWxzdCB0aGUgc3Bpa2VzIGFyZSB0ZWNobmljYWxseSBhbiBpbmFjY3VyYWN5LCBtYW55IGFzdHJvcGhvdG9ncmFwaGVycyBjaG9vc2UgdG8gZW1waGFzaXplIGFuZCBjZWxlYnJhdGUgdGhlbSBhcyBhIGJlYXV0aWZ1bCBmZWF0dXJlIG9mIHRoZWlyIGltYWdlcy4gIEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTM3IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSdzIFNsaWNlIG9mIFNhZ2l0dGFyaXVzIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM5NC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM5NH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzOTQvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNlZXMgYSBMZWdpb24gb2YgR2FsYXhpZXMiLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiLCJuYXNhZ29kZGFyZCIsImFiZWxsMjc0NCJdLCJkZXNjcmlwdGlvbiI6IlBlZXJpbmcgZGVlcCBpbnRvIHRoZSBlYXJseSB1bml2ZXJzZSwgdGhpcyBwaWN0dXJlc3F1ZSBwYXJhbGxlbCBmaWVsZCBvYnNlcnZhdGlvbiBmcm9tIHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIHJldmVhbHMgdGhvdXNhbmRzIG9mIGNvbG9yZnVsIGdhbGF4aWVzIHN3aW1taW5nIGluIHRoZSBpbmt5IGJsYWNrbmVzcyBvZiBzcGFjZS4gQSBmZXcgZm9yZWdyb3VuZCBzdGFycyBmcm9tIG91ciBvd24gZ2FsYXh5LCB0aGUgTWlsa3kgV2F5LCBhcmUgYWxzbyB2aXNpYmxlLiAgSW4gT2N0b2JlciAyMDEzIEh1YmJsZeKAmXMgV2lkZSBGaWVsZCBDYW1lcmEgMyAoV0ZDMykgYW5kIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cyAoQUNTKSBiZWdhbiBvYnNlcnZpbmcgdGhpcyBwb3J0aW9uIG9mIHNreSBhcyBwYXJ0IG9mIHRoZSBGcm9udGllciBGaWVsZHMgcHJvZ3JhbS4gVGhpcyBzcGVjdGFjdWxhciBza3lzY2FwZSB3YXMgY2FwdHVyZWQgZHVyaW5nIHRoZSBzdHVkeSBvZiB0aGUgZ2lhbnQgZ2FsYXh5IGNsdXN0ZXIgQWJlbGwgMjc0NCwgb3RoZXJ3aXNlIGtub3duIGFzIFBhbmRvcmHigJlzIEJveC4gV2hpbGUgb25lIG9mIEh1YmJsZeKAmXMgY2FtZXJhcyBjb25jZW50cmF0ZWQgb24gQWJlbGwgMjc0NCwgdGhlIG90aGVyIGNhbWVyYSB2aWV3ZWQgdGhpcyBhZGphY2VudCBwYXRjaCBvZiBza3kgbmVhciB0byB0aGUgY2x1c3Rlci4gIENvbnRhaW5pbmcgY291bnRsZXNzIGdhbGF4aWVzIG9mIHZhcmlvdXMgYWdlcywgc2hhcGVzIGFuZCBzaXplcywgdGhpcyBwYXJhbGxlbCBmaWVsZCBvYnNlcnZhdGlvbiBpcyBuZWFybHkgYXMgZGVlcCBhcyB0aGUgSHViYmxlIFVsdHJhLURlZXAgRmllbGQuIEluIGFkZGl0aW9uIHRvIHNob3djYXNpbmcgdGhlIHN0dW5uaW5nIGJlYXV0eSBvZiB0aGUgZGVlcCB1bml2ZXJzZSBpbiBpbmNyZWRpYmxlIGRldGFpbCwgdGhpcyBwYXJhbGxlbCBmaWVsZCDigJQgd2hlbiBjb21wYXJlZCB0byBvdGhlciBkZWVwIGZpZWxkcyDigJQgd2lsbCBoZWxwIGFzdHJvbm9tZXJzIHVuZGVyc3RhbmQgaG93IHNpbWlsYXIgdGhlIHVuaXZlcnNlIGxvb2tzIGluIGRpZmZlcmVudCBkaXJlY3Rpb25zLiAgSW1hZ2UgY3JlZGl0OiBOQVNBLCBFU0EgYW5kIHRoZSBIU1QgRnJvbnRpZXIgRmllbGRzIHRlYW0gKFNUU2NJKSwgICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzk0IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIGEgTGVnaW9uIG9mIEdhbGF4aWVzIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTc1Ny9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTc1N350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE3NTcvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNwaWVzIGEgVUZPIiwic3BhY2UiLCJuYXNhIiwiZ2FsYXh5IiwiaHViYmxlIiwiaHN0IiwidWZvZ2FsYXh5Il0sInRpdGxlIjoiSHViYmxlIFNwaWVzIGEgVUZPIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNzU3IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGhhcyBzcG90dGVkIGEgVUZPIOKAlCB3ZWxsLCB0aGUgVUZPIEdhbGF4eSwgdG8gYmUgcHJlY2lzZS4gTkdDIDI2ODMgaXMgYSBzcGlyYWwgZ2FsYXh5IHNlZW4gYWxtb3N0IGVkZ2Utb24sIGdpdmluZyBpdCB0aGUgc2hhcGUgb2YgYSBjbGFzc2ljIHNjaWVuY2UgZmljdGlvbiBzcGFjZXNoaXAuIFRoaXMgaXMgd2h5IHRoZSBhc3Ryb25vbWVycyBhdCB0aGUgQXN0cm9uYXV0IE1lbW9yaWFsIFBsYW5ldGFyaXVtIGFuZCBPYnNlcnZhdG9yeSBnYXZlIGl0IHRoaXMgYXR0ZW50aW9uLWdyYWJiaW5nIG5pY2tuYW1lLiBXaGlsZSBhIGJpcmTigJlzIGV5ZSB2aWV3IGxldHMgdXMgc2VlIHRoZSBkZXRhaWxlZCBzdHJ1Y3R1cmUgb2YgYSBnYWxheHkgKHN1Y2ggYXMgdGhpcyBIdWJibGUgaW1hZ2Ugb2YgYSBiYXJyZWQgc3BpcmFsKSwgYSBzaWRlLW9uIHZpZXcgaGFzIGl0cyBvd24gcGVya3MuIEluIHBhcnRpY3VsYXIsIGl0IGdpdmVzIGFzdHJvbm9tZXJzIGEgZ3JlYXQgb3Bwb3J0dW5pdHkgdG8gc2VlIHRoZSBkZWxpY2F0ZSBkdXN0eSBsYW5lcyBvZiB0aGUgc3BpcmFsIGFybXMgc2lsaG91ZXR0ZWQgYWdhaW5zdCB0aGUgZ29sZGVuIGhhemUgb2YgdGhlIGdhbGF4eeKAmXMgY29yZS4gSW4gYWRkaXRpb24sIGJyaWxsaWFudCBjbHVzdGVycyBvZiB5b3VuZyBibHVlIHN0YXJzIHNoaW5lIHNjYXR0ZXJlZCB0aHJvdWdob3V0IHRoZSBkaXNjLCBtYXBwaW5nIHRoZSBnYWxheHnigJlzIHN0YXItZm9ybWluZyByZWdpb25zLiBQZXJoYXBzIHN1cnByaXNpbmdseSwgc2lkZS1vbiB2aWV3cyBvZiBnYWxheGllcyBsaWtlIHRoaXMgb25lIGRvIG5vdCBwcmV2ZW50IGFzdHJvbm9tZXJzIGZyb20gZGVkdWNpbmcgdGhlaXIgc3RydWN0dXJlcy4gU3R1ZGllcyBvZiB0aGUgcHJvcGVydGllcyBvZiB0aGUgbGlnaHQgY29taW5nIGZyb20gTkdDIDI2ODMgc3VnZ2VzdCB0aGF0IHRoaXMgaXMgYSBiYXJyZWQgc3BpcmFsIGdhbGF4eSwgZXZlbiB0aG91Z2ggdGhlIGFuZ2xlIHdlIHNlZSBpdCBhdCBkb2VzIG5vdCBsZXQgdXMgc2VlIHRoaXMgZGlyZWN0bHkuIE5HQyAyNjgzLCBkaXNjb3ZlcmVkIG9uIDUgRmVicnVhcnkgMTc4OCBieSB0aGUgZmFtb3VzIGFzdHJvbm9tZXIgV2lsbGlhbSBIZXJzY2hlbCwgbGllcyBpbiB0aGUgTm9ydGhlcm4gY29uc3RlbGxhdGlvbiBvZiBMeW54LiBBIGNvbnN0ZWxsYXRpb24gbmFtZWQgbm90IGJlY2F1c2Ugb2YgaXRzIHJlc2VtYmxhbmNlIHRvIHRoZSBmZWxpbmUgYW5pbWFsLCBidXQgYmVjYXVzZSBpdCBpcyBmYWlybHkgZmFpbnQsIHJlcXVpcmluZyB0aGUg4oCcc2Vuc2l0aXZlIGV5ZXMgb2YgYSBjYXTigJ0gdG8gZGlzY2VybiBpdC4gQW5kIHdoZW4geW91IG1hbmFnZSB0byBnZXQgYSBsb29rIGF0IGl0LCB5b3XigJlsbCBmaW5kIHRyZWFzdXJlcyBsaWtlIHRoaXMsIG1ha2luZyBpdCB3ZWxsIHdvcnRoIHRoZSBlZmZvcnQuIFRoaXMgaW1hZ2UgaXMgcHJvZHVjZWQgZnJvbSB0d28gYWRqYWNlbnQgZmllbGRzIG9ic2VydmVkIGluIHZpc2libGUgYW5kIGluZnJhcmVkIGxpZ2h0IGJ5IEh1YmJsZeKAmXMgQWR2YW5jZWQgQ2FtZXJhIGZvciBTdXJ2ZXlzLiBBIG5hcnJvdyBzdHJpcCB3aGljaCBhcHBlYXJzIHNsaWdodGx5IGJsdXJyZWQgYW5kIGNyb3NzZXMgbW9zdCB0aGUgaW1hZ2UgaG9yaXpvbnRhbGx5IGlzIGEgcmVzdWx0IG9mIGEgZ2FwIGJldHdlZW4gSHViYmxl4oCZcyBkZXRlY3RvcnMuIFRoaXMgc3RyaXAgaGFzIGJlZW4gcGF0Y2hlZCB1c2luZyBpbWFnZXMgZnJvbSBvYnNlcnZhdGlvbnMgb2YgdGhlIGdhbGF4eSBtYWRlIGJ5IGdyb3VuZC1iYXNlZCB0ZWxlc2NvcGVzLCB3aGljaCBzaG93IHNpZ25pZmljYW50bHkgbGVzcyBkZXRhaWwuIFRoZSBmaWVsZCBvZiB2aWV3IGlzIGFwcHJveGltYXRlbHkgNi41IGJ5IDMuMyBhcmNtaW51dGVzLiAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTkwL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTkwfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk5MC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUgUGFpbnRzIGEgU3BhdHRlcmluZyBvZiBCbHVlIl0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk5MCIsImRhdGVfY3JlYXRlZCI6IjIwMTQtMDktMTJUMTU6NDU6MDhaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgUGFpbnRzIGEgU3BhdHRlcmluZyBvZiBCbHVlIiwiZGVzY3JpcHRpb24iOiJGYXIgYmV5b25kIHRoZSBzdGFycyBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBMZW8gKFRoZSBMaW9uKSBpcyBpcnJlZ3VsYXIgZ2FsYXh5IElDIDU1OS4gIElDIDU1OSBpcyBub3QgeW91ciBldmVyeWRheSBnYWxheHkuIFdpdGggaXRzIGlycmVndWxhciBzaGFwZSBhbmQgYnJpZ2h0IGJsdWUgc3BhdHRlcmluZyBvZiBzdGFycywgaXQgaXMgYSBmYXNjaW5hdGluZyBnYWxhY3RpYyBhbm9tYWx5LiBJdCBtYXkgbG9vayBsaWtlIHNwYXJzZSBjbG91ZCwgYnV0IGl0IGlzIGluIGZhY3QgZnVsbCBvZiBnYXMgYW5kIGR1c3Qgd2hpY2ggaXMgc3Bhd25pbmcgbmV3IHN0YXJzLiAgRGlzY292ZXJlZCBpbiAxODkzLCBJQyA1NTkgbGFja3MgdGhlIHN5bW1ldHJpY2FsIHNwaXJhbCBhcHBlYXJhbmNlIG9mIHNvbWUgb2YgaXRzIGdhbGFjdGljIHBlZXJzIGFuZCBub3QgZG9lcyBub3QgY29uZm9ybSB0byBhIHJlZ3VsYXIgc2hhcGUuIEl0IGlzIGFjdHVhbGx5IGNsYXNzaWZpZWQgYXMgYSDigJx0eXBlIFNt4oCdIGdhbGF4eSDigJQgYW4gaXJyZWd1bGFyIGdhbGF4eSB3aXRoIHNvbWUgZXZpZGVuY2UgZm9yIGEgc3BpcmFsIHN0cnVjdHVyZS4gIElycmVndWxhciBnYWxheGllcyBtYWtlIHVwIGFib3V0IGEgcXVhcnRlciBvZiBhbGwga25vd24gZ2FsYXhpZXMgYW5kIGRvIG5vdCBmYWxsIGludG8gYW55IG9mIHRoZSByZWd1bGFyIGNsYXNzZXMgb2YgdGhlIEh1YmJsZSBzZXF1ZW5jZS4gTW9zdCBvZiB0aGVzZSB1bmlxdWVseSBzaGFwZWQgZ2FsYXhpZXMgd2VyZSBub3QgYWx3YXlzIHNvIOKAlCBJQyA1NTkgbWF5IGhhdmUgb25jZSBiZWVuIGEgY29udmVudGlvbmFsIHNwaXJhbCBnYWxheHkgdGhhdCB3YXMgdGhlbiBkaXN0b3J0ZWQgYW5kIHR3aXN0ZWQgYnkgdGhlIGdyYXZpdHkgb2YgYSBuZWFyYnkgY29zbWljIGNvbXBhbmlvbi4gIFRoaXMgaW1hZ2UsIGNhcHR1cmVkIGJ5IHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3Bl4oCZcyBXaWRlIEZpZWxkIENhbWVyYSAzLCBjb21iaW5lcyBhIHdpZGUgcmFuZ2Ugb2Ygd2F2ZWxlbmd0aHMgc3Bhbm5pbmcgdGhlIHVsdHJhdmlvbGV0LCBvcHRpY2FsLCBhbmQgaW5mcmFyZWQgcGFydHMgb2YgdGhlIHNwZWN0cnVtLiAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlLCBOQVNBLCBELiBDYWx6ZXR0aSAoVU1hc3MpIGFuZCB0aGUgTEVHVVMgVGVhbSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+IDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyYW0uY29tL25hc2Fnb2RkYXJkP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDQwOS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDQwOX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA0MDkvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlJ3MgQmx1ZSBCdWJibGUiLCJ3cjMxYSJdLCJ0aXRsZSI6Ikh1YmJsZSdzIEJsdWUgQnViYmxlIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDA5IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IiBBIGxhcmdlIGJsdWUgYnViYmxlIHdpdGggYSBicmlnaHQgc3RhciBpbiB0aGUgY2VudGVyIG9uIGEgYmxhY2sgYmFja2dyb3VuZCBmaWxsZWQgd2l0aCBzdGFycyAgU3BhcmtsaW5nIGF0IHRoZSBjZW50ZXIgb2YgdGhpcyBiZWF1dGlmdWwgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSBpcyBhIFdvbGbigJNSYXlldCBzdGFyIGtub3duIGFzIFdSIDMxYSwgbG9jYXRlZCBhYm91dCAzMCwwMDAgbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBDYXJpbmEgKFRoZSBLZWVsKS4gIFRoZSBkaXN0aW5jdGl2ZSBibHVlIGJ1YmJsZSBhcHBlYXJpbmcgdG8gZW5jaXJjbGUgV1IgMzFhIGlzIGEgV29sZuKAk1JheWV0IG5lYnVsYSDigJQgYW4gaW50ZXJzdGVsbGFyIGNsb3VkIG9mIGR1c3QsIGh5ZHJvZ2VuLCBoZWxpdW0gYW5kIG90aGVyIGdhc2VzLiBDcmVhdGVkIHdoZW4gc3BlZWR5IHN0ZWxsYXIgd2luZHMgaW50ZXJhY3Qgd2l0aCB0aGUgb3V0ZXIgbGF5ZXJzIG9mIGh5ZHJvZ2VuIGVqZWN0ZWQgYnkgV29sZuKAk1JheWV0IHN0YXJzLCB0aGVzZSBuZWJ1bGFlIGFyZSBmcmVxdWVudGx5IHJpbmctc2hhcGVkIG9yIHNwaGVyaWNhbC4gVGhlIGJ1YmJsZSDigJQgZXN0aW1hdGVkIHRvIGhhdmUgZm9ybWVkIGFyb3VuZCAyMCwwMDAgeWVhcnMgYWdvIOKAlCBpcyBleHBhbmRpbmcgYXQgYSByYXRlIG9mIGFyb3VuZCAyMjAsMDAwIGtpbG9tZXRlcnMgKDEzNiw3MDAgbWlsZXMpIHBlciBob3VyISAgVW5mb3J0dW5hdGVseSwgdGhlIGxpZmVjeWNsZSBvZiBhIFdvbGbigJNSYXlldCBzdGFyIGlzIG9ubHkgYSBmZXcgaHVuZHJlZCB0aG91c2FuZCB5ZWFycyDigJQgdGhlIGJsaW5rIG9mIGFuIGV5ZSBpbiBjb3NtaWMgdGVybXMuIERlc3BpdGUgYmVnaW5uaW5nIGxpZmUgd2l0aCBhIG1hc3MgYXQgbGVhc3QgMjAgdGltZXMgdGhhdCBvZiB0aGUgc3VuLCBXb2xm4oCTUmF5ZXQgc3RhcnMgdHlwaWNhbGx5IGxvc2UgaGFsZiB0aGVpciBtYXNzIGluIGxlc3MgdGhhbiAxMDAsMDAwIHllYXJzLiBBbmQgV1IgMzFhIGlzIG5vIGV4Y2VwdGlvbiB0byB0aGlzIGNhc2UuIEl0IHdpbGwsIHRoZXJlZm9yZSwgZXZlbnR1YWxseSBlbmQgaXRzIGxpZmUgYXMgYSBzcGVjdGFjdWxhciBzdXBlcm5vdmEsIGFuZCB0aGUgc3RlbGxhciBtYXRlcmlhbCBleHBlbGxlZCBmcm9tIGl0cyBleHBsb3Npb24gd2lsbCBsYXRlciBub3VyaXNoIGEgbmV3IGdlbmVyYXRpb24gb2Ygc3RhcnMgYW5kIHBsYW5ldHMuICBJbWFnZSBjcmVkaTogRVNBL0h1YmJsZSAmYW1wOyBOQVNBLCBBY2tub3dsZWRnZW1lbnQ6IEp1ZHkgU2NobWlkdCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDExNTIvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDExNTJ+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMTUyL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZeKAmXMgY3Jvc3Mtc2VjdGlvbiBvZiB0aGUgY29zbW9zIl0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTE1MiIsImRhdGVfY3JlYXRlZCI6IjIwMTQtMDQtMTdUMTQ6MTk6MzhaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGlzIG5ldyBIdWJibGUgaW1hZ2Ugc2hvd2Nhc2VzIGEgcmVtYXJrYWJsZSB2YXJpZXR5IG9mIG9iamVjdHMgYXQgZGlmZmVyZW50IGRpc3RhbmNlcyBmcm9tIHVzLCBleHRlbmRpbmcgYmFjayBvdmVyIGhhbGZ3YXkgdG8gdGhlIGVkZ2Ugb2YgdGhlIG9ic2VydmFibGUgVW5pdmVyc2UuIFRoZSBnYWxheGllcyBpbiB0aGlzIGltYWdlIG1vc3RseSBsaWUgYWJvdXQgZml2ZSBiaWxsaW9uIGxpZ2h0LXllYXJzIGZyb20gRWFydGggYnV0IHRoZSBmaWVsZCBhbHNvIGNvbnRhaW5zIG90aGVyIG9iamVjdHMsIGJvdGggc2lnbmlmaWNhbnRseSBjbG9zZXIgYW5kIGZhciBtb3JlIGRpc3RhbnQuICBTdHVkaWVzIG9mIHRoaXMgcmVnaW9uIG9mIHRoZSBza3kgaGF2ZSBzaG93biB0aGF0IG1hbnkgb2YgdGhlIG9iamVjdHMgdGhhdCBhcHBlYXIgdG8gbGllIGNsb3NlIHRvZ2V0aGVyIG1heSBhY3R1YWxseSBiZSBiaWxsaW9ucyBvZiBsaWdodC15ZWFycyBhcGFydC4gVGhpcyBpcyBiZWNhdXNlIHNldmVyYWwgZ3JvdXBzIG9mIGdhbGF4aWVzIGxpZSBhbG9uZyBvdXIgbGluZSBvZiBzaWdodCwgY3JlYXRpbmcgc29tZXRoaW5nIG9mIGFuIG9wdGljYWwgaWxsdXNpb24uIEh1YmJsZeKAmXMgY3Jvc3Mtc2VjdGlvbiBvZiB0aGUgVW5pdmVyc2UgaXMgY29tcGxldGVkIGJ5IGRpc3RvcnRlZCBpbWFnZXMgb2YgZ2FsYXhpZXMgaW4gdGhlIHZlcnkgZGlzdGFudCBiYWNrZ3JvdW5kLiAgVGhlc2Ugb2JqZWN0cyBhcmUgc29tZXRpbWVzIGRpc3RvcnRlZCBkdWUgdG8gYSBwcm9jZXNzIGNhbGxlZCBncmF2aXRhdGlvbmFsIGxlbnNpbmcsIGFuIGV4dHJlbWVseSB2YWx1YWJsZSB0ZWNobmlxdWUgaW4gYXN0cm9ub215IGZvciBzdHVkeWluZyB2ZXJ5IGRpc3RhbnQgb2JqZWN0cyBbMV0uIFRoaXMgbGVuc2luZyBpcyBjYXVzZWQgYnkgdGhlIGJlbmRpbmcgb2YgdGhlIHNwYWNlLXRpbWUgY29udGludXVtIGJ5IG1hc3NpdmUgZ2FsYXhpZXMgbHlpbmcgY2xvc2UgdG8gb3VyIGxpbmUgb2Ygc2lnaHQgdG8gZGlzdGFudCBvYmplY3RzLiAgT25lIG9mIHRoZSBsZW5zIHN5c3RlbXMgdmlzaWJsZSBoZXJlIGlzIGNhbGxlZCBDTEFTUyBCMTYwOCs2NTYsIHdoaWNoIGFwcGVhcnMgYXMgYSBzbWFsbCBsb29wIGluIHRoZSBjZW50cmUgb2YgdGhlIGltYWdlLiBJdCBmZWF0dXJlcyB0d28gZm9yZWdyb3VuZCBnYWxheGllcyBkaXN0b3J0aW5nIGFuZCBhbXBsaWZ5aW5nIHRoZSBsaWdodCBvZiBhIGRpc3RhbnQgcXVhc2FyIHRoZSBrbm93biBhcyBRU08tMTYwOTEzKzY1MzIyOC4gVGhlIGxpZ2h0IGZyb20gdGhpcyBicmlnaHQgZGlzYyBvZiBtYXR0ZXIsIHdoaWNoIGlzIGN1cnJlbnRseSBmYWxsaW5nIGludG8gYSBibGFjayBob2xlLCBoYXMgdGFrZW4gbmluZSBiaWxsaW9uIHllYXJzIHRvIHJlYWNoIHVzIOKAlCB0d28gdGhpcmRzIG9mIHRoZSBhZ2Ugb2YgdGhlIFVuaXZlcnNlLiAgQXMgd2VsbCBhcyBDTEFTUyBCMTYwOCs2NTYsIGFzdHJvbm9tZXJzIGhhdmUgaWRlbnRpZmllZCB0d28gb3RoZXIgZ3Jhdml0YXRpb25hbCBsZW5zZXMgd2l0aGluIHRoaXMgaW1hZ2UuIFR3byBnYWxheGllcywgZHViYmVkIEZyZWQgYW5kIEdpbmdlciBieSB0aGUgcmVzZWFyY2hlcnMgd2hvIHN0dWRpZWQgdGhlbSwgY29udGFpbiBlbm91Z2ggbWFzcyB0byB2aXNpYmx5IGRpc3RvcnQgdGhlIGxpZ2h0IGZyb20gb2JqZWN0cyBiZWhpbmQgdGhlbS4gRnJlZCwgYWxzbyBrbm93biBtb3JlIHByb3NhaWNhbGx5IGFzIFtGTUsyMDA2XSBBQ1MgSjE2MDkxOSs2NTMyLCBsaWVzIG5lYXIgdGhlIGxlbnMgZ2FsYXhpZXMgaW4gQ0xBU1MgQjE2MDgrNjU2LCB3aGlsZSBHaW5nZXIgKFtGTUsyMDA2XSBBQ1MgSjE2MDkxMCs2NTMyKSBpcyBtYXJrZWRseSBjbG9zZXIgdG8gdXMuIERlc3BpdGUgdGhlaXIgZGlmZmVyZW50IGRpc3RhbmNlcyBmcm9tIHVzLCBib3RoIGNhbiBiZSBzZWVuIG5lYXIgdG8gQ0xBU1MgQjE2MDgrNjU2IGluIHRoZSBjZW50cmFsIHJlZ2lvbiBvZiB0aGlzIEh1YmJsZSBpbWFnZS4gIFRvIGNhcHR1cmUgZGlzdGFudCBhbmQgZGltIG9iamVjdHMgbGlrZSB0aGVzZSwgSHViYmxlIHJlcXVpcmVkIGEgbG9uZyBleHBvc3VyZS4gVGhlIGltYWdlIGlzIG1hZGUgdXAgb2YgdmlzaWJsZSBhbmQgaW5mcmFyZWQgb2JzZXJ2YXRpb25zIHdpdGggYSB0b3RhbCBleHBvc3VyZSB0aW1lIG9mIDE0IGhvdXJzLiAgTW9yZSBpbmZvOiA8YSBocmVmPVwiaHR0cDovL3d3dy5zcGFjZXRlbGVzY29wZS5vcmcvbmV3cy9oZWljMTQwOC9cIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5zcGFjZXRlbGVzY29wZS5vcmcvbmV3cy9oZWljMTQwOC88L2E+ICBDcmVkaXQ6IE5BU0EvRVNBL0h1YmJsZSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyYW0uY29tL25hc2Fnb2RkYXJkP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwidGl0bGUiOiJIdWJibGXigJlzIGNyb3NzLXNlY3Rpb24gb2YgdGhlIGNvc21vcyIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5NjMvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5NjN+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTYzL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBDYXB0dXJlcyBDb3NtaWMgSWNlIFNjdWxwdHVyZXMiLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiXSwidGl0bGUiOiJIdWJibGUgQ2FwdHVyZXMgQ29zbWljIEljZSBTY3VscHR1cmVzIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTYzIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6Ik5BU0EgaW1hZ2UgcmVsZWFzZSBTZXB0ZW1iZXIgMTYsIDIwMTAgIEVuam95aW5nIGEgZnJvemVuIHRyZWF0IG9uIGEgaG90IHN1bW1lciBkYXkgY2FuIGxlYXZlIGEgc3RpY2t5IG1lc3MgYXMgaXQgbWVsdHMgaW4gdGhlIFN1biBhbmQgZGVmb3Jtcy4gSW4gdGhlIGNvbGQgdmFjdXVtIG9mIHNwYWNlLCB0aGVyZSBpcyBubyBlZGlibGUgaWNlIGNyZWFtLCBidXQgdGhlcmUgaXMgcmFkaWF0aW9uIGZyb20gbWFzc2l2ZSBzdGFycyB0aGF0IGlzIGNhcnZpbmcgYXdheSBhdCBjb2xkIG1vbGVjdWxhciBjbG91ZHMsIGNyZWF0aW5nIGJpemFycmUsIGZhbnRhc3ktbGlrZSBzdHJ1Y3R1cmVzLiAgVGhlc2Ugb25lLWxpZ2h0LXllYXItdGFsbCBwaWxsYXJzIG9mIGNvbGQgaHlkcm9nZW4gYW5kIGR1c3QsIGltYWdlZCBieSB0aGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSwgYXJlIGxvY2F0ZWQgaW4gdGhlIENhcmluYSBOZWJ1bGEuIFZpb2xlbnQgc3RlbGxhciB3aW5kcyBhbmQgcG93ZXJmdWwgcmFkaWF0aW9uIGZyb20gbWFzc2l2ZSBzdGFycyBhcmUgc2N1bHB0aW5nIHRoZSBzdXJyb3VuZGluZyBuZWJ1bGEuIEluc2lkZSB0aGUgZGVuc2Ugc3RydWN0dXJlcywgbmV3IHN0YXJzIG1heSBiZSBib3JuLiAgVGhpcyBpbWFnZSBvZiBkdXN0IHBpbGxhcnMgaW4gdGhlIENhcmluYSBOZWJ1bGEgaXMgYSBjb21wb3NpdGUgb2YgMjAwNSBvYnNlcnZhdGlvbnMgdGFrZW4gb2YgdGhlIHJlZ2lvbiBpbiBoeWRyb2dlbiBsaWdodCAobGlnaHQgZW1pdHRlZCBieSBoeWRyb2dlbiBhdG9tcykgYWxvbmcgd2l0aCAyMDEwIG9ic2VydmF0aW9ucyB0YWtlbiBpbiBveHlnZW4gbGlnaHQgKGxpZ2h0IGVtaXR0ZWQgYnkgb3h5Z2VuIGF0b21zKSwgYm90aCB0aW1lcyB3aXRoIEh1YmJsZSdzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cy4gVGhlIGltbWVuc2UgQ2FyaW5hIE5lYnVsYSBpcyBhbiBlc3RpbWF0ZWQgNyw1MDAgbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgc291dGhlcm4gY29uc3RlbGxhdGlvbiBDYXJpbmEuICBUaGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpcyBhIHByb2plY3Qgb2YgaW50ZXJuYXRpb25hbCBjb29wZXJhdGlvbiBiZXR3ZWVuIE5BU0EgYW5kIHRoZSBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kuIE5BU0EncyBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXIgbWFuYWdlcyB0aGUgdGVsZXNjb3BlLiBUaGUgU3BhY2UgVGVsZXNjb3BlIFNjaWVuY2UgSW5zdGl0dXRlIChTVFNjSSkgY29uZHVjdHMgSHViYmxlIHNjaWVuY2Ugb3BlcmF0aW9ucy4gU1RTY0kgaXMgb3BlcmF0ZWQgZm9yIE5BU0EgYnkgdGhlIEFzc29jaWF0aW9uIG9mIFVuaXZlcnNpdGllcyBmb3IgUmVzZWFyY2ggaW4gQXN0cm9ub215LCBJbmMuIGluIFdhc2hpbmd0b24sIEQuQy4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gIGlzIGhvbWUgdG8gdGhlIG5hdGlvbidzIGxhcmdlc3Qgb3JnYW5pemF0aW9uIG9mIGNvbWJpbmVkIHNjaWVudGlzdHMsIGVuZ2luZWVycyBhbmQgdGVjaG5vbG9naXN0cyB0aGF0IGJ1aWxkIHNwYWNlY3JhZnQsIGluc3RydW1lbnRzIGFuZCBuZXcgdGVjaG5vbG9neSB0byBzdHVkeSB0aGUgRWFydGgsIHRoZSBzdW4sIG91ciBzb2xhciBzeXN0ZW0sIGFuZCB0aGUgdW5pdmVyc2UuICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+Sm9pbiB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1MzgvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1Mzh+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTM4L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBOYWJzIFNwYWNlIEludmFkZXJzPyIsInNwYWNlIiwic3BhY2VpbnZhZGVycyIsIm5hc2EiLCJodWJibGUiXSwiZGVzY3JpcHRpb24iOiJUaGUgZ3Jhdml0YXRpb25hbCBmaWVsZCBzdXJyb3VuZGluZyB0aGlzIG1hc3NpdmUgY2x1c3RlciBvZiBnYWxheGllcywgQWJlbGwgNjgsIGFjdHMgYXMgYSBuYXR1cmFsIGxlbnMgaW4gc3BhY2UgdG8gYnJpZ2h0ZW4gYW5kIG1hZ25pZnkgdGhlIGxpZ2h0IGNvbWluZyBmcm9tIHZlcnkgZGlzdGFudCBiYWNrZ3JvdW5kIGdhbGF4aWVzLiAgTGlrZSBhIGZ1biBob3VzZSBtaXJyb3IsIGxlbnNpbmcgY3JlYXRlcyBhIGZhbnRhc3kgbGFuZHNjYXBlIG9mIGFyYy1saWtlIGltYWdlcyBhbmQgbWlycm9yIGltYWdlcyBvZiBiYWNrZ3JvdW5kIGdhbGF4aWVzLiBUaGUgZm9yZWdyb3VuZCBjbHVzdGVyIGlzIDIgYmlsbGlvbiBsaWdodC15ZWFycyBhd2F5LCBhbmQgdGhlIGxlbnNlZCBpbWFnZXMgY29tZSBmcm9tIGdhbGF4aWVzIGZhciBiZWhpbmQgaXQuICBJbiB0aGlzIHBob3RvLCB0aGUgaW1hZ2Ugb2YgYSBzcGlyYWwgZ2FsYXh5IGF0IHVwcGVyIGxlZnQgaGFzIGJlZW4gc3RyZXRjaGVkIGFuZCBtaXJyb3JlZCBpbnRvIGEgc2hhcGUgc2ltaWxhciB0byB0aGF0IG9mIGEgc2ltdWxhdGVkIGFsaWVuIGZyb20gdGhlIGNsYXNzaWMgMTk3MHMgY29tcHV0ZXIgZ2FtZSAmcXVvdDtTcGFjZSBJbnZhZGVycyEmcXVvdDsgQSBzZWNvbmQsIGxlc3MgZGlzdG9ydGVkIGltYWdlIG9mIHRoZSBzYW1lIGdhbGF4eSBhcHBlYXJzIHRvIHRoZSBsZWZ0IG9mIHRoZSBsYXJnZSwgYnJpZ2h0IGVsbGlwdGljYWwgZ2FsYXh5LiAgSW4gdGhlIHVwcGVyIHJpZ2h0IG9mIHRoZSBwaG90byBpcyBhbm90aGVyIHN0cmlraW5nIGZlYXR1cmUgb2YgdGhlIGltYWdlIHRoYXQgaXMgdW5yZWxhdGVkIHRvIGdyYXZpdGF0aW9uYWwgbGVuc2luZy4gV2hhdCBhcHBlYXJzIHRvIGJlIHB1cnBsZSBsaXF1aWQgZHJpcHBpbmcgZnJvbSBhIGdhbGF4eSBpcyBhIHBoZW5vbWVub24gY2FsbGVkIHJhbS1wcmVzc3VyZSBzdHJpcHBpbmcuIFRoZSBnYXMgY2xvdWRzIHdpdGhpbiB0aGUgZ2FsYXh5IGFyZSBiZWluZyBzdHJpcHBlZCBvdXQgYW5kIGhlYXRlZCB1cCBhcyB0aGUgZ2FsYXh5IHBhc3NlcyB0aHJvdWdoIGEgcmVnaW9uIG9mIGRlbnNlciBpbnRlcmdhbGFjdGljIGdhcy4gIFRoaXMgaW1hZ2Ugd2FzIHRha2VuIGluIGluZnJhcmVkIGxpZ2h0IGJ5IEh1YmJsZeKAmXMgV2lkZSBGaWVsZCBDYW1lcmEgMywgYW5kIGNvbWJpbmVkIHdpdGggbmVhci1pbmZyYXJlZCBvYnNlcnZhdGlvbnMgZnJvbSBIdWJibGXigJlzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cy4gIFRoZSBpbWFnZSBpcyBiYXNlZCBpbiBwYXJ0IG9uIGRhdGEgc3BvdHRlZCBieSBOaWNrIFJvc2UgaW4gdGhlIEh1YmJsZeKAmXMgSGlkZGVuIFRyZWFzdXJlcyBpbWFnZSBwcm9jZXNzaW5nIGNvbXBldGl0aW9uLiAgVGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaXMgYSBwcm9qZWN0IG9mIGludGVybmF0aW9uYWwgY29vcGVyYXRpb24gYmV0d2VlbiBOQVNBIGFuZCB0aGUgRXVyb3BlYW4gU3BhY2UgQWdlbmN5LiBOQVNBJ3MgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyIGluIEdyZWVuYmVsdCwgTWQuLCBtYW5hZ2VzIHRoZSB0ZWxlc2NvcGUuIFRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgKFNUU2NJKSBpbiBCYWx0aW1vcmUsIE1kLiwgY29uZHVjdHMgSHViYmxlIHNjaWVuY2Ugb3BlcmF0aW9ucy4gU1RTY0kgaXMgb3BlcmF0ZWQgYnkgdGhlIEFzc29jaWF0aW9uIG9mIFVuaXZlcnNpdGllcyBmb3IgUmVzZWFyY2ggaW4gQXN0cm9ub215LCBJbmMuLCBpbiBXYXNoaW5ndG9uLiAgVG8gcmVhZCBtb3JlIGdvIHRvOiA8YSBocmVmPVwiaHR0cDovLzEudXNhLmdvdi9aNnVEVXBcIiByZWw9XCJub2ZvbGxvd1wiPjEudXNhLmdvdi9aNnVEVXA8L2E+ICBDcmVkaXQ6IE5BU0EgYW5kIEVTQSBBY2tub3dsZWRnZW1lbnQ6IE4uIFJvc2UgIEZvciBpbWFnZSBmaWxlcyBhbmQgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBBYmVsbCA2OCwgdmlzaXQ6ICA8YSBocmVmPVwiaHR0cDovL2h1YmJsZXNpdGUub3JnL25ld3MvMjAxMy8wOVwiIHJlbD1cIm5vZm9sbG93XCI+aHViYmxlc2l0ZS5vcmcvbmV3cy8yMDEzLzA5PC9hPiA8YSBocmVmPVwiaHR0cDovL3d3dy5zcGFjZXRlbGVzY29wZS5vcmcvbmV3cy9oZWljMDRcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5zcGFjZXRlbGVzY29wZS5vcmcvbmV3cy9oZWljMDQ8L2E+IDxhIGhyZWY9XCJodHRwOi8vaGVyaXRhZ2Uuc3RzY2kuZWR1LzIwMTMvMDlcIiByZWw9XCJub2ZvbGxvd1wiPmhlcml0YWdlLnN0c2NpLmVkdS8yMDEzLzA5PC9hPiA8YSBocmVmPVwiaHR0cDovL3d3dy5zcGFjZXRlbGVzY29wZS5vcmcvcHJvamVjdHMvaGlkZGVudHJlYXN1cmVzL1wiIHJlbD1cIm5vZm9sbG93XCI+d3d3LnNwYWNldGVsZXNjb3BlLm9yZy9wcm9qZWN0cy9oaWRkZW50cmVhc3VyZXMvPC9hPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FfR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTUzOCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgTmFicyBTcGFjZSBJbnZhZGVycz8iLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTM5L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTM5fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTUzOS9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgTmFicyBTcGFjZSBJbnZhZGVycz8iLCJzcGFjZSIsInNwYWNlaW52YWRlcnMiLCJuYXNhIiwiaHViYmxlIl0sInRpdGxlIjoiSHViYmxlIE5hYnMgU3BhY2UgSW52YWRlcnM/IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTM5IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoZSBncmF2aXRhdGlvbmFsIGZpZWxkIHN1cnJvdW5kaW5nIHRoaXMgbWFzc2l2ZSBjbHVzdGVyIG9mIGdhbGF4aWVzLCBBYmVsbCA2OCwgYWN0cyBhcyBhIG5hdHVyYWwgbGVucyBpbiBzcGFjZSB0byBicmlnaHRlbiBhbmQgbWFnbmlmeSB0aGUgbGlnaHQgY29taW5nIGZyb20gdmVyeSBkaXN0YW50IGJhY2tncm91bmQgZ2FsYXhpZXMuICBMaWtlIGEgZnVuIGhvdXNlIG1pcnJvciwgbGVuc2luZyBjcmVhdGVzIGEgZmFudGFzeSBsYW5kc2NhcGUgb2YgYXJjLWxpa2UgaW1hZ2VzIGFuZCBtaXJyb3IgaW1hZ2VzIG9mIGJhY2tncm91bmQgZ2FsYXhpZXMuIFRoZSBmb3JlZ3JvdW5kIGNsdXN0ZXIgaXMgMiBiaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXksIGFuZCB0aGUgbGVuc2VkIGltYWdlcyBjb21lIGZyb20gZ2FsYXhpZXMgZmFyIGJlaGluZCBpdC4gIEluIHRoaXMgcGhvdG8sIHRoZSBpbWFnZSBvZiBhIHNwaXJhbCBnYWxheHkgYXQgdXBwZXIgbGVmdCBoYXMgYmVlbiBzdHJldGNoZWQgYW5kIG1pcnJvcmVkIGludG8gYSBzaGFwZSBzaW1pbGFyIHRvIHRoYXQgb2YgYSBzaW11bGF0ZWQgYWxpZW4gZnJvbSB0aGUgY2xhc3NpYyAxOTcwcyBjb21wdXRlciBnYW1lICZxdW90O1NwYWNlIEludmFkZXJzISZxdW90OyBBIHNlY29uZCwgbGVzcyBkaXN0b3J0ZWQgaW1hZ2Ugb2YgdGhlIHNhbWUgZ2FsYXh5IGFwcGVhcnMgdG8gdGhlIGxlZnQgb2YgdGhlIGxhcmdlLCBicmlnaHQgZWxsaXB0aWNhbCBnYWxheHkuICBJbiB0aGUgdXBwZXIgcmlnaHQgb2YgdGhlIHBob3RvIGlzIGFub3RoZXIgc3RyaWtpbmcgZmVhdHVyZSBvZiB0aGUgaW1hZ2UgdGhhdCBpcyB1bnJlbGF0ZWQgdG8gZ3Jhdml0YXRpb25hbCBsZW5zaW5nLiBXaGF0IGFwcGVhcnMgdG8gYmUgcHVycGxlIGxpcXVpZCBkcmlwcGluZyBmcm9tIGEgZ2FsYXh5IGlzIGEgcGhlbm9tZW5vbiBjYWxsZWQgcmFtLXByZXNzdXJlIHN0cmlwcGluZy4gVGhlIGdhcyBjbG91ZHMgd2l0aGluIHRoZSBnYWxheHkgYXJlIGJlaW5nIHN0cmlwcGVkIG91dCBhbmQgaGVhdGVkIHVwIGFzIHRoZSBnYWxheHkgcGFzc2VzIHRocm91Z2ggYSByZWdpb24gb2YgZGVuc2VyIGludGVyZ2FsYWN0aWMgZ2FzLiAgVGhpcyBpbWFnZSB3YXMgdGFrZW4gaW4gaW5mcmFyZWQgbGlnaHQgYnkgSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYSAzLCBhbmQgY29tYmluZWQgd2l0aCBuZWFyLWluZnJhcmVkIG9ic2VydmF0aW9ucyBmcm9tIEh1YmJsZeKAmXMgQWR2YW5jZWQgQ2FtZXJhIGZvciBTdXJ2ZXlzLiAgVGhlIGltYWdlIGlzIGJhc2VkIGluIHBhcnQgb24gZGF0YSBzcG90dGVkIGJ5IE5pY2sgUm9zZSBpbiB0aGUgSHViYmxl4oCZcyBIaWRkZW4gVHJlYXN1cmVzIGltYWdlIHByb2Nlc3NpbmcgY29tcGV0aXRpb24uICBUaGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpcyBhIHByb2plY3Qgb2YgaW50ZXJuYXRpb25hbCBjb29wZXJhdGlvbiBiZXR3ZWVuIE5BU0EgYW5kIHRoZSBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kuIE5BU0EncyBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXIgaW4gR3JlZW5iZWx0LCBNZC4sIG1hbmFnZXMgdGhlIHRlbGVzY29wZS4gVGhlIFNwYWNlIFRlbGVzY29wZSBTY2llbmNlIEluc3RpdHV0ZSAoU1RTY0kpIGluIEJhbHRpbW9yZSwgTWQuLCBjb25kdWN0cyBIdWJibGUgc2NpZW5jZSBvcGVyYXRpb25zLiBTVFNjSSBpcyBvcGVyYXRlZCBieSB0aGUgQXNzb2NpYXRpb24gb2YgVW5pdmVyc2l0aWVzIGZvciBSZXNlYXJjaCBpbiBBc3Ryb25vbXksIEluYy4sIGluIFdhc2hpbmd0b24uICBDcmVkaXQ6IE5BU0EgYW5kIEVTQSBBY2tub3dsZWRnZW1lbnQ6IE4uIFJvc2UgIEZvciBpbWFnZSBmaWxlcyBhbmQgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBBYmVsbCA2OCwgdmlzaXQ6ICA8YSBocmVmPVwiaHR0cDovL2h1YmJsZXNpdGUub3JnL25ld3MvMjAxMy8wOVwiIHJlbD1cIm5vZm9sbG93XCI+aHViYmxlc2l0ZS5vcmcvbmV3cy8yMDEzLzA5PC9hPiA8YSBocmVmPVwiaHR0cDovL3d3dy5zcGFjZXRlbGVzY29wZS5vcmcvbmV3cy9oZWljMDRcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5zcGFjZXRlbGVzY29wZS5vcmcvbmV3cy9oZWljMDQ8L2E+IDxhIGhyZWY9XCJodHRwOi8vaGVyaXRhZ2Uuc3RzY2kuZWR1LzIwMTMvMDlcIiByZWw9XCJub2ZvbGxvd1wiPmhlcml0YWdlLnN0c2NpLmVkdS8yMDEzLzA5PC9hPiA8YSBocmVmPVwiaHR0cDovL3d3dy5zcGFjZXRlbGVzY29wZS5vcmcvcHJvamVjdHMvaGlkZGVudHJlYXN1cmVzL1wiIHJlbD1cIm5vZm9sbG93XCI+d3d3LnNwYWNldGVsZXNjb3BlLm9yZy9wcm9qZWN0cy9oaWRkZW50cmVhc3VyZXMvPC9hPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FfR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5MzQvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5MzR+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTM0L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBTdXBlcm5vdmEgQnViYmxlIFJlc2VtYmxlcyBIb2xpZGF5IE9ybmFtZW50IiwibmFzYSIsImh1YmJsZSIsImhvbGlkYXlvcm5hbWVudCIsImdvZGRhcmRzcGFjZWZsaWdodGNlbnRlciJdLCJkZXNjcmlwdGlvbiI6Ik5BU0EgaW1hZ2UgcmVsZWFzZSBEZWNlbWJlciAxNCwgMjAxMCAgQSBkZWxpY2F0ZSBzcGhlcmUgb2YgZ2FzLCBwaG90b2dyYXBoZWQgYnkgTkFTQSdzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUsIGZsb2F0cyBzZXJlbmVseSBpbiB0aGUgZGVwdGhzIG9mIHNwYWNlLiBUaGUgcHJpc3RpbmUgc2hlbGwsIG9yIGJ1YmJsZSwgaXMgdGhlIHJlc3VsdCBvZiBnYXMgdGhhdCBpcyBiZWluZyBzaG9ja2VkIGJ5IHRoZSBleHBhbmRpbmcgYmxhc3Qgd2F2ZSBmcm9tIGEgc3VwZXJub3ZhLiBDYWxsZWQgU05SIDA1MDktNjcuNSAob3IgU05SIDA1MDkgZm9yIHNob3J0KSwgdGhlIGJ1YmJsZSBpcyB0aGUgdmlzaWJsZSByZW1uYW50IG9mIGEgcG93ZXJmdWwgc3RlbGxhciBleHBsb3Npb24gaW4gdGhlIExhcmdlIE1hZ2VsbGFuaWMgQ2xvdWQgKExNQyksIGEgc21hbGwgZ2FsYXh5IGFib3V0IDE2MCwwMDAgbGlnaHQteWVhcnMgZnJvbSBFYXJ0aC4gIFJpcHBsZXMgaW4gdGhlIHNoZWxsJ3Mgc3VyZmFjZSBtYXkgYmUgY2F1c2VkIGJ5IGVpdGhlciBzdWJ0bGUgdmFyaWF0aW9ucyBpbiB0aGUgZGVuc2l0eSBvZiB0aGUgYW1iaWVudCBpbnRlcnN0ZWxsYXIgZ2FzLCBvciBwb3NzaWJseSBkcml2ZW4gZnJvbSB0aGUgaW50ZXJpb3IgYnkgcGllY2VzIG9mIHRoZSBlamVjdGEuIFRoZSBidWJibGUtc2hhcGVkIHNocm91ZCBvZiBnYXMgaXMgMjMgbGlnaHQteWVhcnMgYWNyb3NzIGFuZCBpcyBleHBhbmRpbmcgYXQgbW9yZSB0aGFuIDExIG1pbGxpb24gbWlsZXMgcGVyIGhvdXIgKDUsMDAwIGtpbG9tZXRlcnMgcGVyIHNlY29uZCkuICBBc3Ryb25vbWVycyBoYXZlIGNvbmNsdWRlZCB0aGF0IHRoZSBleHBsb3Npb24gd2FzIG9uZSBvZiBhbiBlc3BlY2lhbGx5IGVuZXJnZXRpYyBhbmQgYnJpZ2h0IHZhcmlldHkgb2Ygc3VwZXJub3ZhZS4gS25vd24gYXMgVHlwZSBJYSwgc3VjaCBzdXBlcm5vdmEgZXZlbnRzIGFyZSB0aG91Z2h0IHRvIHJlc3VsdCBmcm9tIGEgd2hpdGUgZHdhcmYgc3RhciBpbiBhIGJpbmFyeSBzeXN0ZW0gdGhhdCByb2JzIGl0cyBwYXJ0bmVyIG9mIG1hdGVyaWFsLCB0YWtlcyBvbiBtdWNoIG1vcmUgbWFzcyB0aGFuIGl0IGlzIGFibGUgdG8gaGFuZGxlLCBhbmQgZXZlbnR1YWxseSBleHBsb2Rlcy4gIEh1YmJsZSdzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cyBvYnNlcnZlZCB0aGUgc3VwZXJub3ZhIHJlbW5hbnQgb24gT2N0LiAyOCwgMjAwNiB3aXRoIGEgZmlsdGVyIHRoYXQgaXNvbGF0ZXMgbGlnaHQgZnJvbSBnbG93aW5nIGh5ZHJvZ2VuIHNlZW4gaW4gdGhlIGV4cGFuZGluZyBzaGVsbC4gVGhlc2Ugb2JzZXJ2YXRpb25zIHdlcmUgdGhlbiBjb21iaW5lZCB3aXRoIHZpc2libGUtbGlnaHQgaW1hZ2VzIG9mIHRoZSBzdXJyb3VuZGluZyBzdGFyIGZpZWxkIHRoYXQgd2VyZSBpbWFnZWQgd2l0aCBIdWJibGUncyBXaWRlIEZpZWxkIENhbWVyYSAzIG9uIE5vdi4gNCwgMjAxMC4gIFdpdGggYW4gYWdlIG9mIGFib3V0IDQwMCB5ZWFycyBhcyBzZWVuIGZyb20gRWFydGgsIHRoZSBzdXBlcm5vdmEgbWlnaHQgaGF2ZSBiZWVuIHZpc2libGUgdG8gc291dGhlcm4gaGVtaXNwaGVyZSBvYnNlcnZlcnMgYXJvdW5kIHRoZSB5ZWFyIDE2MDAsIGhvd2V2ZXIsIHRoZXJlIGFyZSBubyBrbm93biByZWNvcmRzIG9mIGEgJnF1b3Q7bmV3IHN0YXImcXVvdDsgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgTE1DIG5lYXIgdGhhdCB0aW1lLiBBIG1vcmUgcmVjZW50IHN1cGVybm92YSBpbiB0aGUgTE1DLCBTTiAxOTg3QSwgZGlkIGNhdGNoIHRoZSBleWUgb2YgRWFydGggdmlld2VycyBhbmQgY29udGludWVzIHRvIGJlIHN0dWRpZWQgd2l0aCBncm91bmQtIGFuZCBzcGFjZS1iYXNlZCB0ZWxlc2NvcGVzLCBpbmNsdWRpbmcgSHViYmxlLiAgRm9yIGltYWdlcyBhbmQgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBTTlIgMDUwOSwgdmlzaXQ6ICA8YSBocmVmPVwiaHR0cDovL2h1YmJsZXNpdGUub3JnL25ld3MvMjAxMC8yN1wiIHJlbD1cIm5vZm9sbG93XCI+aHViYmxlc2l0ZS5vcmcvbmV3cy8yMDEwLzI3PC9hPiA8YSBocmVmPVwiaHR0cDovL2hlcml0YWdlLnN0c2NpLmVkdS8yMDEwLzI3XCIgcmVsPVwibm9mb2xsb3dcIj5oZXJpdGFnZS5zdHNjaS5lZHUvMjAxMC8yNzwvYT4gPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvaHViYmxlXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvaHViYmxlPC9hPiAgVGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaXMgYSBwcm9qZWN0IG9mIGludGVybmF0aW9uYWwgY29vcGVyYXRpb24gYmV0d2VlbiBOQVNBIGFuZCB0aGUgRXVyb3BlYW4gU3BhY2UgQWdlbmN5LiBOQVNBJ3MgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyIG1hbmFnZXMgdGhlIHRlbGVzY29wZS4gVGhlIFNwYWNlIFRlbGVzY29wZSBTY2llbmNlIEluc3RpdHV0ZSAoU1RTY0kpIGNvbmR1Y3RzIEh1YmJsZSBzY2llbmNlIG9wZXJhdGlvbnMuIFNUU2NJIGlzIG9wZXJhdGVkIGZvciBOQVNBIGJ5IHRoZSBBc3NvY2lhdGlvbiBvZiBVbml2ZXJzaXRpZXMgZm9yIFJlc2VhcmNoIGluIEFzdHJvbm9teSwgSW5jLiwgaW4gV2FzaGluZ3RvbiwgRC5DLiAgPGI+Q3JlZGl0OiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpIEFja25vd2xlZGdtZW50OiBKLiBIdWdoZXMgKFJ1dGdlcnMgVW5pdmVyc2l0eSk8L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+Sm9pbiB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTkzNCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgU3VwZXJub3ZhIEJ1YmJsZSBSZXNlbWJsZXMgSG9saWRheSBPcm5hbWVudCIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvaHViYmxlLXNwaWVzLWJpZy1iYW5nLWZyb250aWVyc18yMjIwMjU0MTc0OV9vL2h1YmJsZS1zcGllcy1iaWctYmFuZy1mcm9udGllcnNfMjIyMDI1NDE3NDlfb350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvaHViYmxlLXNwaWVzLWJpZy1iYW5nLWZyb250aWVyc18yMjIwMjU0MTc0OV9vL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIk1BQ1NKMDcxNy41KzM3NDUiXSwiZGVzY3JpcHRpb24iOiJUaGlzIGltYWdlIGZyb20gdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgc2hvd3MgdGhlIGdhbGF4eSBjbHVzdGVyIE1BQ1NKMDcxNy41KzM3NDUuIFRoaXMgaXMgb25lIG9mIHNpeCBiZWluZyBzdHVkaWVkIGJ5IHRoZSBIdWJibGUgRnJvbnRpZXIgRmllbGRzIHByb2dyYW1tZSwgd2hpY2ggdG9nZXRoZXIgaGF2ZSBwcm9kdWNlZCB0aGUgZGVlcGVzdCBpbWFnZXMgb2YgZ3Jhdml0YXRpb25hbCBsZW5zaW5nIGV2ZXIgbWFkZS4gRHVlIHRvIHRoZSBodWdlIG1hc3Mgb2YgdGhlIGNsdXN0ZXIgaXQgaXMgYmVuZGluZyB0aGUgbGlnaHQgb2YgYmFja2dyb3VuZCBvYmplY3RzLCBhY3RpbmcgYXMgYSBtYWduaWZ5aW5nIGxlbnMuIEl0IGlzIG9uZSBvZiB0aGUgbW9zdCBtYXNzaXZlIGdhbGF4eSBjbHVzdGVycyBrbm93biwgYW5kIGl0IGlzIGFsc28gdGhlIGxhcmdlc3Qga25vd24gZ3Jhdml0YXRpb25hbCBsZW5zLiBPZiBhbGwgb2YgdGhlIGdhbGF4eSBjbHVzdGVycyBrbm93biBhbmQgbWVhc3VyZWQsIE1BQ1MgSjA3MTcgbGVuc2VzIHRoZSBsYXJnZXN0IGFyZWEgb2YgdGhlIHNreS4iLCJuYXNhX2lkIjoiaHViYmxlLXNwaWVzLWJpZy1iYW5nLWZyb250aWVyc18yMjIwMjU0MTc0OV9vIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0xMC0yMlQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBGcm9udGllciBGaWVsZHMgdmlldyBvZiBNQUNTSjA3MTcuNSszNzQ1IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjEwNS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjEwNX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIxMDUvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiTkFTQSdzIEh1YmJsZSBVbml2ZXJzZSBpbiAzLUQiLCJuYXNhIiwiZ29kZGFyZCIsImh1YmJsZSIsImhzdCIsIm9yaW9ubmVidWxhIiwiZ3NmYyIsImdvZGRhcmRzcGFjZWZsaWdodGNlbnRlciIsImh1YmJsZTNkIl0sInRpdGxlIjoiTkFTQSdzIEh1YmJsZSBVbml2ZXJzZSBpbiAzLUQiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIxMDUiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiVGhpcyBpbWFnZSBkZXBpY3RzIGEgdmFzdCBjYW55b24gb2YgZHVzdCBhbmQgZ2FzIGluIHRoZSBPcmlvbiBOZWJ1bGEgZnJvbSBhIDMtRCBjb21wdXRlciBtb2RlbCBiYXNlZCBvbiBvYnNlcnZhdGlvbnMgYnkgTkFTQSdzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgYW5kIGNyZWF0ZWQgYnkgc2NpZW5jZSB2aXN1YWxpemF0aW9uIHNwZWNpYWxpc3RzIGF0IHRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgKFNUU2NJKSBpbiBCYWx0aW1vcmUsIE1kLiBBIDMtRCB2aXN1YWxpemF0aW9uIG9mIHRoaXMgbW9kZWwgdGFrZXMgdmlld2VycyBvbiBhbiBhbWF6aW5nIGZvdXItbWludXRlIHZveWFnZSB0aHJvdWdoIHRoZSAxNS1saWdodC15ZWFyLXdpZGUgY2FueW9uLiAgQ3JlZGl0OiBOQVNBLCBHLiBCYWNvbiwgTC4gRnJhdHRhcmUsIFouIExldmF5LCBhbmQgRi4gU3VtbWVycyAoU1RTY0kvQVVSQSkgIEdvIGhlcmUgdG8gbGVhcm4gbW9yZSBhYm91dCBIdWJibGUgM0Q6ICA8YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi90b3BpY3MvdW5pdmVyc2UvZmVhdHVyZXMvaHViYmxlX2ltYXhfcHJlbWllcmUuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+d3d3Lm5hc2EuZ292L3RvcGljcy91bml2ZXJzZS9mZWF0dXJlcy9odWJibGVfaW1heF9wcmVtaWVyLi4uPC9hPiAgb3IgIDxhIGhyZWY9XCJodHRwOi8vd3d3LmltYXguY29tL2h1YmJsZS9cIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5pbWF4LmNvbS9odWJibGUvPC9hPiAgVGFrZSBhbiBleGhpbGFyYXRpbmcgcmlkZSB0aHJvdWdoIHRoZSBPcmlvbiBOZWJ1bGEsIGEgdmFzdCBzdGFyLW1ha2luZyBmYWN0b3J5IDEsNTAwIGxpZ2h0LXllYXJzIGF3YXkuIFN3b29wIHRocm91Z2ggT3Jpb24ncyBnaWFudCBjYW55b24gb2YgZ2FzIGFuZCBkdXN0LiBGbHkgcGFzdCBiZWhlbW90aCBzdGFycyB3aG9zZSBicmlsbGlhbnQgbGlnaHQgaWxsdW1pbmF0ZXMgYW5kIGVuZXJnaXplcyB0aGUgZW50aXJlIGNsb3VkeSByZWdpb24uIFpvb20gYnkgZHVzdHkgdGFkcG9sZS1zaGFwZWQgb2JqZWN0cyB0aGF0IGFyZSBmbGVkZ2xpbmcgc29sYXIgc3lzdGVtcy4gIFRoaXMgdmlydHVhbCBzcGFjZSBqb3VybmV5IGlzbid0IHRoZSBsYXRlc3QgdmlkZW8gZ2FtZSBidXQgb25lIG9mIHNldmVyYWwgZ3JvdW5kYnJlYWtpbmcgYXN0cm9ub215IHZpc3VhbGl6YXRpb25zIGNyZWF0ZWQgYnkgc3BlY2lhbGlzdHMgYXQgdGhlIFNwYWNlIFRlbGVzY29wZSBTY2llbmNlIEluc3RpdHV0ZSAoU1RTY0kpIGluIEJhbHRpbW9yZSwgdGhlIHNjaWVuY2Ugb3BlcmF0aW9ucyBjZW50ZXIgZm9yIE5BU0EncyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlLiBUaGUgY2luZW1hdGljIHNwYWNlIG9keXNzZXlzIGFyZSBwYXJ0IG9mIHRoZSBuZXcgSW1heCBmaWxtICZxdW90O0h1YmJsZSAzRCwmcXVvdDsgd2hpY2ggb3BlbnMgdG9kYXkgYXQgc2VsZWN0IEltYXggdGhlYXRlcnMgd29ybGR3aWRlLiAgVGhlIDQzLW1pbnV0ZSBtb3ZpZSBjaHJvbmljbGVzIHRoZSAyMC15ZWFyIGxpZmUgb2YgSHViYmxlIGFuZCBpbmNsdWRlcyBoaWdobGlnaHRzIGZyb20gdGhlIE1heSAyMDA5IHNlcnZpY2luZyBtaXNzaW9uIHRvIHRoZSBFYXJ0aC1vcmJpdGluZyBvYnNlcnZhdG9yeSwgd2l0aCBmb290YWdlIHRha2VuIGJ5IHRoZSBhc3Ryb25hdXRzLiAgVGhlIGdpYW50LXNjcmVlbiBmaWxtIHNob3djYXNlcyBzb21lIG9mIEh1YmJsZSdzIGJyZWF0aHRha2luZyBpY29uaWMgcGljdHVyZXMsIHN1Y2ggYXMgdGhlIEVhZ2xlIE5lYnVsYSdzICZxdW90O1BpbGxhcnMgb2YgQ3JlYXRpb24sJnF1b3Q7IGFzIHdlbGwgYXMgc3R1bm5pbmcgdmlld3MgdGFrZW4gYnkgdGhlIG5ld2x5IGluc3RhbGxlZCBXaWRlIEZpZWxkIENhbWVyYSAzLiAgV2hpbGUgSHViYmxlIHBpY3R1cmVzIG9mIGNlbGVzdGlhbCBvYmplY3RzIGFyZSBhd2UtaW5zcGlyaW5nLCB0aGV5IGFyZSBmbGF0IDItRCBwaG90b2dyYXBocy4gRm9yIHRoaXMgZmlsbSwgdGhvc2UgMi1EIGltYWdlcyBoYXZlIGJlZW4gY29udmVydGVkIGludG8gMy1EIGVudmlyb25tZW50cywgZ2l2aW5nIHRoZSBhdWRpZW5jZSB0aGUgaW1wcmVzc2lvbiB0aGV5IGFyZSBzcGFjZSB0cmF2ZWxlcnMgdGFraW5nIGEgdG91ciBvZiBIdWJibGUncyBtb3N0IHBvcHVsYXIgdGFyZ2V0cy4gICZxdW90O0EgbGFyZ2UtZm9ybWF0IG1vdmllIGlzIGEgdHJ1bHkgaW1tZXJzaXZlIGV4cGVyaWVuY2UsJnF1b3Q7IHNheXMgRnJhbmsgU3VtbWVycywgYW4gU1RTY0kgYXN0cm9ub21lciBhbmQgc2NpZW5jZSB2aXN1YWxpemF0aW9uIHNwZWNpYWxpc3Qgd2hvIGxlZCB0aGUgdGVhbSB0aGF0IGRldmVsb3BlZCB0aGUgbW92aWUgdmlzdWFsaXphdGlvbnMuIFRoZSB0ZWFtIGxhYm9yZWQgZm9yIG5pbmUgbW9udGhzLCB3b3JraW5nIG9uIGZvdXIgdmlzdWFsaXphdGlvbiBzZXF1ZW5jZXMgdGhhdCBjb21wcmlzZSBhYm91dCAxMiBtaW51dGVzIG9mIHRoZSBtb3ZpZS4gICZxdW90O1NlZWluZyB0aGVzZSBIdWJibGUgaW1hZ2VzIGluIDMtRCwgeW91IGZlZWwgbGlrZSB5b3UgYXJlIGZseWluZyB0aHJvdWdoIHNwYWNlIGFuZCBub3QganVzdCBsb29raW5nIGF0IHBpY3R1cmUgcG9zdGNhcmRzLCZxdW90OyBTdW1tZXJzIGNvbnRpbnVlZC4gJnF1b3Q7VGhlIHNwYWNlc2NhcGVzIGFyZSBhbGwgYmFzZWQgb24gSHViYmxlIGltYWdlcyBhbmQgZGF0YSwgdGhvdWdoIHNvbWUgYXJ0aXN0aWMgbGljZW5zZSBpcyBuZWNlc3NhcnkgdG8gcHJvZHVjZSB0aGUgZnVsbCBkZXB0aCBvZiBmaWVsZCBuZWVkZWQgZm9yIDMtRC4mcXVvdDsgIFRoZSBtb3N0IGFtYml0aW91cyBzZXF1ZW5jZSBpcyBhIGZvdXItbWludXRlIHZveWFnZSB0aHJvdWdoIHRoZSBPcmlvbiBOZWJ1bGEncyBnYXMtYW5kLWR1c3QgY2FueW9uLCBhYm91dCAxNSBsaWdodC15ZWFycyBhY3Jvc3MuIER1cmluZyB0aGUgcmlkZSwgdmlld2VycyB3aWxsIHNlZSBicmlnaHQgYW5kIGRhcmssIGdhc2VvdXMgY2xvdWRzOyB0aG91c2FuZHMgb2Ygc3RhcnMsIGluY2x1ZGluZyBhIGdyb3VwaW5nIG9mIGJyaWdodCwgaGVmdHkgc3RhcnMgY2FsbGVkIHRoZSBUcmFwZXppdW07IGFuZCBlbWJyeW9uaWMgcGxhbmV0YXJ5IHN5c3RlbXMuIFRoZSB0b3VyIGVuZHMgd2l0aCBhIGRldGFpbGVkIGxvb2sgYXQgYSB5b3VuZyBjaXJjdW1zdGVsbGFyIGRpc2ssIHdoaWNoIGlzIG11Y2ggbGlrZSB0aGUgc3RydWN0dXJlIGZyb20gd2hpY2ggb3VyIHNvbGFyIHN5c3RlbSBmb3JtZWQgNC41IGJpbGxpb24geWVhcnMgYWdvLiAgQmFzZWQgb24gYSBIdWJibGUgaW1hZ2Ugb2YgT3Jpb24gcmVsZWFzZWQgaW4gMjAwNiwgdGhlIHZpc3VhbGl6YXRpb24gd2FzIGEgY29sbGFib3JhdGl2ZSBlZmZvcnQgYmV0d2VlbiBzY2llbmNlIHZpc3VhbGl6YXRpb24gc3BlY2lhbGlzdHMgYXQgU1RTY0ksIGluY2x1ZGluZyBHcmVnIEJhY29uLCB3aG8gc2N1bHB0ZWQgdGhlIE9yaW9uIE5lYnVsYSBkaWdpdGFsIG1vZGVsLCB3aXRoIGlucHV0IGZyb20gU1RTY0kgYXN0cm9ub21lciBNYXNzaW1vIFJvYmVydG87IHRoZSBOYXRpb25hbCBDZW50ZXIgZm9yIFN1cGVyY29tcHV0aW5nIEFwcGxpY2F0aW9ucyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBJbGxpbm9pcyBhdCBVcmJhbmEtQ2hhbXBhaWduOyBhbmQgdGhlIFNwaXR6ZXIgU2NpZW5jZSBDZW50ZXIgYXQgdGhlIENhbGlmb3JuaWEgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kgaW4gUGFzYWRlbmEuICBGb3Igc29tZSBvZiB0aGUgc2VxdWVuY2VzLCBTVFNjSSBpbWFnaW5nIHNwZWNpYWxpc3RzIGRldmVsb3BlZCBuZXcgdGVjaG5pcXVlcyBmb3IgdHJhbnNmb3JtaW5nIHRoZSAyLUQgSHViYmxlIGltYWdlcyBpbnRvIDMtRC4gU1RTY0kgaW1hZ2UgcHJvY2Vzc2luZyBzcGVjaWFsaXN0cyBMaXNhIEZyYXR0YXJlIGFuZCBab2x0IExldmF5LCBmb3IgZXhhbXBsZSwgY3JlYXRlZCBtZXRob2RzIG9mIHNwbGl0dGluZyBhIGdpYW50IGdhc2VvdXMgcGlsbGFyIGluIHRoZSBDYXJpbmEgTmVidWxhIGludG8gbXVsdGlwbGUgbGF5ZXJzIHRvIHByb2R1Y2UgYSAzLUQgZWZmZWN0LCBnaXZpbmcgdGhlIHN0cnVjdHVyZSBkZXB0aC4gVGhlIENhcmluYSBOZWJ1bGEgaXMgYSBudXJzZXJ5IGZvciBiYWJ5IHN0YXJzLiAgRnJhdHRhcmUgcGFpbnN0YWtpbmdseSByZW1vdmVkIHRoZSB0aG91c2FuZHMgb2Ygc3RhcnMgaW4gdGhlIGltYWdlIHNvIHRoYXQgTGV2YXkgY291bGQgc2VwYXJhdGUgdGhlIGdhc2VvdXMgbGF5ZXJzIG9uIHRoZSBpc29sYXRlZCBDYXJpbmEgcGlsbGFyLiBGcmF0dGFyZSB0aGVuIHJlcGxhY2VkIHRoZSBzdGFycyBpbnRvIGJvdGggZm9yZWdyb3VuZCBhbmQgYmFja2dyb3VuZCBsYXllcnMgdG8gY29tcGxldGUgdGhlIDMtRCBtb2RlbC4gRm9yIGFkZGVkIGVmZmVjdCwgdGhlIHNhbWUgc2VwYXJhdGlvbiB3YXMgZG9uZSBmb3IgYm90aCB2aXNpYmxlIGFuZCBpbmZyYXJlZCBIdWJibGUgaW1hZ2VzLCBhbGxvd2luZyB0aGUgZmlsbSB0byBjcm9zcy1mYWRlIGJldHdlZW4gd2F2ZWxlbmd0aCB2aWV3cyBpbiAzLUQuICBJbiBhbm90aGVyIHNlcXVlbmNlIHZpZXdlcnMgZmx5IGludG8gYSBmaWVsZCBvZiAxNzAsMDAwIHN0YXJzIGluIHRoZSBnaWFudCBzdGFyIGNsdXN0ZXIgT21lZ2EgQ2VudGF1cmkuIFNUU2NJIGFzdHJvbm9tZXIgSmF5IEFuZGVyc29uIHVzZWQgaGlzIHN0ZWxsYXIgZGF0YWJhc2UgdG8gY3JlYXRlIGEgc3ludGhldGljIHN0YXIgZmllbGQgaW4gMy1EIHRoYXQgbWF0Y2hlcyByZWNlbnQgcmF6b3Itc2hhcnAgSHViYmxlIHBob3Rvcy4gIFRoZSBmaWxtJ3MgZmluYWwgZm91ci1taW51dGUgc2VxdWVuY2UgdGFrZXMgdmlld2VycyBvbiBhIHZveWFnZSBmcm9tIG91ciBNaWxreSBXYXkgR2FsYXh5IHBhc3QgbWFueSBvZiBIdWJibGUncyBiZXN0IGdhbGF4eSBzaG90cyBhbmQgZGVlcCBpbnRvIHNwYWNlLiBTb21lIDE1LDAwMCBnYWxheGllcyBmcm9tIEh1YmJsZSdzIGRlZXBlc3Qgc3VydmV5cyBzdHJldGNoIGJpbGxpb25zIG9mIGxpZ2h0LXllYXJzIGFjcm9zcyB0aGUgdW5pdmVyc2UgaW4gYSAzLUQgc2VxdWVuY2UgY3JlYXRlZCBieSBTVFNjSSBhc3Ryb25vbWVycyBhbmQgdmlzdWFsaXplcnMuIFRoZSB2aWV3IGRpc3NvbHZlcyBpbnRvIGEgY29id2ViIHRoYXQgdHJhY2VzIHRoZSB1bml2ZXJzZSdzIGxhcmdlLXNjYWxlIHN0cnVjdHVyZSwgdGhlIGJhY2tib25lIGZyb20gd2hpY2ggZ2FsYXhpZXMgd2VyZSBib3JuLiAgSW4gYWRkaXRpb24gdG8gY3JlYXRpbmcgdmlzdWFsaXphdGlvbnMsIFNUU2NJJ3MgZWR1Y2F0aW9uIGdyb3VwIGFsc28gcHJvdmlkZWQgZ3VpZGFuY2Ugb24gdGhlICZxdW90O0h1YmJsZSAzRCZxdW90OyBFZHVjYXRvciBHdWlkZSwgd2hpY2ggaW5jbHVkZXMgc3RhbmRhcmRzLWJhc2VkIGxlc3NvbiBwbGFucyBhbmQgYWN0aXZpdGllcyBhYm91dCBIdWJibGUgYW5kIGl0cyBtaXNzaW9uLiBTdHVkZW50cyB3aWxsIHVzZSB0aGUgZ3VpZGUgYmVmb3JlIG9yIGFmdGVyIHNlZWluZyB0aGUgbW92aWUuICAmcXVvdDtUaGUgZ3VpZGUgd2lsbCBlbmhhbmNlIHRoZSBtb3ZpZSBleHBlcmllbmNlIGZvciBzdHVkZW50cyBhbmQgZXh0ZW5kIHRoZSBtb3ZpZSBpbnRvIGNsYXNzcm9vbXMsJnF1b3Q7IHNheXMgQm9ubmllIEVpc2VuaGFtZXIsIFNUU2NJJ3MgSHViYmxlIEZvcm1hbCBFZHVjYXRpb24gbWFuYWdlci4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIGEgcHJvamVjdCBvZiBpbnRlcm5hdGlvbmFsIGNvb3BlcmF0aW9uIGJldHdlZW4gTkFTQSBhbmQgdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeSAoRVNBKSBhbmQgaXMgbWFuYWdlZCBieSBOQVNB4oCZcyBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXIgKEdTRkMpIGluIEdyZWVuYmVsdCwgTWQuIFRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgKFNUU2NJKSBjb25kdWN0cyBIdWJibGUgc2NpZW5jZSBvcGVyYXRpb25zLiBUaGUgaW5zdGl0dXRlIGlzIG9wZXJhdGVkIGZvciBOQVNBIGJ5IHRoZSBBc3NvY2lhdGlvbiBvZiBVbml2ZXJzaXRpZXMgZm9yIFJlc2VhcmNoIGluIEFzdHJvbm9teSwgSW5jLiwgV2FzaGluZ3RvbiwgRC5DLiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxMTcvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxMTd+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTE3L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSdzIEdsaXR0ZXJpbmcgRnJpc2JlZSBHYWxheHkiLCJuZ2MxNDQ4Il0sInRpdGxlIjoiSHViYmxlJ3MgR2xpdHRlcmluZyBGcmlzYmVlIEdhbGF4eSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDExNyIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGlzIGltYWdlIGZyb20gSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYSAzIChXRkMzKSBzaG93cyBhIHNlY3Rpb24gb2YgTkdDIDE0NDgsIGEgc3BpcmFsIGdhbGF4eSBsb2NhdGVkIGFib3V0IDUwIG1pbGxpb24gbGlnaHQteWVhcnMgZnJvbSBFYXJ0aCBpbiB0aGUgbGl0dGxlLWtub3duIGNvbnN0ZWxsYXRpb24gb2YgSG9yb2xvZ2l1bSAoVGhlIFBlbmR1bHVtIENsb2NrKS4gV2UgdGVuZCB0byB0aGluayBvZiBzcGlyYWwgZ2FsYXhpZXMgYXMgbWFzc2l2ZSBhbmQgcm91Z2hseSBjaXJjdWxhciBjZWxlc3RpYWwgYm9kaWVzLCBzbyB0aGlzIGdsaXR0ZXJpbmcgb3ZhbCBkb2VzIG5vdCBpbW1lZGlhdGVseSBhcHBlYXIgdG8gZml0IHRoZSB2aXN1YWwgYmlsbC4gV2hhdOKAmXMgZ29pbmcgb24/ICBJbWFnaW5lIGEgc3BpcmFsIGdhbGF4eSBhcyBhIGNpcmN1bGFyIGZyaXNiZWUgc3Bpbm5pbmcgZ2VudGx5IGluIHNwYWNlLiBXaGVuIHdlIHNlZSBpdCBmYWNlIG9uLCBvdXIgb2JzZXJ2YXRpb25zIHJldmVhbCBhIHNwZWN0YWN1bGFyIGFtb3VudCBvZiBkZXRhaWwgYW5kIHN0cnVjdHVyZSDigJQgYSBncmVhdCBleGFtcGxlIGZyb20gSHViYmxlIGlzIHRoZSB0ZWxlc2NvcGXigJlzIHZpZXcgb2YgTWVzc2llciA1MSwgb3RoZXJ3aXNlIGtub3duIGFzIHRoZSBXaGlybHBvb2wgR2FsYXh5LiBIb3dldmVyLCB0aGUgTkdDIDE0NDggZnJpc2JlZSBpcyB2ZXJ5IG5lYXJseSBlZGdlLW9uIHdpdGggcmVzcGVjdCB0byBFYXJ0aCwgZ2l2aW5nIGl0IGFuIGFwcGVhcmFuY2UgdGhhdCBpcyBtb3JlIG92YWwgdGhhbiBjaXJjdWxhci4gVGhlIHNwaXJhbCBhcm1zLCB3aGljaCBjdXJ2ZSBvdXQgZnJvbSBOR0MgMTQ0OOKAmXMgZGVuc2UgY29yZSwgY2FuIGp1c3QgYWJvdXQgYmUgc2Vlbi4gIEFsdGhvdWdoIHNwaXJhbCBnYWxheGllcyBtaWdodCBhcHBlYXIgc3RhdGljIHdpdGggdGhlaXIgcGljdHVyZXNxdWUgc2hhcGVzIGZyb3plbiBpbiBzcGFjZSwgdGhpcyBpcyB2ZXJ5IGZhciBmcm9tIHRoZSB0cnV0aC4gVGhlIHN0YXJzIGluIHRoZXNlIGRyYW1hdGljIHNwaXJhbCBjb25maWd1cmF0aW9ucyBhcmUgY29uc3RhbnRseSBtb3ZpbmcgYXMgdGhleSBvcmJpdCBhcm91bmQgdGhlIGdhbGF4eeKAmXMgY29yZSwgd2l0aCB0aG9zZSBvbiB0aGUgaW5zaWRlIG1ha2luZyB0aGUgb3JiaXQgZmFzdGVyIHRoYW4gdGhvc2Ugc2l0dGluZyBmdXJ0aGVyIG91dC4gIFRoaXMgbWFrZXMgdGhlIGZvcm1hdGlvbiBhbmQgY29udGludWVkIGV4aXN0ZW5jZSBvZiBhIHNwaXJhbCBnYWxheHnigJlzIGFybXMgc29tZXRoaW5nIG9mIGEgY29zbWljIHB1enpsZSwgYmVjYXVzZSB0aGUgYXJtcyB3cmFwcGVkIGFyb3VuZCB0aGUgc3Bpbm5pbmcgY29yZSBzaG91bGQgYmVjb21lIHdvdW5kIHRpZ2h0ZXIgYW5kIHRpZ2h0ZXIgYXMgdGltZSBnb2VzIG9uIOKAlCBidXQgdGhpcyBpcyBub3Qgd2hhdCB3ZSBzZWUuIFRoaXMgaXMga25vd24gYXMgdGhlIHdpbmRpbmcgcHJvYmxlbS4gIENyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBICNuYXNhZ29kZGFyZCAjc3BhY2UgI3NjaWVuY2UgI0h1YmJsZSAjc3RhciAgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgICAgICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxMjkvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxMjl+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTI5L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBTcG90bGlnaHRzIGEgQ2VsZXN0aWFsIFNpZGVraWNrIiwiZmllbGRzdGFycyJdLCJ0aXRsZSI6Ikh1YmJsZSBTcG90bGlnaHRzIGEgQ2VsZXN0aWFsIFNpZGVraWNrIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTI5IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgaW1hZ2Ugd2FzIGNhcHR1cmVkIGJ5IHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3Bl4oCZcyBBZHZhbmNlZCBDYW1lcmEgZm9yIFN1cnZleXMgKEFDUyksIGEgaGlnaGx5IGVmZmljaWVudCB3aWRlLWZpZWxkIGNhbWVyYSBjb3ZlcmluZyB0aGUgb3B0aWNhbCBhbmQgbmVhci1pbmZyYXJlZCBwYXJ0cyBvZiB0aGUgc3BlY3RydW0uIFdoaWxlIHRoaXMgbG92ZWx5IGltYWdlIGNvbnRhaW5zIGh1bmRyZWRzIG9mIGRpc3RhbnQgc3RhcnMgYW5kIGdhbGF4aWVzLCBvbmUgdml0YWwgdGhpbmcgaXMgbWlzc2luZyDigJQgdGhlIG9iamVjdCBIdWJibGUgd2FzIGFjdHVhbGx5IHN0dWR5aW5nIGF0IHRoZSB0aW1lISAgVGhpcyBpcyBub3QgYmVjYXVzZSB0aGUgdGFyZ2V0IGhhcyBkaXNhcHBlYXJlZC4gVGhlIEFDUyBhY3R1YWxseSB1c2VzIHR3byBkZXRlY3RvcnM6IHRoZSBmaXJzdCBjYXB0dXJlcyB0aGUgb2JqZWN0IGJlaW5nIHN0dWRpZWQg4oCUIGluIHRoaXMgY2FzZSBhbiBvcGVuIHN0YXIgY2x1c3RlciBrbm93biBhcyBOR0MgMjk5IOKAlCB3aGlsZSB0aGUgb3RoZXIgZGV0ZWN0b3IgaW1hZ2VzIHRoZSBwYXRjaCBvZiBzcGFjZSBqdXN0IOKAmGJlbmVhdGjigJkgaXQuIFRoaXMgaXMgd2hhdCBjYW4gYmUgc2VlbiBoZXJlLiAgVGVjaG5pY2FsbHksIHRoaXMgcGljdHVyZSBpcyBtZXJlbHkgYSBzaWRla2ljayBvZiB0aGUgYWN0dWFsIG9iamVjdCBvZiBpbnRlcmVzdCDigJQgYnV0IHNwYWNlIGlzIGJ1cnN0aW5nIHdpdGggYWN0aXZpdHksIGFuZCB0aGlzIGZpZWxkIG9mIGJyaWdodCBjZWxlc3RpYWwgYm9kaWVzIG9mZmVycyBwbGVudHkgb2YgaW50ZXJlc3Qgb24gaXRzIG93bi4gSXQgbWF5IGluaXRpYWxseSBzZWVtIHRvIHNob3cganVzdCBzdGFycywgYnV0IGEgY2xvc2VyIGxvb2sgcmV2ZWFscyBtYW55IG9mIHRoZXNlIHRpbnkgb2JqZWN0cyB0byBiZSBnYWxheGllcy4gVGhlIHNwaXJhbCBnYWxheGllcyBoYXZlIGFybXMgY3VydmluZyBvdXQgZnJvbSBhIGJyaWdodCBjZW50ZXIuIFRoZSBmdXp6aWVyLCBsZXNzIGNsZWFybHkgc2hhcGVkIGdhbGF4aWVzIG1pZ2h0IGJlIGVsbGlwdGljYWxzLiBTb21lIG9mIHRoZXNlIGdhbGF4aWVzIGNvbnRhaW4gbWlsbGlvbnMgb3IgZXZlbiBiaWxsaW9ucyBvZiBzdGFycywgYnV0IGFyZSBzbyBkaXN0YW50IHRoYXQgYWxsIG9mIHRoZWlyIHN0YXJyeSByZXNpZGVudHMgYXJlIGNvbnRhaW5lZCB3aXRoaW4ganVzdCBhIHNtYWxsIHBpbnByaWNrIG9mIGxpZ2h0IHRoYXQgYXBwZWFycyB0byBiZSB0aGUgc2FtZSBzaXplIGFzIGEgc2luZ2xlIHN0YXIhICBUaGUgYnJpZ2h0IGJsdWUgZG90cyBhcmUgdmVyeSBob3Qgc3RhcnMsIHNvbWV0aW1lcyBkaXN0b3J0ZWQgaW50byBjcm9zc2VzIGJ5IHRoZSBzdHJ1dHMgc3VwcG9ydGluZyBIdWJibGXigJlzIHNlY29uZGFyeSBtaXJyb3IuIFRoZSByZWRkZXIgZG90cyBhcmUgY29vbGVyIHN0YXJzLCBwb3NzaWJseSBpbiB0aGUgcmVkIGdpYW50IHBoYXNlIHdoZW4gYSBkeWluZyBzdGFyIGNvb2xzIGFuZCBleHBhbmRzLiAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA0MjMvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA0MjN+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDIzL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBGaW5kcyBNaXNiZWhhdmluZyBTcGlyYWwiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDIzIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNi0wMS0yOVQxNDo1NDoyOFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBGaW5kcyBNaXNiZWhhdmluZyBTcGlyYWwiLCJkZXNjcmlwdGlvbiI6IkRlc3BpdGUgaXRzIHVuYXNzdW1pbmcgYXBwZWFyYW5jZSwgdGhlIGVkZ2Utb24gc3BpcmFsIGdhbGF4eSBjYXB0dXJlZCBpbiB0aGUgbGVmdCBoYWxmIG9mIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSBpcyBhY3R1YWxseSBxdWl0ZSByZW1hcmthYmxlLiAgTG9jYXRlZCBhYm91dCBvbmUgYmlsbGlvbiBsaWdodC15ZWFycyBhd2F5IGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIEVyaWRhbnVzLCB0aGlzIHN0cmlraW5nIGdhbGF4eSDigJQga25vd24gYXMgTE85NSAwMzEzLTE5MiDigJQgaGFzIGEgc3BpcmFsIHNoYXBlIHNpbWlsYXIgdG8gdGhhdCBvZiB0aGUgTWlsa3kgV2F5LiBJdCBoYXMgYSBsYXJnZSBjZW50cmFsIGJ1bGdlLCBhbmQgYXJtcyBzcGVja2xlZCB3aXRoIGJyaWdodGx5IGdsb3dpbmcgZ2FzIG1vdHRsZWQgYnkgdGhpY2sgbGFuZXMgb2YgZGFyayBkdXN0LiBJdHMgY29tcGFuaW9uLCBzaXR0aW5nIGluIHRoZSByaWdodCBvZiB0aGUgZnJhbWUsIGlzIGtub3duIHJhdGhlciB1bnBvZXRpY2FsbHkgYXMgW0xPWTIwMDFdIEowMzE1NDkuOC0xOTA2MjMuICBKZXRzLCBvdXRidXJzdHMgb2Ygc3VwZXJoZWF0ZWQgZ2FzIG1vdmluZyBhdCBjbG9zZSB0byB0aGUgc3BlZWQgb2YgbGlnaHQsIGhhdmUgbG9uZyBiZWVuIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29yZXMgb2YgZ2lhbnQgZWxsaXB0aWNhbCBnYWxheGllcywgYW5kIGdhbGF4aWVzIGluIHRoZSBwcm9jZXNzIG9mIG1lcmdpbmcuIEhvd2V2ZXIsIGluIGFuIHVuZXhwZWN0ZWQgZGlzY292ZXJ5LCBhc3Ryb25vbWVycyBmb3VuZCBMTzk1IDAzMTMtMTkyLCBldmVuIHRob3VnaCBpdCBpcyBhIHNwaXJhbCBnYWxheHksIHRvIGhhdmUgaW50ZW5zZSByYWRpbyBqZXRzIHNwZXdpbmcgb3V0IGZyb20gaXRzIGNlbnRlci4gVGhlIGdhbGF4eSBhcHBlYXJzIHRvIGhhdmUgdHdvIG1vcmUgcmVnaW9ucyB0aGF0IGFyZSBhbHNvIHN0cm9uZ2x5IGVtaXR0aW5nIGluIHRoZSByYWRpbyBwYXJ0IG9mIHRoZSBzcGVjdHJ1bSwgbWFraW5nIGl0IGV2ZW4gcmFyZXIgc3RpbGwuICBUaGUgZGlzY292ZXJ5IG9mIHRoZXNlIGdpYW50IGpldHMgaW4gMjAwMyDigJQgbm90IHZpc2libGUgaW4gdGhpcyBpbWFnZSwgYnV0IGluZGljYXRlZCBpbiB0aGlzIGVhcmxpZXIgSHViYmxlIGNvbXBvc2l0ZSDigJQgaGFzIGJlZW4gZm9sbG93ZWQgYnkgdGhlIHVuZWFydGhpbmcgb2YgYSBmdXJ0aGVyIHRocmVlIHNwaXJhbCBnYWxheGllcyBjb250YWluaW5nIHJhZGlvLWVtaXR0aW5nIGpldHMgaW4gcmVjZW50IHllYXJzLiBUaGlzIGdyb3dpbmcgY2xhc3Mgb2YgdW51c3VhbCBzcGlyYWxzIGNvbnRpbnVlcyB0byByYWlzZSBzaWduaWZpY2FudCBxdWVzdGlvbnMgYWJvdXQgaG93IGpldHMgYXJlIHByb2R1Y2VkIHdpdGhpbiBnYWxheGllcywgYW5kIGhvdyB0aGV5IGFyZSB0aHJvd24gb3V0IGludG8gdGhlIGNvc21vcy4gIEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBOyBhY2tub3dsZWRnZW1lbnQsIEp1ZHkgU2NobWlkdCAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2NDgvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2NDh+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjQ4L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBTZWVzIGEgXCJNZXNzIG9mIFN0YXJzXCIiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjQ4IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wOC0xNFQxODoyNDowM1oiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIGEgXCJNZXNzIG9mIFN0YXJzXCIiLCJkZXNjcmlwdGlvbiI6IkJ1cnN0cyBvZiBwaW5rIGFuZCByZWQsIGRhcmsgbGFuZXMgb2YgbW90dGxlZCBjb3NtaWMgZHVzdCwgYW5kIGEgYnJpZ2h0IHNjYXR0ZXJpbmcgb2Ygc3RhcnMg4oCUIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSBzaG93cyBwYXJ0IG9mIGEgbWVzc3kgYmFycmVkIHNwaXJhbCBnYWxheHkga25vd24gYXMgTkdDIDQyOC4gSXQgbGllcyBhcHByb3hpbWF0ZWx5IDQ4IG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBmcm9tIEVhcnRoIGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIENldHVzIChUaGUgU2VhIE1vbnN0ZXIpLiAgQWx0aG91Z2ggYSBzcGlyYWwgc2hhcGUgaXMgc3RpbGwganVzdCBhYm91dCB2aXNpYmxlIGluIHRoaXMgY2xvc2UtdXAgc2hvdCwgb3ZlcmFsbCBOR0MgNDI44oCZcyBzcGlyYWwgc3RydWN0dXJlIGFwcGVhcnMgdG8gYmUgcXVpdGUgZGlzdG9ydGVkIGFuZCB3YXJwZWQsIHRob3VnaHQgdG8gYmUgYSByZXN1bHQgb2YgYSBjb2xsaXNpb24gYmV0d2VlbiB0d28gZ2FsYXhpZXMuIFRoZXJlIGFsc28gYXBwZWFycyB0byBiZSBhIHN1YnN0YW50aWFsIGFtb3VudCBvZiBzdGFyIGZvcm1hdGlvbiBvY2N1cnJpbmcgd2l0aGluIE5HQyA0Mjgg4oCUIGFub3RoZXIgdGVsbHRhbGUgc2lnbiBvZiBhIG1lcmdlci4gV2hlbiBnYWxheGllcyBjb2xsaWRlIHRoZWlyIGNsb3VkcyBvZiBnYXMgY2FuIG1lcmdlLCBjcmVhdGluZyBpbnRlbnNlIHNob2NrcyBhbmQgaG90IHBvY2tldHMgb2YgZ2FzLCBhbmQgb2Z0ZW4gdHJpZ2dlcmluZyBuZXcgd2F2ZXMgb2Ygc3RhciBmb3JtYXRpb24uICBOR0MgNDI4IHdhcyBkaXNjb3ZlcmVkIGJ5IFdpbGxpYW0gSGVyc2NoZWwgaW4gRGVjZW1iZXIgMTc4Ni4gTW9yZSByZWNlbnRseSBhIHR5cGUgb2Ygc3VwZXJub3ZhIGRlc2lnbmF0ZWQgU04yMDEzY3Qgd2FzIGRpc2NvdmVyZWQgd2l0aGluIHRoZSBnYWxheHkgYnkgU3R1YXJ0IFBhcmtlciBvZiB0aGUgQk9TUyAoQmFja3lhcmQgT2JzZXJ2YXRvcnkgU3VwZXJub3ZhIFNlYXJjaCkgcHJvamVjdCBpbiBBdXN0cmFsaWEgYW5kIE5ldyBaZWFsYW5kLCBhbHRob3VnaCBpdCBpcyB1bmZvcnR1bmF0ZWx5IG5vdCB2aXNpYmxlIGluIHRoaXMgaW1hZ2UuICBUaGlzIGltYWdlIHdhcyBjYXB0dXJlZCBieSBIdWJibGXigJlzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cyAoQUNTKSBhbmQgV2lkZSBGaWVsZCBhbmQgUGxhbmV0YXJ5IENhbWVyYSAyIChXRlBDMikuICAgIEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSBhbmQgTkFTQSBhbmQgUy4gU21hcnR0IChRdWVlbidzIFVuaXZlcnNpdHkgQmVsZmFzdCksIEFja25vd2xlZGdlbWVudHM6IE5pY2sgUm9zZSBhbmQgRmxpY2tyIHVzZXIgcGVubmluZSBjbG91ZCAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTk1NS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTk1NX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5NTUvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlIHJldmVhbHMgaGVhcnQgb2YgTGFnb29uIE5lYnVsYSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5NTUiLCJkYXRlX2NyZWF0ZWQiOiIyMDEwLTA5LTIyVDE1OjE4OjM0WiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIHJldmVhbHMgaGVhcnQgb2YgTGFnb29uIE5lYnVsYSIsImRlc2NyaXB0aW9uIjoiSW1hZ2UgcmVsZWFzZSBkYXRlIFNlcHRlbWJlciAyMiwgMjAxMCAgVG8gdmlldyBhIHZpZGVvIG9mIHRoaXMgaW1hZ2UgZ28gaGVyZTogPGEgaHJlZj1cImh0dHA6Ly93d3cuZmxpY2tyLmNvbS9waG90b3MvZ3NmYy81MDE0NDUyMjAzXCI+d3d3LmZsaWNrci5jb20vcGhvdG9zL2dzZmMvNTAxNDQ1MjIwMzwvYT4gIENhcHRpb246IEEgc3BlY3RhY3VsYXIgbmV3IE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaW1hZ2UgcmV2ZWFscyB0aGUgaGVhcnQgb2YgdGhlIExhZ29vbiBOZWJ1bGEuIFNlZW4gYXMgYSBtYXNzaXZlIGNsb3VkIG9mIGdsb3dpbmcgZHVzdCBhbmQgZ2FzLCBib21iYXJkZWQgYnkgdGhlIGVuZXJnZXRpYyByYWRpYXRpb24gb2YgbmV3IHN0YXJzLCB0aGlzIHBsYWNpZCBuYW1lIGhpZGVzIGEgZHJhbWF0aWMgcmVhbGl0eS4gIFRoZSBBZHZhbmNlZCBDYW1lcmEgZm9yIFN1cnZleXMgKEFDUykgb24gdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGFzIGNhcHR1cmVkIGEgZHJhbWF0aWMgdmlldyBvZiBnYXMgYW5kIGR1c3Qgc2N1bHB0ZWQgYnkgaW50ZW5zZSByYWRpYXRpb24gZnJvbSBob3QgeW91bmcgc3RhcnMgZGVlcCBpbiB0aGUgaGVhcnQgb2YgdGhlIExhZ29vbiBOZWJ1bGEgKE1lc3NpZXIgOCkuIFRoaXMgc3BlY3RhY3VsYXIgb2JqZWN0IGlzIG5hbWVkIGFmdGVyIHRoZSB3aWRlLCBsYWdvb24tc2hhcGVkIGR1c3QgbGFuZSB0aGF0IGNyb3NzZXMgdGhlIGdsb3dpbmcgZ2FzIG9mIHRoZSBuZWJ1bGEuICBUaGlzIHN0cnVjdHVyZSBpcyBwcm9taW5lbnQgaW4gd2lkZS1maWVsZCBpbWFnZXMsIGJ1dCBjYW5ub3QgYmUgc2VlbiBpbiB0aGlzIGNsb3NlLXVwLiBIb3dldmVyIHRoZSBzdHJhbmdlIGJpbGxvd2luZyBzaGFwZXMgYW5kIHNhbmR5IHRleHR1cmUgdmlzaWJsZSBpbiB0aGlzIGltYWdlIG1ha2UgdGhlIExhZ29vbiBOZWJ1bGHigJlzIHdhdGVyeSBuYW1lIGVlcmlseSBhcHByb3ByaWF0ZSBmcm9tIHRoaXMgdmlld3BvaW50IHRvby4gIExvY2F0ZWQgZm91ciB0byBmaXZlIHRob3VzYW5kIGxpZ2h0LXllYXJzIGF3YXksIGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIFNhZ2l0dGFyaXVzICh0aGUgQXJjaGVyKSwgTWVzc2llciA4IGlzIGEgaHVnZSByZWdpb24gb2Ygc3RhciBiaXJ0aCB0aGF0IHN0cmV0Y2hlcyBhY3Jvc3Mgb25lIGh1bmRyZWQgbGlnaHQteWVhcnMuIENsb3VkcyBvZiBoeWRyb2dlbiBnYXMgYXJlIHNsb3dseSBjb2xsYXBzaW5nIHRvIGZvcm0gbmV3IHN0YXJzLCB3aG9zZSBicmlnaHQgdWx0cmF2aW9sZXQgcmF5cyB0aGVuIGxpZ2h0IHVwIHRoZSBzdXJyb3VuZGluZyBnYXMgaW4gYSBkaXN0aW5jdGl2ZSBzaGFkZSBvZiByZWQuICBUaGUgd2lzcHkgdGVuZHJpbHMgYW5kIGJlYWNoLWxpa2UgZmVhdHVyZXMgb2YgdGhlIG5lYnVsYSBhcmUgbm90IGNhdXNlZCBieSB0aGUgZWJiIGFuZCBmbG93IG9mIHRpZGVzLCBidXQgcmF0aGVyIGJ5IHVsdHJhdmlvbGV0IHJhZGlhdGlvbuKAmXMgYWJpbGl0eSB0byBlcm9kZSBhbmQgZGlzcGVyc2UgdGhlIGdhcyBhbmQgZHVzdCBpbnRvIHRoZSBkaXN0aW5jdGl2ZSBzaGFwZXMgdGhhdCB3ZSBzZWUuICBJbiByZWNlbnQgeWVhcnMgYXN0cm9ub21lcnMgcHJvYmluZyB0aGUgc2VjcmV0cyBvZiB0aGUgTGFnb29uIE5lYnVsYSBoYXZlIGZvdW5kIHRoZSBmaXJzdCB1bmFtYmlndW91cyBwcm9vZiB0aGF0IHN0YXIgZm9ybWF0aW9uIGJ5IGFjY3JldGlvbiBvZiBtYXR0ZXIgZnJvbSB0aGUgZ2FzIGNsb3VkIGlzIG9uZ29pbmcgaW4gdGhpcyByZWdpb24uICBZb3VuZyBzdGFycyB0aGF0IGFyZSBzdGlsbCBzdXJyb3VuZGVkIGJ5IGFuIGFjY3JldGlvbiBkaXNjIG9jY2FzaW9uYWxseSBzaG9vdCBvdXQgbG9uZyB0ZW5kcmlscyBvZiBtYXR0ZXIgZnJvbSB0aGVpciBwb2xlcy4gU2V2ZXJhbCBleGFtcGxlcyBvZiB0aGVzZSBqZXRzLCBrbm93biBhcyBIZXJiaWctSGFybyBvYmplY3RzLCBoYXZlIGJlZW4gZm91bmQgaW4gdGhpcyBuZWJ1bGEgaW4gdGhlIGxhc3QgZml2ZSB5ZWFycywgcHJvdmlkaW5nIHN0cm9uZyBzdXBwb3J0IGZvciBhc3Ryb25vbWVyc+KAmSB0aGVvcmllcyBhYm91dCBzdGFyIGZvcm1hdGlvbiBpbiBzdWNoIGh5ZHJvZ2VuLXJpY2ggcmVnaW9ucy4gIFRoZSBMYWdvb24gTmVidWxhIGlzIGZhaW50bHkgdmlzaWJsZSB0byB0aGUgbmFrZWQgZXllIG9uIGRhcmsgbmlnaHRzIGFzIGEgc21hbGwgcGF0Y2ggb2YgZ3JleSBpbiB0aGUgaGVhcnQgb2YgdGhlIE1pbGt5IFdheS4gV2l0aG91dCBhIHRlbGVzY29wZSwgdGhlIG5lYnVsYSBsb29rcyB1bmRlcndoZWxtaW5nIGJlY2F1c2UgaHVtYW4gZXllcyBhcmUgdW5hYmxlIHRvIGRpc3Rpbmd1aXNoIGNsZWFybHkgYmV0d2VlbiBjb2xvdXJzIGF0IGxvdyBsaWdodCBsZXZlbHMuIENoYXJsZXMgTWVzc2llciwgdGhlIDE4dGggY2VudHVyeSBGcmVuY2ggYXN0cm9ub21lciwgb2JzZXJ2ZWQgdGhlIG5lYnVsYSBhbmQgaW5jbHVkZWQgaXQgaW4gaGlzIGZhbW91cyBhc3Ryb25vbWljYWwgY2F0YWxvZ3VlLCBmcm9tIHdoaWNoIHRoZSBuZWJ1bGHigJlzIGFsdGVybmF0aXZlIG5hbWUgY29tZXMuIEJ1dCBoaXMgcmVsYXRpdmVseSBzbWFsbCByZWZyYWN0aW5nIHRlbGVzY29wZSB3b3VsZCBvbmx5IGhhdmUgaGludGVkIGF0IHRoZSBkcmFtYXRpYyBzdHJ1Y3R1cmVzIGFuZCBjb2xvdXJzIG5vdyB2aXNpYmxlIHRoYW5rcyB0byBIdWJibGUuICBUaGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpcyBhIHByb2plY3Qgb2YgaW50ZXJuYXRpb25hbCBjb29wZXJhdGlvbiBiZXR3ZWVuIEVTQSBhbmQgTkFTQS4gIEltYWdlIGNyZWRpdDogTkFTQSwgRVNBICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gIFRvIGxlYXJuIG1vcmUgYWJvdXQgdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgZ28gaGVyZTogPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvbWFpbi9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvbWFpbi9pbmRleC5odG1sPC9hPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2MTUvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2MTV+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjE1L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBTZWVzIGEgR2FsYWN0aWMgU3VuZmxvd2VyIiwibWVzc2llcjYzIl0sInRpdGxlIjoiSHViYmxlIFNlZXMgYSBHYWxhY3RpYyBTdW5mbG93ZXIiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2MTUiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiVGhlIGFycmFuZ2VtZW50IG9mIHRoZSBzcGlyYWwgYXJtcyBpbiB0aGUgZ2FsYXh5IE1lc3NpZXIgNjMsIHNlZW4gaGVyZSBpbiBhbiBpbWFnZSBmcm9tIHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlLCByZWNhbGwgdGhlIHBhdHRlcm4gYXQgdGhlIGNlbnRlciBvZiBhIHN1bmZsb3dlci4gU28gdGhlIG5pY2tuYW1lIGZvciB0aGlzIGNvc21pYyBvYmplY3Qg4oCUIHRoZSBTdW5mbG93ZXIgR2FsYXh5IOKAlCBpcyBubyBjb2luY2lkZW5jZS4gIERpc2NvdmVyZWQgYnkgUGllcnJlIE1lY2hhaW4gaW4gMTc3OSwgdGhlIGdhbGF4eSBsYXRlciBtYWRlIGl0IGFzIHRoZSA2M3JkIGVudHJ5IGludG8gZmVsbG93IEZyZW5jaCBhc3Ryb25vbWVyIENoYXJsZXMgTWVzc2llcuKAmXMgZmFtb3VzIGNhdGFsb2d1ZSwgcHVibGlzaGVkIGluIDE3ODEuIFRoZSB0d28gYXN0cm9ub21lcnMgc3BvdHRlZCB0aGUgU3VuZmxvd2VyIEdhbGF4eeKAmXMgZ2xvdyBpbiB0aGUgc21hbGwsIG5vcnRoZXJuIGNvbnN0ZWxsYXRpb24gQ2FuZXMgVmVuYXRpY2kgKHRoZSBIdW50aW5nIERvZ3MpLiBXZSBub3cga25vdyB0aGlzIGdhbGF4eSBpcyBhYm91dCAyNyBtaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXkgYW5kIGJlbG9uZ3MgdG8gdGhlIE01MSBHcm91cCDigJQgYSBncm91cCBvZiBnYWxheGllcywgbmFtZWQgYWZ0ZXIgaXRzIGJyaWdodGVzdCBtZW1iZXIsIE1lc3NpZXIgNTEsIGFub3RoZXIgc3BpcmFsLXNoYXBlZCBnYWxheHkgZHViYmVkIHRoZSBXaGlybHBvb2wgR2FsYXh5LiAgR2FsYWN0aWMgYXJtcywgc3VuZmxvd2VycyBhbmQgd2hpcmxwb29scyBhcmUgb25seSBhIGZldyBleGFtcGxlcyBvZiBuYXR1cmXigJlzIGFwcGFyZW50IHByZWZlcmVuY2UgZm9yIHNwaXJhbHMuIEZvciBnYWxheGllcyBsaWtlIE1lc3NpZXIgNjMgdGhlIHdpbmRpbmcgYXJtcyBzaGluZSBicmlnaHQgYmVjYXVzZSBvZiB0aGUgcHJlc2VuY2Ugb2YgcmVjZW50bHkgZm9ybWVkLCBibHVl4oCTd2hpdGUgZ2lhbnQgc3RhcnMgYW5kIGNsdXN0ZXJzLCByZWFkaWx5IHNlZW4gaW4gdGhpcyBIdWJibGUgaW1hZ2UuICBJbWFnZSBjcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE1OC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE1OH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxNTgvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNwaWVzIFNwaXJhbCBHYWxheHkiLCJuZ2MzMjc0Il0sImRlc2NyaXB0aW9uIjoiU3BpcmFsIGdhbGF4eSBOR0MgMzI3NCBpcyBhIHJlbGF0aXZlbHkgZmFpbnQgZ2FsYXh5IGxvY2F0ZWQgb3ZlciAyMCBtaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXkgaW4gdGhlIGNvbnN0ZWxsYXRpb24gb2YgTGVvIChUaGUgTGlvbikuICBUaGlzIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaW1hZ2UgY29tZXMgY291cnRlc3kgb2YgSHViYmxlJ3MgV2lkZSBGaWVsZCBDYW1lcmEgMyAoV0ZDMyksIHdob3NlIG11bHRpLWNvbG9yIHZpc2lvbiBhbGxvd3MgYXN0cm9ub21lcnMgdG8gc3R1ZHkgYSB3aWRlIHJhbmdlIG9mIHRhcmdldHMsIGZyb20gbmVhcmJ5IHN0YXIgZm9ybWF0aW9uIHRvIGdhbGF4aWVzIGluIHRoZSBtb3N0IHJlbW90ZSByZWdpb25zIG9mIHRoZSBjb3Ntb3MuICAgIFRoaXMgaW1hZ2UgY29tYmluZXMgb2JzZXJ2YXRpb25zIGdhdGhlcmVkIGluIGZpdmUgZGlmZmVyZW50IGZpbHRlcnMsIGJyaW5naW5nIHRvZ2V0aGVyIHVsdHJhdmlvbGV0LCB2aXNpYmxlIGFuZCBpbmZyYXJlZCBsaWdodCB0byBzaG93IG9mZiBOR0MgMzI3NCBpbiBhbGwgaXRzIGdsb3J5LiAgTkdDIDMyNzQgd2FzIGRpc2NvdmVyZWQgYnkgV2lsaGVsbSBIZXJzY2hlbCBpbiAxNzgzLiBUaGUgZ2FsYXh5IFBHQyAyMTM3MTQgaXMgYWxzbyB2aXNpYmxlIG9uIHRoZSB1cHBlciByaWdodCBvZiB0aGUgZnJhbWUsIGxvY2F0ZWQgbXVjaCBmYXJ0aGVyIGF3YXkgZnJvbSBFYXJ0aC4gIEltYWdlIENyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBLCBELiBDYWx6ZXR0aSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICAgICAgIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTU4IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTcGllcyBTcGlyYWwgR2FsYXh5IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDEyMy9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDEyM350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxMjMvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIEhvbmVzIEluIG9uIGEgSHlwZXJnaWFudCdzIEhvbWUiLCJ3ZXN0ZXJsdW5kMSJdLCJ0aXRsZSI6Ikh1YmJsZSBIb25lcyBJbiBvbiBhIEh5cGVyZ2lhbnQncyBIb21lIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTIzIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgYmVhdXRpZnVsIEh1YmJsZSBpbWFnZSByZXZlYWxzIGEgeW91bmcgc3VwZXIgc3RhciBjbHVzdGVyIGtub3duIGFzIFdlc3Rlcmx1bmQgMSwgb25seSAxNSwwMDAgbGlnaHQteWVhcnMgYXdheSBpbiBvdXIgTWlsa3kgV2F5IG5laWdoYm9yaG9vZCwgeWV0IGhvbWUgdG8gb25lIG9mIHRoZSBsYXJnZXN0IHN0YXJzIGV2ZXIgZGlzY292ZXJlZC4gIFN0YXJzIGFyZSBjbGFzc2lmaWVkIGFjY29yZGluZyB0byB0aGVpciBzcGVjdHJhbCB0eXBlLCBzdXJmYWNlIHRlbXBlcmF0dXJlLCBhbmQgbHVtaW5vc2l0eS4gV2hpbGUgc3R1ZHlpbmcgYW5kIGNsYXNzaWZ5aW5nIHRoZSBjbHVzdGVy4oCZcyBjb25zdGl0dWVudCBzdGFycywgYXN0cm9ub21lcnMgZGlzY292ZXJlZCB0aGF0IFdlc3Rlcmx1bmQgMSBpcyBob21lIHRvIGFuIGVub3Jtb3VzIHN0YXIuICBPcmlnaW5hbGx5IG5hbWVkIFdlc3Rlcmx1bmQgMS0yNiwgdGhpcyBtb25zdGVyIHN0YXIgaXMgYSByZWQgc3VwZXJnaWFudCAoYWx0aG91Z2ggc29tZXRpbWVzIGNsYXNzaWZpZWQgYXMgYSBoeXBlcmdpYW50KSB3aXRoIGEgcmFkaXVzIG92ZXIgMSw1MDAgdGltZXMgdGhhdCBvZiBvdXIgc3VuLiBJZiBXZXN0ZXJsdW5kIDEtMjYgd2VyZSBwbGFjZWQgd2hlcmUgb3VyIHN1biBpcyBpbiBvdXIgc29sYXIgc3lzdGVtLCBpdCB3b3VsZCBleHRlbmQgb3V0IGJleW9uZCB0aGUgb3JiaXQgb2YgSnVwaXRlci4gIE1vc3Qgb2YgV2VzdGVybHVuZCAx4oCZcyBzdGFycyBhcmUgdGhvdWdodCB0byBoYXZlIGZvcm1lZCBpbiB0aGUgc2FtZSBidXJzdCBvZiBhY3Rpdml0eSwgbWVhbmluZyB0aGF0IHRoZXkgaGF2ZSBzaW1pbGFyIGFnZXMgYW5kIGNvbXBvc2l0aW9ucy4gVGhlIGNsdXN0ZXIgaXMgcmVsYXRpdmVseSB5b3VuZyBpbiBhc3Ryb25vbWljYWwgdGVybXMg4oCUYXQgYXJvdW5kIHRocmVlIG1pbGxpb24geWVhcnMgb2xkIGl0IGlzIGEgYmFieSBjb21wYXJlZCB0byBvdXIgb3duIHN1biwgd2hpY2ggaXMgc29tZSA0LjYgYmlsbGlvbiB5ZWFycyBvbGQuICBDcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMTcvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMTd+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDE3L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZeKAmXMgSHVudGluZyBEb2cgR2FsYXh5IiwibmdjNDI0MiJdLCJ0aXRsZSI6Ikh1YmJsZeKAmXMgSHVudGluZyBEb2cgR2FsYXh5IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDE3IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlR1Y2tlZCBhd2F5IGluIHRoZSBzbWFsbCBub3J0aGVybiBjb25zdGVsbGF0aW9uIG9mIENhbmVzIFZlbmF0aWNpIChUaGUgSHVudGluZyBEb2dzKSBpcyB0aGUgZ2FsYXh5IE5HQyA0MjQyLCBzaG93biBoZXJlIGFzIHNlZW4gYnkgdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUuIFRoZSBnYWxheHkgbGllcyBzb21lIDMwIG1pbGxpb24gbGlnaHQteWVhcnMgZnJvbSB1cy4gQXQgdGhpcyBkaXN0YW5jZSBmcm9tIEVhcnRoLCBhY3R1YWxseSBub3QgYWxsIHRoYXQgZmFyIG9uIGEgY29zbWljIHNjYWxlLCBOR0MgNDI0MiBpcyB2aXNpYmxlIHRvIGFueW9uZSBhcm1lZCB3aXRoIGV2ZW4gYSBiYXNpYyB0ZWxlc2NvcGUsIGFzIEJyaXRpc2ggYXN0cm9ub21lciBXaWxsaWFtIEhlcnNjaGVsIGZvdW5kIHdoZW4gaGUgZGlzY292ZXJlZCB0aGUgZ2FsYXh5IGluIDE3ODguICBUaGlzIGltYWdlIHNob3dzIHRoZSBnYWxheHnigJlzIGJyaWdodCBjZW50ZXIgYW5kIHRoZSBzdXJyb3VuZGluZyBkaW1tZXIgYW5kIG1vcmUgZGlmZnVzZSDigJxmdXp6LuKAnSBEZXNwaXRlIGFwcGVhcmluZyB0byBiZSByZWxhdGl2ZWx5IGJyaWdodCBpbiB0aGlzIGltYWdlLCBzdHVkaWVzIGhhdmUgZm91bmQgdGhhdCBOR0MgNDI0MiBpcyBhY3R1YWxseSByZWxhdGl2ZWx5IGRpbSAoaXQgaGFzIGEgbW9kZXJhdGUtdG8tbG93IHN1cmZhY2UgYnJpZ2h0bmVzcyBhbmQgbG93IGx1bWlub3NpdHkpIGFuZCBhbHNvIHN1cHBvcnRzIGEgbG93IHJhdGUgb2Ygc3RhciBmb3JtYXRpb24uIFRoZSBnYWxheHkgYWxzbyBzZWVtcyB0byBoYXZlIGEgd2VhayBiYXIgb2Ygc3RhcnMgY3V0dGluZyB0aHJvdWdoIGl0cyBhc3ltbWV0cmljIGNlbnRlciwgYW5kIGEgdmVyeSBmYWludCBhbmQgcG9vcmx5LWRlZmluZWQgc3BpcmFsIHN0cnVjdHVyZSB0aHJvdWdob3V0IGl0cyBkaXNrLiBCdXQgaWYgTkdDIDQyNDIgaXMgbm90IGFsbCB0aGF0IHJlbWFya2FibGUsIGFzIHdpdGggbXVjaCBvZiB0aGUgVW5pdmVyc2UsIGl0IGlzIHN0aWxsIGEgYmVhdXRpZnVsIGFuZCBldGhlcmVhbCBzaWdodC4gIENyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM4Mi9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM4Mn50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzODIvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNlZXMgYSBTdGFyIOKAmEluZmxhdGluZ+KAmSBhIEdpYW50IEJ1YmJsZSIsInN0YXIiLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiLCJuYXNhZ29kZGFyZCJdLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIGEgU3RhciDigJhJbmZsYXRpbmfigJkgYSBHaWFudCBCdWJibGUiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzODIiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiRm9yIHRoZSAyNnRoIGJpcnRoZGF5IG9mIE5BU0HigJlzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUsIGFzdHJvbm9tZXJzIGFyZSBoaWdobGlnaHRpbmcgYSBIdWJibGUgaW1hZ2Ugb2YgYW4gZW5vcm1vdXMgYnViYmxlIGJlaW5nIGJsb3duIGludG8gc3BhY2UgYnkgYSBzdXBlci1ob3QsIG1hc3NpdmUgc3Rhci4gVGhlIEh1YmJsZSBpbWFnZSBvZiB0aGUgQnViYmxlIE5lYnVsYSwgb3IgTkdDIDc2MzUsIHdhcyBjaG9zZW4gdG8gbWFyayB0aGUgMjZ0aCBhbm5pdmVyc2FyeSBvZiB0aGUgbGF1bmNoIG9mIEh1YmJsZSBpbnRvIEVhcnRoIG9yYml0IGJ5IHRoZSBTVFMtMzEgc3BhY2Ugc2h1dHRsZSBjcmV3IG9uIEFwcmlsIDI0LCAxOTkwICDigJxBcyBIdWJibGUgbWFrZXMgaXRzIDI2dGggcmV2b2x1dGlvbiBhcm91bmQgb3VyIGhvbWUgc3RhciwgdGhlIHN1biwgd2UgY2VsZWJyYXRlIHRoZSBldmVudCB3aXRoIGEgc3BlY3RhY3VsYXIgaW1hZ2Ugb2YgYSBkeW5hbWljIGFuZCBleGNpdGluZyBpbnRlcmFjdGlvbiBvZiBhIHlvdW5nIHN0YXIgd2l0aCBpdHMgZW52aXJvbm1lbnQuIFRoZSB2aWV3IG9mIHRoZSBCdWJibGUgTmVidWxhLCBjcmFmdGVkIGZyb20gV0ZDLTMgaW1hZ2VzLCByZW1pbmRzIHVzIHRoYXQgSHViYmxlIGdpdmVzIHVzIGEgZnJvbnQgcm93IHNlYXQgdG8gdGhlIGF3ZSBpbnNwaXJpbmcgdW5pdmVyc2Ugd2UgbGl2ZSBpbizigJ0gc2FpZCBKb2huIEdydW5zZmVsZCwgSHViYmxlIGFzdHJvbmF1dCBhbmQgYXNzb2NpYXRlIGFkbWluaXN0cmF0b3Igb2YgTkFTQeKAmXMgU2NpZW5jZSBNaXNzaW9uIERpcmVjdG9yYXRlIGF0IE5BU0EgSGVhZHF1YXJ0ZXJzLCBpbiBXYXNoaW5ndG9uLCBELkMuICAgIFRoZSBCdWJibGUgTmVidWxhIGlzIHNldmVuIGxpZ2h0LXllYXJzIGFjcm9zc+KAlGFib3V0IG9uZS1hbmQtYS1oYWxmIHRpbWVzIHRoZSBkaXN0YW5jZSBmcm9tIG91ciBzdW4gdG8gaXRzIG5lYXJlc3Qgc3RlbGxhciBuZWlnaGJvciwgQWxwaGEgQ2VudGF1cmksIGFuZCByZXNpZGVzIDcsMTAwIGxpZ2h0LXllYXJzIGZyb20gRWFydGggaW4gdGhlIGNvbnN0ZWxsYXRpb24gQ2Fzc2lvcGVpYS4gIFRoZSBzZWV0aGluZyBzdGFyIGZvcm1pbmcgdGhpcyBuZWJ1bGEgaXMgNDUgdGltZXMgbW9yZSBtYXNzaXZlIHRoYW4gb3VyIHN1bi4gR2FzIG9uIHRoZSBzdGFyIGdldHMgc28gaG90IHRoYXQgaXQgZXNjYXBlcyBhd2F5IGludG8gc3BhY2UgYXMgYSDigJxzdGVsbGFyIHdpbmTigJ0gbW92aW5nIGF0IG92ZXIgZm91ciBtaWxsaW9uIG1pbGVzIHBlciBob3VyLiBUaGlzIG91dGZsb3cgc3dlZXBzIHVwIHRoZSBjb2xkLCBpbnRlcnN0ZWxsYXIgZ2FzIGluIGZyb250IG9mIGl0LCBmb3JtaW5nIHRoZSBvdXRlciBlZGdlIG9mIHRoZSBidWJibGUgbXVjaCBsaWtlIGEgc25vd3Bsb3cgcGlsZXMgdXAgc25vdyBpbiBmcm9udCBvZiBpdCBhcyBpdCBtb3ZlcyBmb3J3YXJkLiAgQXMgdGhlIHN1cmZhY2Ugb2YgdGhlIGJ1YmJsZSdzIHNoZWxsIGV4cGFuZHMgb3V0d2FyZCwgaXQgc2xhbXMgaW50byBkZW5zZSByZWdpb25zIG9mIGNvbGQgZ2FzIG9uIG9uZSBzaWRlIG9mIHRoZSBidWJibGUuIFRoaXMgYXN5bW1ldHJ5IG1ha2VzIHRoZSBzdGFyIGFwcGVhciBkcmFtYXRpY2FsbHkgb2ZmLWNlbnRlciBmcm9tIHRoZSBidWJibGUsIHdpdGggaXRzIGxvY2F0aW9uIGluIHRoZSAxMCBv4oCZY2xvY2sgcG9zaXRpb24gaW4gdGhlIEh1YmJsZSB2aWV3LiAgRGVuc2UgcGlsbGFycyBvZiBjb29sIGh5ZHJvZ2VuIGdhcyBsYWNlZCB3aXRoIGR1c3QgYXBwZWFyIGF0IHRoZSB1cHBlciBsZWZ0IG9mIHRoZSBwaWN0dXJlLCBhbmQgbW9yZSDigJxmaW5nZXJz4oCdIGNhbiBiZSBzZWVuIG5lYXJseSBmYWNlLW9uLCBiZWhpbmQgdGhlIHRyYW5zbHVjZW50IGJ1YmJsZS4gIFRoZSBnYXNlcyBoZWF0ZWQgdG8gdmFyeWluZyB0ZW1wZXJhdHVyZXMgZW1pdCBkaWZmZXJlbnQgY29sb3JzOiBveHlnZW4gaXMgaG90IGVub3VnaCB0byBlbWl0IGJsdWUgbGlnaHQgaW4gdGhlIGJ1YmJsZSBuZWFyIHRoZSBzdGFyLCB3aGlsZSB0aGUgY29vbGVyIHBpbGxhcnMgYXJlIHllbGxvdyBmcm9tIHRoZSBjb21iaW5lZCBsaWdodCBvZiBoeWRyb2dlbiBhbmQgbml0cm9nZW4uIFRoZSBwaWxsYXJzIGFyZSBzaW1pbGFyIHRvIHRoZSBpY29uaWMgY29sdW1ucyBpbiB0aGUg4oCcUGlsbGFycyBvZiBDcmVhdGlvbuKAnSBFYWdsZSBOZWJ1bGEuIEFzIHNlZW4gd2l0aCB0aGUgc3RydWN0dXJlcyBpbiB0aGUgRWFnbGUgTmVidWxhLCB0aGUgQnViYmxlIE5lYnVsYSBwaWxsYXJzIGFyZSBiZWluZyBpbGx1bWluYXRlZCBieSB0aGUgc3Ryb25nIHVsdHJhdmlvbGV0IHJhZGlhdGlvbiBmcm9tIHRoZSBicmlsbGlhbnQgc3RhciBpbnNpZGUgdGhlIGJ1YmJsZS4gIFRoZSBCdWJibGUgTmVidWxhIHdhcyBkaXNjb3ZlcmVkIGluIDE3ODcgYnkgV2lsbGlhbSBIZXJzY2hlbCwgYSBwcm9taW5lbnQgQnJpdGlzaCBhc3Ryb25vbWVyLiBJdCBpcyBiZWluZyBmb3JtZWQgYnkgYSBwcm90by10eXBpY2FsIFdvbGYtUmF5ZXQgc3RhciwgQkQgKzYwwroyNTIyLCBhbiBleHRyZW1lbHkgYnJpZ2h0LCBtYXNzaXZlLCBhbmQgc2hvcnQtbGl2ZWQgc3RhciB0aGF0IGhhcyBsb3N0IG1vc3Qgb2YgaXRzIG91dGVyIGh5ZHJvZ2VuIGFuZCBpcyBub3cgZnVzaW5nIGhlbGl1bSBpbnRvIGhlYXZpZXIgZWxlbWVudHMuIFRoZSBzdGFyIGlzIGFib3V0IGZvdXIgbWlsbGlvbiB5ZWFycyBvbGQsIGFuZCBpbiAxMCBtaWxsaW9uIHRvIDIwIG1pbGxpb24geWVhcnMsIGl0IHdpbGwgbGlrZWx5IGRldG9uYXRlIGFzIGEgc3VwZXJub3ZhLiAgSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYS0zIGltYWdlZCB0aGUgbmVidWxhIGluIHZpc2libGUgbGlnaHQgd2l0aCB1bnByZWNlZGVudGVkIGNsYXJpdHkgaW4gRmVicnVhcnkgMjAxNi4gVGhlIGNvbG9ycyBjb3JyZXNwb25kIHRvIGJsdWUgZm9yIG94eWdlbiwgZ3JlZW4gZm9yIGh5ZHJvZ2VuLCBhbmQgcmVkIGZvciBuaXRyb2dlbi4gVGhpcyBpbmZvcm1hdGlvbiB3aWxsIGhlbHAgYXN0cm9ub21lcnMgdW5kZXJzdGFuZCB0aGUgZ2VvbWV0cnkgYW5kIGR5bmFtaWNzIG9mIHRoaXMgY29tcGxleCBzeXN0ZW0uICBUaGUgQnViYmxlIE5lYnVsYSBpcyBvbmUgb2Ygb25seSBhIGhhbmRmdWwgb2YgYXN0cm9ub21pY2FsIG9iamVjdHMgdGhhdCBoYXZlIGJlZW4gb2JzZXJ2ZWQgd2l0aCBzZXZlcmFsIGRpZmZlcmVudCBpbnN0cnVtZW50cyBvbmJvYXJkIEh1YmJsZS4gSHViYmxlIGFsc28gaW1hZ2VkIGl0IHdpdGggdGhlIFdpZGUgRmllbGQgUGxhbmV0YXJ5IENhbWVyYSAoV0ZQQykgaW4gU2VwdGVtYmVyIDE5OTIsIGFuZCB3aXRoIFdpZGUgRmllbGQgUGxhbmV0YXJ5IENhbWVyYS0yIChXRlBDMikgaW4gQXByaWwgMTk5OS4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIGEgcHJvamVjdCBvZiBpbnRlcm5hdGlvbmFsIGNvb3BlcmF0aW9uIGJldHdlZW4gTkFTQSBhbmQgdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeS4gTkFTQSdzIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciBpbiBHcmVlbmJlbHQsIE1hcnlsYW5kLCBtYW5hZ2VzIHRoZSB0ZWxlc2NvcGUuIFRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgKFNUU2NJKSBpbiBCYWx0aW1vcmUsIE1hcnlsYW5kLCBjb25kdWN0cyBIdWJibGUgc2NpZW5jZSBvcGVyYXRpb25zLiBTVFNjSSBpcyBvcGVyYXRlZCBmb3IgTkFTQSBieSB0aGUgQXNzb2NpYXRpb24gb2YgVW5pdmVyc2l0aWVzIGZvciBSZXNlYXJjaCBpbiBBc3Ryb25vbXkgaW4gV2FzaGluZ3RvbiwgRC5DLiAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM4My9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM4M350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzODMvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNlZXMgYSBTdGFyIOKAmEluZmxhdGluZ+KAmSBhIEdpYW50IEJ1YmJsZSIsInN0YXIiLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiLCJuYXNhZ29kZGFyZCJdLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIGEgU3RhciDigJhJbmZsYXRpbmfigJkgYSBHaWFudCBCdWJibGUiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzODMiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiRm9yIHRoZSAyNnRoIGJpcnRoZGF5IG9mIE5BU0HigJlzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUsIGFzdHJvbm9tZXJzIGFyZSBoaWdobGlnaHRpbmcgYSBIdWJibGUgaW1hZ2Ugb2YgYW4gZW5vcm1vdXMgYnViYmxlIGJlaW5nIGJsb3duIGludG8gc3BhY2UgYnkgYSBzdXBlci1ob3QsIG1hc3NpdmUgc3Rhci4gVGhlIEh1YmJsZSBpbWFnZSBvZiB0aGUgQnViYmxlIE5lYnVsYSwgb3IgTkdDIDc2MzUsIHdhcyBjaG9zZW4gdG8gbWFyayB0aGUgMjZ0aCBhbm5pdmVyc2FyeSBvZiB0aGUgbGF1bmNoIG9mIEh1YmJsZSBpbnRvIEVhcnRoIG9yYml0IGJ5IHRoZSBTVFMtMzEgc3BhY2Ugc2h1dHRsZSBjcmV3IG9uIEFwcmlsIDI0LCAxOTkwICDigJxBcyBIdWJibGUgbWFrZXMgaXRzIDI2dGggcmV2b2x1dGlvbiBhcm91bmQgb3VyIGhvbWUgc3RhciwgdGhlIHN1biwgd2UgY2VsZWJyYXRlIHRoZSBldmVudCB3aXRoIGEgc3BlY3RhY3VsYXIgaW1hZ2Ugb2YgYSBkeW5hbWljIGFuZCBleGNpdGluZyBpbnRlcmFjdGlvbiBvZiBhIHlvdW5nIHN0YXIgd2l0aCBpdHMgZW52aXJvbm1lbnQuIFRoZSB2aWV3IG9mIHRoZSBCdWJibGUgTmVidWxhLCBjcmFmdGVkIGZyb20gV0ZDLTMgaW1hZ2VzLCByZW1pbmRzIHVzIHRoYXQgSHViYmxlIGdpdmVzIHVzIGEgZnJvbnQgcm93IHNlYXQgdG8gdGhlIGF3ZSBpbnNwaXJpbmcgdW5pdmVyc2Ugd2UgbGl2ZSBpbizigJ0gc2FpZCBKb2huIEdydW5zZmVsZCwgSHViYmxlIGFzdHJvbmF1dCBhbmQgYXNzb2NpYXRlIGFkbWluaXN0cmF0b3Igb2YgTkFTQeKAmXMgU2NpZW5jZSBNaXNzaW9uIERpcmVjdG9yYXRlIGF0IE5BU0EgSGVhZHF1YXJ0ZXJzLCBpbiBXYXNoaW5ndG9uLCBELkMuICAgIFRoZSBCdWJibGUgTmVidWxhIGlzIHNldmVuIGxpZ2h0LXllYXJzIGFjcm9zc+KAlGFib3V0IG9uZS1hbmQtYS1oYWxmIHRpbWVzIHRoZSBkaXN0YW5jZSBmcm9tIG91ciBzdW4gdG8gaXRzIG5lYXJlc3Qgc3RlbGxhciBuZWlnaGJvciwgQWxwaGEgQ2VudGF1cmksIGFuZCByZXNpZGVzIDcsMTAwIGxpZ2h0LXllYXJzIGZyb20gRWFydGggaW4gdGhlIGNvbnN0ZWxsYXRpb24gQ2Fzc2lvcGVpYS4gIFRoZSBzZWV0aGluZyBzdGFyIGZvcm1pbmcgdGhpcyBuZWJ1bGEgaXMgNDUgdGltZXMgbW9yZSBtYXNzaXZlIHRoYW4gb3VyIHN1bi4gR2FzIG9uIHRoZSBzdGFyIGdldHMgc28gaG90IHRoYXQgaXQgZXNjYXBlcyBhd2F5IGludG8gc3BhY2UgYXMgYSDigJxzdGVsbGFyIHdpbmTigJ0gbW92aW5nIGF0IG92ZXIgZm91ciBtaWxsaW9uIG1pbGVzIHBlciBob3VyLiBUaGlzIG91dGZsb3cgc3dlZXBzIHVwIHRoZSBjb2xkLCBpbnRlcnN0ZWxsYXIgZ2FzIGluIGZyb250IG9mIGl0LCBmb3JtaW5nIHRoZSBvdXRlciBlZGdlIG9mIHRoZSBidWJibGUgbXVjaCBsaWtlIGEgc25vd3Bsb3cgcGlsZXMgdXAgc25vdyBpbiBmcm9udCBvZiBpdCBhcyBpdCBtb3ZlcyBmb3J3YXJkLiAgQXMgdGhlIHN1cmZhY2Ugb2YgdGhlIGJ1YmJsZSdzIHNoZWxsIGV4cGFuZHMgb3V0d2FyZCwgaXQgc2xhbXMgaW50byBkZW5zZSByZWdpb25zIG9mIGNvbGQgZ2FzIG9uIG9uZSBzaWRlIG9mIHRoZSBidWJibGUuIFRoaXMgYXN5bW1ldHJ5IG1ha2VzIHRoZSBzdGFyIGFwcGVhciBkcmFtYXRpY2FsbHkgb2ZmLWNlbnRlciBmcm9tIHRoZSBidWJibGUsIHdpdGggaXRzIGxvY2F0aW9uIGluIHRoZSAxMCBv4oCZY2xvY2sgcG9zaXRpb24gaW4gdGhlIEh1YmJsZSB2aWV3LiAgRGVuc2UgcGlsbGFycyBvZiBjb29sIGh5ZHJvZ2VuIGdhcyBsYWNlZCB3aXRoIGR1c3QgYXBwZWFyIGF0IHRoZSB1cHBlciBsZWZ0IG9mIHRoZSBwaWN0dXJlLCBhbmQgbW9yZSDigJxmaW5nZXJz4oCdIGNhbiBiZSBzZWVuIG5lYXJseSBmYWNlLW9uLCBiZWhpbmQgdGhlIHRyYW5zbHVjZW50IGJ1YmJsZS4gIFRoZSBnYXNlcyBoZWF0ZWQgdG8gdmFyeWluZyB0ZW1wZXJhdHVyZXMgZW1pdCBkaWZmZXJlbnQgY29sb3JzOiBveHlnZW4gaXMgaG90IGVub3VnaCB0byBlbWl0IGJsdWUgbGlnaHQgaW4gdGhlIGJ1YmJsZSBuZWFyIHRoZSBzdGFyLCB3aGlsZSB0aGUgY29vbGVyIHBpbGxhcnMgYXJlIHllbGxvdyBmcm9tIHRoZSBjb21iaW5lZCBsaWdodCBvZiBoeWRyb2dlbiBhbmQgbml0cm9nZW4uIFRoZSBwaWxsYXJzIGFyZSBzaW1pbGFyIHRvIHRoZSBpY29uaWMgY29sdW1ucyBpbiB0aGUg4oCcUGlsbGFycyBvZiBDcmVhdGlvbuKAnSBFYWdsZSBOZWJ1bGEuIEFzIHNlZW4gd2l0aCB0aGUgc3RydWN0dXJlcyBpbiB0aGUgRWFnbGUgTmVidWxhLCB0aGUgQnViYmxlIE5lYnVsYSBwaWxsYXJzIGFyZSBiZWluZyBpbGx1bWluYXRlZCBieSB0aGUgc3Ryb25nIHVsdHJhdmlvbGV0IHJhZGlhdGlvbiBmcm9tIHRoZSBicmlsbGlhbnQgc3RhciBpbnNpZGUgdGhlIGJ1YmJsZS4gIFRoZSBCdWJibGUgTmVidWxhIHdhcyBkaXNjb3ZlcmVkIGluIDE3ODcgYnkgV2lsbGlhbSBIZXJzY2hlbCwgYSBwcm9taW5lbnQgQnJpdGlzaCBhc3Ryb25vbWVyLiBJdCBpcyBiZWluZyBmb3JtZWQgYnkgYSBwcm90by10eXBpY2FsIFdvbGYtUmF5ZXQgc3RhciwgQkQgKzYwwroyNTIyLCBhbiBleHRyZW1lbHkgYnJpZ2h0LCBtYXNzaXZlLCBhbmQgc2hvcnQtbGl2ZWQgc3RhciB0aGF0IGhhcyBsb3N0IG1vc3Qgb2YgaXRzIG91dGVyIGh5ZHJvZ2VuIGFuZCBpcyBub3cgZnVzaW5nIGhlbGl1bSBpbnRvIGhlYXZpZXIgZWxlbWVudHMuIFRoZSBzdGFyIGlzIGFib3V0IGZvdXIgbWlsbGlvbiB5ZWFycyBvbGQsIGFuZCBpbiAxMCBtaWxsaW9uIHRvIDIwIG1pbGxpb24geWVhcnMsIGl0IHdpbGwgbGlrZWx5IGRldG9uYXRlIGFzIGEgc3VwZXJub3ZhLiAgSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYS0zIGltYWdlZCB0aGUgbmVidWxhIGluIHZpc2libGUgbGlnaHQgd2l0aCB1bnByZWNlZGVudGVkIGNsYXJpdHkgaW4gRmVicnVhcnkgMjAxNi4gVGhlIGNvbG9ycyBjb3JyZXNwb25kIHRvIGJsdWUgZm9yIG94eWdlbiwgZ3JlZW4gZm9yIGh5ZHJvZ2VuLCBhbmQgcmVkIGZvciBuaXRyb2dlbi4gVGhpcyBpbmZvcm1hdGlvbiB3aWxsIGhlbHAgYXN0cm9ub21lcnMgdW5kZXJzdGFuZCB0aGUgZ2VvbWV0cnkgYW5kIGR5bmFtaWNzIG9mIHRoaXMgY29tcGxleCBzeXN0ZW0uICBUaGUgQnViYmxlIE5lYnVsYSBpcyBvbmUgb2Ygb25seSBhIGhhbmRmdWwgb2YgYXN0cm9ub21pY2FsIG9iamVjdHMgdGhhdCBoYXZlIGJlZW4gb2JzZXJ2ZWQgd2l0aCBzZXZlcmFsIGRpZmZlcmVudCBpbnN0cnVtZW50cyBvbmJvYXJkIEh1YmJsZS4gSHViYmxlIGFsc28gaW1hZ2VkIGl0IHdpdGggdGhlIFdpZGUgRmllbGQgUGxhbmV0YXJ5IENhbWVyYSAoV0ZQQykgaW4gU2VwdGVtYmVyIDE5OTIsIGFuZCB3aXRoIFdpZGUgRmllbGQgUGxhbmV0YXJ5IENhbWVyYS0yIChXRlBDMikgaW4gQXByaWwgMTk5OS4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIGEgcHJvamVjdCBvZiBpbnRlcm5hdGlvbmFsIGNvb3BlcmF0aW9uIGJldHdlZW4gTkFTQSBhbmQgdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeS4gTkFTQSdzIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciBpbiBHcmVlbmJlbHQsIE1hcnlsYW5kLCBtYW5hZ2VzIHRoZSB0ZWxlc2NvcGUuIFRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgKFNUU2NJKSBpbiBCYWx0aW1vcmUsIE1hcnlsYW5kLCBjb25kdWN0cyBIdWJibGUgc2NpZW5jZSBvcGVyYXRpb25zLiBTVFNjSSBpcyBvcGVyYXRlZCBmb3IgTkFTQSBieSB0aGUgQXNzb2NpYXRpb24gb2YgVW5pdmVyc2l0aWVzIGZvciBSZXNlYXJjaCBpbiBBc3Ryb25vbXkgaW4gV2FzaGluZ3RvbiwgRC5DLiAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTU2OS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTU2OX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1NjkvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFZpZXdzIGEgRHdhcmYgR2FsYXh5Iiwic3BhY2UiLCJuYXNhIiwiZ2FsYXh5IiwiaHViYmxlIiwiaHN0IiwibmdjNTQ3NyJdLCJ0aXRsZSI6Ikh1YmJsZSBWaWV3cyBhIER3YXJmIEdhbGF4eSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTU2OSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGUgY29uc3RlbGxhdGlvbiBvZiBVcnNhIE1ham9yIChUaGUgR3JlYXQgQmVhcikgaXMgaG9tZSB0byBNZXNzaWVyIDEwMSwgdGhlIFBpbndoZWVsIEdhbGF4eS4gTWVzc2llciAxMDEgaXMgb25lIG9mIHRoZSBiaWdnZXN0IGFuZCBicmlnaHRlc3Qgc3BpcmFsIGdhbGF4aWVzIGluIHRoZSBuaWdodCBza3kuIExpa2UgdGhlIE1pbGt5IFdheSwgTWVzc2llciAxMDEgaXMgbm90IGFsb25lLCB3aXRoIHNtYWxsZXIgZHdhcmYgZ2FsYXhpZXMgaW4gaXRzIG5laWdoYm9yaG9vZC4gIE5HQyA1NDc3LCBvbmUgb2YgdGhlc2UgZHdhcmYgZ2FsYXhpZXMgaW4gdGhlIE1lc3NpZXIgMTAxIGdyb3VwLCBpcyB0aGUgc3ViamVjdCBvZiB0aGlzIGltYWdlIGZyb20gdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUuIFdpdGhvdXQgb2J2aW91cyBzdHJ1Y3R1cmUsIGJ1dCB3aXRoIHZpc2libGUgc2lnbnMgb2Ygb25nb2luZyBzdGFyIGJpcnRoLCBOR0MgNTQ3NyBsb29rcyBtdWNoIGxpa2UgYW4gdHlwaWNhbCBkd2FyZiBpcnJlZ3VsYXIgZ2FsYXh5LiBUaGUgYnJpZ2h0IG5lYnVsYWUgdGhhdCBleHRlbmQgYWNyb3NzIG11Y2ggb2YgdGhlIGdhbGF4eSBhcmUgY2xvdWRzIG9mIGdsb3dpbmcgaHlkcm9nZW4gZ2FzIGluIHdoaWNoIG5ldyBzdGFycyBhcmUgZm9ybWluZy4gVGhlc2UgZ2xvdyBwaW5raXNoIHJlZCBpbiByZWFsIGxpZmUsIGFsdGhvdWdoIHRoZSBzZWxlY3Rpb24gb2YgZ3JlZW4gYW5kIGluZnJhcmVkIGZpbHRlcnMgdGhyb3VnaCB3aGljaCB0aGlzIGltYWdlIHdhcyB0YWtlbiBtYWtlcyB0aGVtIGFwcGVhciBhbG1vc3Qgd2hpdGUuICBUaGUgb2JzZXJ2YXRpb25zIHdlcmUgdGFrZW4gYXMgcGFydCBvZiBhIHByb2plY3QgdG8gbWVhc3VyZSBhY2N1cmF0ZSBkaXN0YW5jZXMgdG8gYSByYW5nZSBvZiBnYWxheGllcyB3aXRoaW4gYWJvdXQgMzAgbWlsbGlvbiBsaWdodC15ZWFycyBmcm9tIEVhcnRoLCBieSBzdHVkeWluZyB0aGUgYnJpZ2h0bmVzcyBvZiByZWQgZ2lhbnQgc3RhcnMuICBJbiBhZGRpdGlvbiB0byBOR0MgNTQ3NywgdGhlIGltYWdlIGluY2x1ZGVzIG51bWVyb3VzIGdhbGF4aWVzIGluIHRoZSBiYWNrZ3JvdW5kLCBpbmNsdWRpbmcgc29tZSB0aGF0IGFyZSB2aXNpYmxlIHJpZ2h0IHRocm91Z2ggTkdDIDU0NzcuIFRoaXMgc2VydmVzIGFzIGEgcmVtaW5kZXIgdGhhdCBnYWxheGllcywgZmFyIGZyb20gYmVpbmcgc29saWQsIG9wYXF1ZSBvYmplY3RzLCBhcmUgYWN0dWFsbHkgbGFyZ2VseSBtYWRlIHVwIG9mIHRoZSBlbXB0eSBzcGFjZSBiZXR3ZWVuIHRoZWlyIHN0YXJzLiAgVGhpcyBpbWFnZSBpcyBhIGNvbWJpbmF0aW9uIG9mIGV4cG9zdXJlcyB0YWtlbiB0aHJvdWdoIGdyZWVuIGFuZCBpbmZyYXJlZCBmaWx0ZXJzIHVzaW5nIEh1YmJsZSdzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cy4gVGhlIGZpZWxkIG9mIHZpZXcgaXMgYXBwcm94aW1hdGVseSAzLjMgYnkgMy4zIGFyY21pbnV0ZXMuICAgICBFU0EvSHViYmxlICZhbXA7IE5BU0EgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzIyL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzIyfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDcyMi9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUgQ2F0Y2hlcyBTdGVsbGFyIEV4b2R1cyBpbiBBY3Rpb24iXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzIyIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wNS0xNFQxNzoxNzoyMVoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBDYXRjaGVzIFN0ZWxsYXIgRXhvZHVzIGluIEFjdGlvbiIsImRlc2NyaXB0aW9uIjoiVXNpbmcgTkFTQeKAmXMgSHViYmxlIFNwYWNlIFRlbGVzY29wZSwgYXN0cm9ub21lcnMgaGF2ZSBjYXB0dXJlZCBmb3IgdGhlIGZpcnN0IHRpbWUgc25hcHNob3RzIG9mIGZsZWRnaW5nIHdoaXRlIGR3YXJmIHN0YXJzIGJlZ2lubmluZyB0aGVpciBzbG93LXBhY2VkLCA0MC1taWxsaW9uLXllYXIgbWlncmF0aW9uIGZyb20gdGhlIGNyb3dkZWQgY2VudGVyIG9mIGFuIGFuY2llbnQgc3RhciBjbHVzdGVyIHRvIHRoZSBsZXNzIHBvcHVsYXRlZCBzdWJ1cmJzLiAgV2hpdGUgZHdhcmZzIGFyZSB0aGUgYnVybmVkLW91dCByZWxpY3Mgb2Ygc3RhcnMgdGhhdCByYXBpZGx5IGxvc2UgbWFzcywgY29vbCBkb3duIGFuZCBzaHV0IG9mZiB0aGVpciBudWNsZWFyIGZ1cm5hY2VzLiBBcyB0aGVzZSBnbG93aW5nIGNhcmNhc3NlcyBhZ2UgYW5kIHNoZWQgd2VpZ2h0LCB0aGVpciBvcmJpdHMgYmVnaW4gdG8gZXhwYW5kIG91dHdhcmQgZnJvbSB0aGUgc3RhciBjbHVzdGVy4oCZcyBwYWNrZWQgZG93bnRvd24uIFRoaXMgbWlncmF0aW9uIGlzIGNhdXNlZCBieSBhIGdyYXZpdGF0aW9uYWwgdHVzc2xlIGFtb25nIHN0YXJzIGluc2lkZSB0aGUgY2x1c3Rlci4gR2xvYnVsYXIgc3RhciBjbHVzdGVycyBzb3J0IG91dCBzdGFycyBhY2NvcmRpbmcgdG8gdGhlaXIgbWFzcywgZ292ZXJuZWQgYnkgYSBncmF2aXRhdGlvbmFsIGJpbGxpYXJkIGJhbGwgZ2FtZSB3aGVyZSBsb3dlciBtYXNzIHN0YXJzIHJvYiBtb21lbnR1bSBmcm9tIG1vcmUgbWFzc2l2ZSBzdGFycy4gVGhlIHJlc3VsdCBpcyB0aGF0IGhlYXZpZXIgc3RhcnMgc2xvdyBkb3duIGFuZCBzaW5rIHRvIHRoZSBjbHVzdGVyJ3MgY29yZSwgd2hpbGUgbGlnaHRlciBzdGFycyBwaWNrIHVwIHNwZWVkIGFuZCBtb3ZlIGFjcm9zcyB0aGUgY2x1c3RlciB0byB0aGUgZWRnZS4gVGhpcyBwcm9jZXNzIGlzIGtub3duIGFzICZxdW90O21hc3Mgc2VncmVnYXRpb24uJnF1b3Q7IFVudGlsIHRoZXNlIEh1YmJsZSBvYnNlcnZhdGlvbnMsIGFzdHJvbm9tZXJzIGhhZCBuZXZlciBkZWZpbml0aXZlbHkgc2VlbiB0aGUgZHluYW1pY2FsIGNvbnZleW9yIGJlbHQgaW4gYWN0aW9uLiAgQXN0cm9ub21lcnMgdXNlZCBIdWJibGUgdG8gd2F0Y2ggdGhlIHdoaXRlLWR3YXJmIGV4b2R1cyBpbiB0aGUgZ2xvYnVsYXIgc3RhciBjbHVzdGVyIDQ3IFR1Y2FuYWUsIGEgZGVuc2Ugc3dhcm0gb2YgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIHN0YXJzIGluIG91ciBNaWxreSBXYXkgZ2FsYXh5LiBUaGUgY2x1c3RlciByZXNpZGVzIDE2LDcwMCBsaWdodC15ZWFycyBhd2F5IGluIHRoZSBzb3V0aGVybiBjb25zdGVsbGF0aW9uIFR1Y2FuYS4gIFJlYWQgbW9yZTogPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvZmVhdHVyZS9nb2RkYXJkL2h1YmJsZS1jYXRjaGVzLXN0ZWxsYXItZXhvZHVzLWluLWFjdGlvblwiIHJlbD1cIm5vZm9sbG93XCI+d3d3Lm5hc2EuZ292L2ZlYXR1cmUvZ29kZGFyZC9odWJibGUtY2F0Y2hlcy1zdGVsbGFyLWV4b2R1Li4uPC9hPiAgQ3JlZGl0czogTkFTQSwgRVNBLCBhbmQgSC4gUmljaGVyIGFuZCBKLiBIZXlsIChVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsIFZhbmNvdXZlciwgQ2FuYWRhKTsgYWNrbm93bGVkZ2VtZW50OiBKLiBNYWNrIChTVFNjSSkgYW5kIEcuIFBpb3R0byAoVW5pdmVyc2l0eSBvZiBQYWRvdmEsIEl0YWx5KSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1NzgvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1Nzh+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTc4L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkEgQ29zbWljIEhvbGlkYXkgT3JuYW1lbnQsIEh1YmJsZS1TdHlsZSIsIm5hc2EiLCJodWJibGUiLCJoc3QiXSwidGl0bGUiOiJBIENvc21pYyBIb2xpZGF5IE9ybmFtZW50LCBIdWJibGUtU3R5bGUiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1NzgiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiJ1RpcyB0aGUgc2Vhc29uIGZvciBob2xpZGF5IGRlY29yYXRpbmcgYW5kIHRyZWUtdHJpbW1pbmcuIE5vdCB0byBiZSBsZWZ0IG91dCwgYXN0cm9ub21lcnMgdXNpbmcgTkFTQSdzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGF2ZSBwaG90b2dyYXBoZWQgYSBmZXN0aXZlLWxvb2tpbmcgbmVhcmJ5IHBsYW5ldGFyeSBuZWJ1bGEgY2FsbGVkIE5HQyA1MTg5LiBUaGUgaW50cmljYXRlIHN0cnVjdHVyZSBvZiB0aGlzIGJyaWdodCBnYXNlb3VzIG5lYnVsYSByZXNlbWJsZXMgYSBnbGFzcy1ibG93biBob2xpZGF5IG9ybmFtZW50IHdpdGggYSBnbG93aW5nIHJpYmJvbiBlbnR3aW5lZC4gIFBsYW5ldGFyeSBuZWJ1bGFlIHJlcHJlc2VudCB0aGUgZmluYWwgYnJpZWYgc3RhZ2UgaW4gdGhlIGxpZmUgb2YgYSBtZWRpdW0tc2l6ZWQgc3RhciBsaWtlIG91ciBzdW4uIFdoaWxlIGNvbnN1bWluZyB0aGUgbGFzdCBvZiB0aGUgZnVlbCBpbiBpdHMgY29yZSwgdGhlIGR5aW5nIHN0YXIgZXhwZWxzIGEgbGFyZ2UgcG9ydGlvbiBvZiBpdHMgb3V0ZXIgZW52ZWxvcGUuIFRoaXMgbWF0ZXJpYWwgdGhlbiBiZWNvbWVzIGhlYXRlZCBieSB0aGUgcmFkaWF0aW9uIGZyb20gdGhlIHN0ZWxsYXIgcmVtbmFudCBhbmQgcmFkaWF0ZXMsIHByb2R1Y2luZyBnbG93aW5nIGNsb3VkcyBvZiBnYXMgdGhhdCBjYW4gc2hvdyBjb21wbGV4IHN0cnVjdHVyZXMsIGFzIHRoZSBlamVjdGlvbiBvZiBtYXNzIGZyb20gdGhlIHN0YXIgaXMgdW5ldmVuIGluIGJvdGggdGltZSBhbmQgZGlyZWN0aW9uLiBUbyByZWFkIG1vcmUgZ28gdG86IDxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L21pc3Npb25fcGFnZXMvaHViYmxlL3NjaWVuY2UvbmdjNTE4OS5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvc2NpZW5jZS9uZ2M1MTg5Lmh0bWw8L2E+ICBDcmVkaXQ6IE5BU0EsIEVTQSwgYW5kIEcuIEJhY29uIChTVFNjSSkgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjgyL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjgyfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI4Mi9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgRnJpZGF5IC0gSGVhdnkgTWV0YWwgU3RhcnMiLCJtZXRhbCIsInN0YXIiLCJjbHVzdGVyIiwiaHViYmxlIiwibmdjNjQ5NiJdLCJ0aXRsZSI6Ikh1YmJsZSBGcmlkYXkgLSBIZWF2eSBNZXRhbCBTdGFycyIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI4MiIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJIdWJibGUgcm9ja3Mgb3V0IHdpdGggaGVhdnkgbWV0YWwgc3RhcnMhICBUaGlzIDEwLjUtYmlsbGlvbi15ZWFyLW9sZCBnbG9idWxhciBjbHVzdGVyLCBOR0MgNjQ5NiwgaXMgaG9tZSB0byBoZWF2eS1tZXRhbCBzdGFycyBvZiBhIGNlbGVzdGlhbCBraW5kISBUaGUgc3RhcnMgY29tcHJpc2luZyB0aGlzIHNwZWN0YWN1bGFyIHNwaGVyaWNhbCBjbHVzdGVyIGFyZSBlbnJpY2hlZCB3aXRoIG11Y2ggaGlnaGVyIHByb3BvcnRpb25zIG9mIG1ldGFscyDigJQgZWxlbWVudHMgaGVhdmllciB0aGFuIGh5ZHJvZ2VuIGFuZCBoZWxpdW0gYXJlIGN1cmlvdXNseSBrbm93biBhcyBtZXRhbHMgaW4gYXN0cm9ub215IOKAlCB0aGFuIHN0YXJzIGZvdW5kIGluIHNpbWlsYXIgY2x1c3RlcnMuICBBIGhhbmRmdWwgb2YgdGhlc2UgaGlnaC1tZXRhbGxpY2l0eSBzdGFycyBhcmUgYWxzbyB2YXJpYWJsZSBzdGFycywgbWVhbmluZyB0aGF0IHRoZWlyIGJyaWdodG5lc3MgZmx1Y3R1YXRlcyBvdmVyIHRpbWUuIE5HQyA2NDk2IGhvc3RzIGEgc2VsZWN0aW9uIG9mIGxvbmctcGVyaW9kIHZhcmlhYmxlcyDigJQgZ2lhbnQgcHVsc2F0aW5nIHN0YXJzIHdob3NlIGJyaWdodG5lc3MgY2FuIHRha2UgdXAgdG8sIGFuZCBldmVuIG92ZXIsIGEgdGhvdXNhbmQgZGF5cyB0byBjaGFuZ2Ug4oCUIGFuZCBzaG9ydC1wZXJpb2QgZWNsaXBzaW5nIGJpbmFyaWVzLCB3aGljaCBkaW0gd2hlbiBlY2xpcHNlZCBieSBhIHN0ZWxsYXIgY29tcGFuaW9uLiAgVGhlIG5hdHVyZSBvZiB0aGUgdmFyaWFiaWxpdHkgb2YgdGhlc2Ugc3RhcnMgY2FuIHJldmVhbCBpbXBvcnRhbnQgaW5mb3JtYXRpb24gYWJvdXQgdGhlaXIgbWFzcywgcmFkaXVzLCBsdW1pbm9zaXR5LCB0ZW1wZXJhdHVyZSwgY29tcG9zaXRpb24sIGFuZCBldm9sdXRpb24sIHByb3ZpZGluZyBhc3Ryb25vbWVycyB3aXRoIG1lYXN1cmVtZW50cyB0aGF0IHdvdWxkIGJlIGRpZmZpY3VsdCBvciBldmVuIGltcG9zc2libGUgdG8gb2J0YWluIHRocm91Z2ggb3RoZXIgbWV0aG9kcy4gIE5HQyA2NDk2IHdhcyBkaXNjb3ZlcmVkIGluIDE4MjYgYnkgU2NvdHRpc2ggYXN0cm9ub21lciBKYW1lcyBEdW5sb3AuIFRoZSBjbHVzdGVyIHJlc2lkZXMgYXQgYWJvdXQgMzUsMDAwIGxpZ2h0LXllYXJzIGF3YXkgaW4gdGhlIHNvdXRoZXJuIGNvbnN0ZWxsYXRpb24gb2YgU2NvcnBpdXMgKFRoZSBTY29ycGlvbikuICBJbWFnZSBjcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSwgQWNrbm93bGVkZ2VtZW50OiBKdWR5IFNjaG1pZHQgVGV4dCBjcmVkaXQ6IEV1cm9wZWFuIFNwYWNlIEFnZW5jeSAgUmVhZCBtb3JlOiA8YSBocmVmPVwiaHR0cDovL2dvLm5hc2EuZ292LzFVMndxR1dcIiByZWw9XCJub2ZvbGxvd1wiPmdvLm5hc2EuZ292LzFVMndxR1c8L2E+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTUwNzIzXzIwMTUtMTMzNTJfMDE1L0dTRkNfMjAxNTA3MjNfMjAxNS0xMzM1Ml8wMTV+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNTA3MjNfMjAxNS0xMzM1Ml8wMTUvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiUHJlc3RvbiBCdXJjaCBhdCB0aGUgSHViYmxlIDI1dGggQW5uaXZlcnNhcnkgZXZlbnQgZm9yIGVtcGxveWVlcyJdLCJkZXNjcmlwdGlvbiI6IlByZXN0b24gQnVyY2ggYXQgdGhlIEh1YmJsZSAyNXRoIEFubml2ZXJzYXJ5IGV2ZW50IGZvciBlbXBsb3llZXMgYXQgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyICAgIiwibmFzYV9pZCI6IkdTRkNfMjAxNTA3MjNfMjAxNS0xMzM1Ml8wMTUiLCJkYXRlX2NyZWF0ZWQiOiIyMDE1LTA3LTIzVDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiUHJlc3RvbiBCdXJjaCBhdCB0aGUgSHViYmxlIDI1dGggQW5uaXZlcnNhcnkgZXZlbnQgZm9yIGVtcGxveWVlcyIsImNlbnRlciI6IkdTRkMiLCJwaG90b2dyYXBoZXIiOiJOQVNBL0dTRkMvQmlsbCBIcnlieWsifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3MzMvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3MzN+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzMzL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBFeWVzIEdhbGFjdGljIFJlZnVyYmlzaG1lbnQiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzMzIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wNC0zMFQxNTo1ODo1N1oiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBFeWVzIEdhbGFjdGljIFJlZnVyYmlzaG1lbnQiLCJkZXNjcmlwdGlvbiI6IlRoZSBzbXVkZ2Ugb2Ygc3RhcnMgYXQgdGhlIGNlbnRlciBvZiB0aGlzIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaW1hZ2UgaXMgYSBnYWxheHkga25vd24gYXMgVUdDIDU3OTcuIFVHQyA1Nzk3IGlzIGFuIGVtaXNzaW9uIGxpbmUgZ2FsYXh5LCBtZWFuaW5nIHRoYXQgaXQgaXMgY3VycmVudGx5IHVuZGVyZ29pbmcgYWN0aXZlIHN0YXIgZm9ybWF0aW9uLiBUaGUgcmVzdWx0IGlzIGEgc3RlbGxhciBwb3B1bGF0aW9uIHRoYXQgaXMgY29uc3RhbnRseSBiZWluZyByZWZ1cmJpc2hlZCBhcyBtYXNzaXZlIGJyaWdodCBibHVlIHN0YXJzIGZvcm0uIEdhbGF4aWVzIHdpdGggcHJvbGlmaWMgc3RhciBmb3JtYXRpb24gYXJlIG5vdCBvbmx5IHZlaWxlZCBpbiBhIGJsdWUgdGludCwgYnV0IGFyZSBrZXkgdG8gdGhlIGNvbnRpbnVhdGlvbiBvZiBhIHN0ZWxsYXIgY3ljbGUuICBJbiB0aGlzIGltYWdlIFVHQyA1Nzk3IGFwcGVhcnMgaW4gZnJvbnQgb2YgYSBiYWNrZ3JvdW5kIG9mIHNwaXJhbCBnYWxheGllcy4gU3BpcmFsIGdhbGF4aWVzIGhhdmUgY29waW91cyBhbW91bnRzIG9mIGR1c3QgYW5kIGdhcyDigJQgdGhlIG1haW4gaW5ncmVkaWVudCBmb3Igc3RhcnMg4oCUIGFuZCB0aGVyZWZvcmUgb2Z0ZW4gYWxzbyBiZWxvbmcgdG8gdGhlIGNsYXNzIG9mIGVtaXNzaW9uIGxpbmUgZ2FsYXhpZXMuICBTcGlyYWwgZ2FsYXhpZXMgaGF2ZSBkaXNrLWxpa2Ugc2hhcGVzIHRoYXQgZHJhc3RpY2FsbHkgdmFyeSBpbiBhcHBlYXJhbmNlIGRlcGVuZGluZyBvbiB0aGUgYW5nbGUgYXQgd2hpY2ggdGhleSBhcmUgb2JzZXJ2ZWQuIFRoZSBjb2xsZWN0aW9uIG9mIHNwaXJhbCBnYWxheGllcyBpbiB0aGlzIGZyYW1lIGV4aGliaXRzIHRoaXMgYXR0cmlidXRlIGFjdXRlbHk6IFNvbWUgYXJlIHZpZXdlZCBmYWNlLW9uLCByZXZlYWxpbmcgdGhlIHN0cnVjdHVyZSBvZiB0aGUgc3BpcmFsIGFybXMsIHdoaWxlIHRoZSB0d28gaW4gdGhlIGJvdHRvbSBsZWZ0IGFyZSBzZWVuIGVkZ2Utb24sIGFwcGVhcmluZyBhcyBwbGFpbiBzdHJlYWtzIGluIHRoZSBza3kuIFRoZXJlIGFyZSBtYW55IHNwaXJhbCBnYWxheGllcywgd2l0aCB2YXJ5aW5nIGNvbG9ycyBhbmQgYXQgZGlmZmVyZW50IGFuZ2xlcywgc3ByaW5rbGVkIGFjcm9zcyB0aGlzIGltYWdlIOKAlCBqdXN0IHRha2UgYSBsb29rLiAgIENyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBLCBBY2tub3dsZWRnZW1lbnQ6IEx1Y2EgTGltYXRvbGEgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMjIvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMjJ+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDIyL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZeKAmXMgSGlkZGVuIEdhbGF4eSIsImljMzQyIl0sInRpdGxlIjoiSHViYmxl4oCZcyBIaWRkZW4gR2FsYXh5IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDIyIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IklDIDM0MiBpcyBhIGNoYWxsZW5naW5nIGNvc21pYyB0YXJnZXQuIEFsdGhvdWdoIGl0IGlzIGJyaWdodCwgdGhlIGdhbGF4eSBzaXRzIG5lYXIgdGhlIGVxdWF0b3Igb2YgdGhlIE1pbGt5IFdheeKAmXMgZ2FsYWN0aWMgZGlzaywgd2hlcmUgdGhlIHNreSBpcyB0aGljayB3aXRoIGdsb3dpbmcgY29zbWljIGdhcywgYnJpZ2h0IHN0YXJzLCBhbmQgZGFyaywgb2JzY3VyaW5nIGR1c3QuIEluIG9yZGVyIGZvciBhc3Ryb25vbWVycyB0byBzZWUgdGhlIGludHJpY2F0ZSBzcGlyYWwgc3RydWN0dXJlIG9mIElDIDM0MiwgdGhleSBtdXN0IGdhemUgdGhyb3VnaCBhIGxhcmdlIGFtb3VudCBvZiBtYXRlcmlhbCBjb250YWluZWQgd2l0aGluIG91ciBvd24gZ2FsYXh5IOKAlCBubyBlYXN5IGZlYXQhIEFzIGEgcmVzdWx0IElDIDM0MiBpcyByZWxhdGl2ZWx5IGRpZmZpY3VsdCB0byBzcG90IGFuZCBpbWFnZSwgZ2l2aW5nIHJpc2UgdG8gaXRzIGludHJpZ3Vpbmcgbmlja25hbWU6IHRoZSDigJxIaWRkZW4gR2FsYXh5LuKAnSAgTG9jYXRlZCB2ZXJ5IGNsb3NlIChpbiBhc3Ryb25vbWljYWwgdGVybXMpIHRvIHRoZSBNaWxreSBXYXksIHRoaXMgc3dlZXBpbmcgc3BpcmFsIGdhbGF4eSB3b3VsZCBiZSBhbW9uZyB0aGUgYnJpZ2h0ZXN0IGluIHRoZSBza3kgd2VyZSBpdCBub3QgZm9yIGl0cyBkdXN0LW9ic2N1cmVkIGxvY2F0aW9uLiBUaGUgZ2FsYXh5IGlzIHZlcnkgYWN0aXZlLCBhcyBpbmRpY2F0ZWQgYnkgdGhlIHJhbmdlIG9mIGNvbG9ycyB2aXNpYmxlIGluIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSwgZGVwaWN0aW5nIHRoZSB2ZXJ5IGNlbnRyYWwgcmVnaW9uIG9mIHRoZSBnYWxheHkuIEEgYmVhdXRpZnVsIG1peHR1cmUgb2YgaG90LCBibHVlIHN0YXItZm9ybWluZyByZWdpb25zLCByZWRkZXIsIGNvb2xlciByZWdpb25zIG9mIGdhcywgYW5kIGRhcmsgbGFuZXMgb2Ygb3BhcXVlIGR1c3QgY2FuIGJlIHNlZW4sIGFsbCBzd2lybGluZyB0b2dldGhlciBhcm91bmQgYSBicmlnaHQgY29yZS4gSW4gMjAwMywgYXN0cm9ub21lcnMgY29uZmlybWVkIHRoaXMgY29yZSB0byBiZSBhIHNwZWNpZmljIHR5cGUgb2YgY2VudHJhbCByZWdpb24ga25vd24gYXMgYW4gSElJIG51Y2xldXMg4oCUIGEgbmFtZSB0aGF0IGluZGljYXRlcyB0aGUgcHJlc2VuY2Ugb2YgaW9uaXplZCBoeWRyb2dlbiDigJQgdGhhdCBpcyBsaWtlbHkgdG8gYmUgY3JlYXRpbmcgbWFueSBob3QgbmV3IHN0YXJzLiAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gICAgICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMjUvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMjV+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDI1L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBFeWVzIGEgUG93ZXJmdWwgR2FsYXh5Il0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAyNSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMDYtMzBUMTc6MDM6MzRaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgRXllcyBhIFBvd2VyZnVsIEdhbGF4eSIsImRlc2NyaXB0aW9uIjoiTm90IGFsbCBnYWxheGllcyBoYXZlIHRoZSBsdXh1cnkgb2YgcG9zc2Vzc2luZyBhIHNpbXBsZSBtb25pa2VyIG9yIHF1aXJreSBuaWNrbmFtZS4gICBUaGlzIGltcHJlc3NpdmUgZ2FsYXh5IGltYWdlZCBieSB0aGUgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpcyBvbmUgb2YgdGhlIHVubHVja3kgb25lcywgYW5kIGdvZXMgYnkgYSBuYW1lIHRoYXQgbG9va3MgbW9yZSBsaWtlIGEgcGFzc3dvcmQgZm9yIGEgY29tcHV0ZXI6ICAyWE1NIEoxNDM0NTAuNSswMzM4NDMuICBTdWNoIGEgbmFtZSBtYXkgc2VlbSBsaWtlIGEgcmFuZG9tIGp1bWJsZSBvZiBudW1iZXJzIGFuZCBsZXR0ZXJzLCBidXQgbGlrZSBhbGwgZ2FsYWN0aWMgZXBpdGhldHMgaXQgaGFzIGEgZGlzdGluY3QgbWVhbmluZy4gVGhpcyBnYWxheHksIGZvciBleGFtcGxlLCB3YXMgZGV0ZWN0ZWQgYW5kIG9ic2VydmVkIGFzIHBhcnQgb2YgdGhlIHNlY29uZCBYLXJheSBza3kgc3VydmV5IHBlcmZvcm1lZCBieSBFU0HigJlzIFhNTS1OZXd0b24gT2JzZXJ2YXRvcnkuIEl0cyBjZWxlc3RpYWwgY29vcmRpbmF0ZXMgZm9ybSB0aGUgcmVzdCBvZiB0aGUgYnVsa3kgbmFtZSwgZm9sbG93aW5nIHRoZSDigJxK4oCdOiBhIHJpZ2h0IGFzY2Vuc2lvbiB2YWx1ZSBvZiAxNGggKGhvdXJzKSAzNG0gKG1pbnV0ZXMpIDUwLjVzIChzZWNvbmRzKS4gVGhpcyBjYW4gYmUgbGlrZW5lZCB0byB0ZXJyZXN0cmlhbCBsb25naXR1ZGUuIEl0IGFsc28gaGFzIGEgZGVjbGluYXRpb24gb2YgKzAzZCAoZGVncmVlcykgMzhtIChtaW51dGVzKSA0M3MgKHNlY29uZHMpLiBEZWNsaW5hdGlvbiBjYW4gYmUgbGlrZW5lZCB0byB0ZXJyZXN0cmlhbCBsYXRpdHVkZS4gVGhlIG90aGVyIGZ1enp5IG9iamVjdCBpbiB0aGUgZnJhbWUgd2FzIG5hbWVkIGluIHRoZSBzYW1lIHdheSDigJQgaXQgaXMgYSBicmlnaHQgZ2FsYXh5IG5hbWVkIDJYTU0gSjE0MzQ0OC4zKzAzMzc0OS4gIDJYTU0gSjE0MzQ1MC41KzAzMzg0MyBsaWVzIG5lYXJseSA0MDAgbWlsbGlvbiBsaWdodC15ZWFycyBhd2F5IGZyb20gRWFydGguIEl0IGlzIGEgU2V5ZmVydCBnYWxheHkgdGhhdCBpcyBkb21pbmF0ZWQgYnkgc29tZXRoaW5nIGtub3duIGFzIGFuIEFjdGl2ZSBHYWxhY3RpYyBOdWNsZXVzIOKAlCBpdHMgY29yZSBpcyB0aG91Z2h0IHRvIGNvbnRhaW4gYSBzdXBlcm1hc3NpdmUgYmxhY2sgaG9sZSB0aGF0IGlzIGVtaXR0aW5nIGh1Z2UgYW1vdW50cyBvZiByYWRpYXRpb24sIHBvdXJpbmcgZW5lcmdldGljIFgtcmF5cyBvdXQgaW50byB0aGUgVW5pdmVyc2UuICBQaG90byBjcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2ODcvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2ODd+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjg3L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBwZWVrcyBhdCBhIHNwaXJhbCBnYWxheHkiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjg3IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wNy0xMFQxODoyNjowMVoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBwZWVrcyBhdCBhIHNwaXJhbCBnYWxheHkiLCJkZXNjcmlwdGlvbiI6IlRoaXMgbGl0dGxlLWtub3duIGdhbGF4eSwgb2ZmaWNpYWxseSBuYW1lZCBKMDQ1NDI4MjktNjYyNTI4MCwgYnV0IG1vc3Qgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgTEVEQSA4OTk5NiwgaXMgYSBjbGFzc2ljIGV4YW1wbGUgb2YgYSBzcGlyYWwgZ2FsYXh5LiBUaGUgZ2FsYXh5IGlzIG11Y2ggbGlrZSBvdXIgb3duIGdhbGF4eSwgdGhlIE1pbGt5IFdheS4gVGhlIGRpc2stc2hhcGVkIGdhbGF4eSBpcyBzZWVuIGZhY2Ugb24sIHJldmVhbGluZyB0aGUgd2luZGluZyBzdHJ1Y3R1cmUgb2YgdGhlIHNwaXJhbCBhcm1zLiBEYXJrIHBhdGNoZXMgaW4gdGhlc2Ugc3BpcmFsIGFybXMgYXJlIGluIGZhY3QgZHVzdCBhbmQgZ2FzIOKAlCB0aGUgcmF3IG1hdGVyaWFscyBmb3IgbmV3IHN0YXJzLiBUaGUgbWFueSB5b3VuZyBzdGFycyB0aGF0IGZvcm0gaW4gdGhlc2UgcmVnaW9ucyBtYWtlIHRoZSBzcGlyYWwgYXJtcyBhcHBlYXIgYnJpZ2h0IGFuZCBibHVpc2guICBUaGUgZ2FsYXh5IHNpdHMgaW4gYSB2aWJyYW50IGFyZWEgb2YgdGhlIG5pZ2h0IHNreSB3aXRoaW4gdGhlIGNvbnN0ZWxsYXRpb24gb2YgRG9yYWRvIChUaGUgU3dvcmRmaXNoKSwgYW5kIGFwcGVhcnMgdmVyeSBjbG9zZSB0byB0aGUgTGFyZ2UgTWFnZWxsYW5pYyBDbG91ZCAg4oCUIG9uZSBvZiB0aGUgc2F0ZWxsaXRlIGdhbGF4aWVzIG9mIHRoZSBNaWxreSBXYXkuICBUaGUgb2JzZXJ2YXRpb25zIHdlcmUgY2FycmllZCBvdXQgd2l0aCB0aGUgaGlnaCByZXNvbHV0aW9uIGNoYW5uZWwgb2YgSHViYmxl4oCZcyBBZHZhbmNlZCBDYW1lcmEgZm9yIFN1cnZleXMuICAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EsIEFja25vd2xlZGdlbWVudDogRmxpY2tyIHVzZXIgQy4gQ2xhdWRlICA8Yj48YSBocmVmPVwiaHR0cDovL2dvLm5hc2EuZ292LzFUcXVnaWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly9nby5uYXNhLmdvdi8xVHF1Z2luXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9nby5uYXNhLmdvdi8xVHF1Z2lyXCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9nby5uYXNhLmdvdi8xVHF1amRQXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vZ28ubmFzYS5nb3YvMVRxdWpkVFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzk0L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzk0fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDc5NC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUncyBMaXR0bGUgU29tYnJlcm8iXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzk0IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wMi0wNlQxNzoxMjowN1oiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSdzIExpdHRsZSBTb21icmVybyIsImRlc2NyaXB0aW9uIjoiR2FsYXhpZXMgY2FuIHRha2UgbWFueSBzaGFwZXMgYW5kIGJlIG9yaWVudGVkIGFueSB3YXkgcmVsYXRpdmUgdG8gdXMgaW4gdGhlIHNreS4gVGhpcyBjYW4gbWFrZSBpdCBoYXJkIHRvIGZpZ3VyZSBvdXQgdGhlaXIgYWN0dWFsIG1vcnBob2xvZ3ksIGFzIGEgZ2FsYXh5IGNhbiBsb29rIHZlcnkgZGlmZmVyZW50IGZyb20gZGlmZmVyZW50IHZpZXdwb2ludHMuIEEgc3BlY2lhbCBjYXNlIGlzIHdoZW4gd2UgYXJlIGx1Y2t5IGVub3VnaCB0byBvYnNlcnZlIGEgc3BpcmFsIGdhbGF4eSBkaXJlY3RseSBmcm9tIGl0cyBlZGdlLCBwcm92aWRpbmcgdXMgd2l0aCBhIHNwZWN0YWN1bGFyIHZpZXcgbGlrZSB0aGUgb25lIHNlZW4gaW4gdGhpcyBwaWN0dXJlIG9mIHRoZSB3ZWVrLiAgVGhpcyBpcyBOR0MgNzgxNCwgYWxzbyBrbm93biBhcyB0aGUg4oCcTGl0dGxlIFNvbWJyZXJvLuKAnSBJdHMgbGFyZ2VyIG5hbWVzYWtlLCB0aGUgU29tYnJlcm8gR2FsYXh5LCBpcyBhbm90aGVyIHN0dW5uaW5nIGV4YW1wbGUgb2YgYW4gZWRnZS1vbiBnYWxheHkg4oCUIGluIGZhY3QsIHRoZSDigJxMaXR0bGUgU29tYnJlcm/igJ0gaXMgYWJvdXQgdGhlIHNhbWUgc2l6ZSBhcyBpdHMgYnJpZ2h0IG5hbWVzYWtlIGF0IGFib3V0IDYwLDAwMCBsaWdodC15ZWFycyBhY3Jvc3MsIGJ1dCBhcyBpdCBsaWVzIGZhcnRoZXIgYXdheSwgYW5kIHNvIGFwcGVhcnMgc21hbGxlciBpbiB0aGUgc2t5LiAgTkdDIDc4MTQgaGFzIGEgYnJpZ2h0IGNlbnRyYWwgYnVsZ2UgYW5kIGEgYnJpZ2h0IGhhbG8gb2YgZ2xvd2luZyBnYXMgZXh0ZW5kaW5nIG91dHdhcmRzIGludG8gc3BhY2UuIFRoZSBkdXN0eSBzcGlyYWwgYXJtcyBhcHBlYXIgYXMgZGFyayBzdHJlYWtzLiBUaGV5IGNvbnNpc3Qgb2YgZHVzdHkgbWF0ZXJpYWwgdGhhdCBhYnNvcmJzIGFuZCBibG9ja3MgbGlnaHQgZnJvbSB0aGUgZ2FsYWN0aWMgY2VudGVyIGJlaGluZCBpdC4gVGhlIGZpZWxkIG9mIHZpZXcgb2YgdGhpcyBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIHdvdWxkIGJlIHZlcnkgaW1wcmVzc2l2ZSBldmVuIHdpdGhvdXQgTkdDIDc4MTQgaW4gZnJvbnQ7IG5lYXJseSBhbGwgdGhlIG9iamVjdHMgc2VlbiBpbiB0aGlzIGltYWdlIGFyZSBnYWxheGllcyBhcyB3ZWxsLiAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgQWNrbm93bGVkZ2VtZW50OiBKb3NoIEJhcnJpbmd0b24gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA0MDEvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA0MDF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDAxL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBhbmQgYSBTdGVsbGFyIEZpbmdlcnByaW50Il0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDQwMSIsImRhdGVfY3JlYXRlZCI6IjIwMTYtMDMtMDRUMTQ6MzM6MjNaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgYW5kIGEgU3RlbGxhciBGaW5nZXJwcmludCIsImRlc2NyaXB0aW9uIjoiU2hvd2Nhc2VkIGF0IHRoZSBjZW50ZXIgb2YgdGhpcyBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIGlzIGFuIGVtaXNzaW9uLWxpbmUgc3RhciBrbm93biBhcyBJUkFTIDEyMTk2LTYzMDAuICBMb2NhdGVkIGp1c3QgdW5kZXIgMiwzMDAgbGlnaHQteWVhcnMgZnJvbSBFYXJ0aCwgdGhpcyBzdGFyIGRpc3BsYXlzIHByb21pbmVudCBlbWlzc2lvbiBsaW5lcywgbWVhbmluZyB0aGF0IHRoZSBzdGFy4oCZcyBsaWdodCwgZGlzcGVyc2VkIGludG8gYSBzcGVjdHJ1bSwgc2hvd3MgdXAgYXMgYSByYWluYm93IG9mIGNvbG9ycyBtYXJrZWQgd2l0aCBhIGNoYXJhY3RlcmlzdGljIHBhdHRlcm4gb2YgZGFyayBhbmQgYnJpZ2h0IGxpbmVzLiBUaGUgY2hhcmFjdGVyaXN0aWNzIG9mIHRoZXNlIGxpbmVzLCB3aGVuIGNvbXBhcmVkIHRvIHRoZSDigJxmaW5nZXJwcmludHPigJ0gbGVmdCBieSBwYXJ0aWN1bGFyIGF0b21zIGFuZCBtb2xlY3VsZXMsIGNhbiBiZSB1c2VkIHRvIHJldmVhbCBJUkFTIDEyMTk2LTYzMDDigJlzIGNoZW1pY2FsIGNvbXBvc2l0aW9uLiAgVW5kZXIgMTAgbWlsbGlvbiB5ZWFycyBvbGQgYW5kIG5vdCB5ZXQgYnVybmluZyBoeWRyb2dlbiBhdCBpdHMgY29yZSwgdW5saWtlIHRoZSBzdW4sIHRoaXMgc3RhciBpcyBzdGlsbCBpbiBpdHMgaW5mYW5jeS4gRnVydGhlciBldmlkZW5jZSBvZiBJUkFTIDEyMTk2LTYzMDDigJlzIHlvdXRoIGlzIHByb3ZpZGVkIGJ5IHRoZSBwcmVzZW5jZSBvZiByZWZsZWN0aW9uIG5lYnVsYWUuIFRoZXNlIGhhenkgY2xvdWRzLCBwaWN0dXJlZCBmbG9hdGluZyBhYm92ZSBhbmQgYmVsb3cgSVJBUyAxMjE5Ni02MzAwLCBhcmUgY3JlYXRlZCB3aGVuIGxpZ2h0IGZyb20gYSBzdGFyIHJlZmxlY3RzIG9mZiBhIGhpZ2ggY29uY2VudHJhdGlvbiBvZiBuZWFyYnkgZHVzdCwgc3VjaCBhcyB0aGUgZHVzdHkgbWF0ZXJpYWwgc3RpbGwgcmVtYWluaW5nIGZyb20gSVJBUyAxMjE5Ni02MzAw4oCZcyBmb3JtYXRpb24uICBJbWFnZSBjcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSwgQWNrbm93bGVkZ2VtZW50OiBKdWR5IFNjaG1pZHQgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgICIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2Uvc3RzY2ktaC1wMTkwNmQtZi01MTR4NTE0LmEvc3RzY2ktaC1wMTkwNmQtZi01MTR4NTE0LmF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL3N0c2NpLWgtcDE5MDZkLWYtNTE0eDUxNC5hL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIlVyYW51cyIsIk5lcHR1bmUiXSwibG9jYXRpb24iOiJOQVNBIEdvZGRhcmQiLCJuYXNhX2lkIjoic3RzY2ktaC1wMTkwNmQtZi01MTR4NTE0LmEiLCJkYXRlX2NyZWF0ZWQiOiIyMDE5LTAyLTExVDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiVGhpcyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIFdpZGUgRmllbGQgQ2FtZXJhIDMgaW1hZ2Ugb2YgTmVwdHVuZSwgdGFrZW4gaW4gU2VwdGVtYmVyIGFuZCBOb3ZlbWJlciAyMDE4LCBzaG93cyBhIG5ldyBkYXJrIHN0b3JtICh0b3AgY2VudGVyKS4gIENyZWRpdHM6IE5BU0EsIEVTQSwgQS4gU2ltb24gKE5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyKSwgYW5kIE0uSC4gV29uZyBhbmQgQS4gSHN1IChVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEsIEJlcmtlbGV5KSIsInNlY29uZGFyeV9jcmVhdG9yIjoiU3BhY2UgVGVsZXNjb3BlIFNjaWVuY2UgSW5zdGl0dXRlIE9mZmljZSIsInRpdGxlIjoiSHViYmxlIFJldmVhbHMgRHluYW1pYyBBdG1vc3BoZXJlcyBvZiBVcmFudXMsIE5lcHR1bmUiLCJjZW50ZXIiOiJHU0ZDIiwicGhvdG9ncmFwaGVyIjoiTkFTQSBIdWJibGUifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2Uvc3RzY2ktaC1wMTkwNmMtZi01MTR4NTE0LmEvc3RzY2ktaC1wMTkwNmMtZi01MTR4NTE0LmF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL3N0c2NpLWgtcDE5MDZjLWYtNTE0eDUxNC5hL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIlVyYW51cyIsIk5lcHR1bmUiXSwibG9jYXRpb24iOiJOQVNBIEdvZGRhcmQiLCJuYXNhX2lkIjoic3RzY2ktaC1wMTkwNmMtZi01MTR4NTE0LmEiLCJkYXRlX2NyZWF0ZWQiOiIyMDE5LTAyLTExVDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiVGhpcyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIFdpZGUgRmllbGQgQ2FtZXJhIDMgaW1hZ2Ugb2YgVXJhbnVzLCB0YWtlbiBpbiBOb3ZlbWJlciAyMDE4LCByZXZlYWxzIGEgdmFzdCwgYnJpZ2h0IHN0b3JteSBjbG91ZCBjYXAgYWNyb3NzIHRoZSBwbGFuZXQncyBub3J0aCBwb2xlLiAgQ3JlZGl0czogTkFTQSwgRVNBLCBBLiBTaW1vbiAoTkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXIpLCBhbmQgTS5ILiBXb25nIGFuZCBBLiBIc3UgKFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSwgQmVya2VsZXkpIiwidGl0bGUiOiJIdWJibGUgUmV2ZWFscyBEeW5hbWljIEF0bW9zcGhlcmVzIG9mIFVyYW51cywgTmVwdHVuZSIsImNlbnRlciI6IkdTRkMiLCJwaG90b2dyYXBoZXIiOiJOQVNBIEh1YmJsZSJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDYwNy9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDYwN350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2MDcvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFpvb21zIGluIG9uIFNocmFwbmVsIGZyb20gYW4gRXhwbG9kZWQgU3RhciIsIm5hc2EiLCJuZWJ1bGEiLCJodWJibGUiLCJuYXNhZ29kZGFyZCJdLCJkZXNjcmlwdGlvbiI6Ik5BU0HigJlzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGFzIHVudmVpbGVkIGluIHN0dW5uaW5nIGRldGFpbCBhIHNtYWxsIHNlY3Rpb24gb2YgdGhlIGV4cGFuZGluZyByZW1haW5zIG9mIGEgbWFzc2l2ZSBzdGFyIHRoYXQgZXhwbG9kZWQgYWJvdXQgOCwwMDAgeWVhcnMgYWdvLiAgQ2FsbGVkIHRoZSBWZWlsIE5lYnVsYSwgdGhlIGRlYnJpcyBpcyBvbmUgb2YgdGhlIGJlc3Qta25vd24gc3VwZXJub3ZhIHJlbW5hbnRzLCBkZXJpdmluZyBpdHMgbmFtZSBmcm9tIGl0cyBkZWxpY2F0ZSwgZHJhcGVkIGZpbGFtZW50YXJ5IHN0cnVjdHVyZXMuIFRoZSBlbnRpcmUgbmVidWxhIGlzIDExMCBsaWdodC15ZWFycyBhY3Jvc3MsIGNvdmVyaW5nIHNpeCBmdWxsIG1vb25zIG9uIHRoZSBza3kgYXMgc2VlbiBmcm9tIEVhcnRoLCBhbmQgcmVzaWRlcyBhYm91dCAyLDEwMCBsaWdodC15ZWFycyBhd2F5IGluIHRoZSBjb25zdGVsbGF0aW9uIEN5Z251cywgdGhlIFN3YW4uICAgVGhpcyAzLUQgdmlzdWFsaXphdGlvbiBmbGllcyBhY3Jvc3MgYSBzbWFsbCBwb3J0aW9uIG9mIHRoZSBWZWlsIE5lYnVsYSBhcyBwaG90b2dyYXBoZWQgYnkgdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUuICBSZWFkIG1vcmU6IDxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2ZlYXR1cmUvZ29kZGFyZC9odWJibGUtem9vbXMtaW4tb24tc2hyYXBuZWwtZnJvbS1hbi1leHBsb2RlZC1zdGFyXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvZmVhdHVyZS9nb2RkYXJkL2h1YmJsZS16b29tcy1pbi1vbi1zaHJhcG5lbC0uLi48L2E+ICBDcmVkaXQ6IE5BU0EsIEVTQSwgYW5kIEYuIFN1bW1lcnMsIEcuIEJhY29uLCBaLiBMZXZheSwgYW5kIEwuIEZyYXR0YXJlIChWaXogM0QgVGVhbSwgU1RTY0kpICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2MDciLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFpvb21zIGluIG9uIFNocmFwbmVsIGZyb20gYW4gRXhwbG9kZWQgU3RhciIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4ODUvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4ODV+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxODg1L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIk5BU0EncyBIdWJibGUgQ2VsZWJyYXRlcyAyMXN0IEFubml2ZXJzYXJ5IHdpdGggXCJSb3NlXCIgb2YgR2FsYXhpZXMiLCIyMSIsInNwYWNlIiwibmFzYSIsInRlbGVzY29wZSIsImdhbGF4eSIsImh1YmJsZSIsImhzdCIsImFubml2ZXJzYXkiLCJnb2RkYXJkc3BhY2VmbGlnaHRjZW50ZXIiLCJhcnAyNzMiLCJ1Z2MxODEwIiwidWdjMTgxMyJdLCJ0aXRsZSI6Ik5BU0EncyBIdWJibGUgQ2VsZWJyYXRlcyAyMXN0IEFubml2ZXJzYXJ5IHdpdGggXCJSb3NlXCIgb2YgR2FsYXhpZXMiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4ODUiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiTkFTQSBpbWFnZSByZWxlYXNlIEFwcmlsIDIwLCAyMDExICBUbyBzZWUgYSB2aWRlbyBvZiB0aGlzIGltYWdlIGdvIGhlcmU6IDxhIGhyZWY9XCJodHRwOi8vd3d3LmZsaWNrci5jb20vcGhvdG9zL2dzZmMvNTYzNzc5NjYyMlwiPnd3dy5mbGlja3IuY29tL3Bob3Rvcy9nc2ZjLzU2Mzc3OTY2MjI8L2E+ICBUbyBjZWxlYnJhdGUgdGhlIDIxc3QgYW5uaXZlcnNhcnkgb2YgdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUncyBkZXBsb3ltZW50IGludG8gc3BhY2UsIGFzdHJvbm9tZXJzIGF0IHRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgaW4gQmFsdGltb3JlLCBNZC4sIHBvaW50ZWQgSHViYmxlJ3MgZXllIGF0IGFuIGVzcGVjaWFsbHkgcGhvdG9nZW5pYyBwYWlyIG9mIGludGVyYWN0aW5nIGdhbGF4aWVzIGNhbGxlZCBBcnAgMjczLiBUaGUgbGFyZ2VyIG9mIHRoZSBzcGlyYWwgZ2FsYXhpZXMsIGtub3duIGFzIFVHQyAxODEwLCBoYXMgYSBkaXNrIHRoYXQgaXMgZGlzdG9ydGVkIGludG8gYSByb3NlLWxpa2Ugc2hhcGUgYnkgdGhlIGdyYXZpdGF0aW9uYWwgdGlkYWwgcHVsbCBvZiB0aGUgY29tcGFuaW9uIGdhbGF4eSBiZWxvdyBpdCwga25vd24gYXMgVUdDIDE4MTMuIFRoaXMgaW1hZ2UgaXMgYSBjb21wb3NpdGUgb2YgSHViYmxlIFdpZGUgRmllbGQgQ2FtZXJhIDMgZGF0YSB0YWtlbiBvbiBEZWNlbWJlciAxNywgMjAxMCwgd2l0aCB0aHJlZSBzZXBhcmF0ZSBmaWx0ZXJzIHRoYXQgYWxsb3cgYSBicm9hZCByYW5nZSBvZiB3YXZlbGVuZ3RocyBjb3ZlcmluZyB0aGUgdWx0cmF2aW9sZXQsIGJsdWUsIGFuZCByZWQgcG9ydGlvbnMgb2YgdGhlIHNwZWN0cnVtLiAgSHViYmxlIHdhcyBsYXVuY2hlZCBBcHJpbCAyNCwgMTk5MCwgYWJvYXJkIERpc2NvdmVyeSdzIFNUUy0zMSBtaXNzaW9uLiBIdWJibGUgZGlzY292ZXJpZXMgICByZXZvbHV0aW9uaXplZCBuZWFybHkgYWxsIGFyZWFzIG9mIGN1cnJlbnQgYXN0cm9ub21pY2FsIHJlc2VhcmNoIGZyb20gcGxhbmV0YXJ5IHNjaWVuY2UgdG8gY29zbW9sb2d5LiAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpICBUbyByZWFkIG1vcmUgYWJvdXQgdGhpcyBpbWFnZSBnbyBoZXJlOiA8YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9zY2llbmNlL2h1YmJsZS1yb3NlLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9zY2llbmNlL2h1YmJsZS1yb3NlLmh0bWw8L2E+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+Sm9pbiB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvaHViYmxlLXNlZXMtYS1iZWhlbW90aC1ibGVlZGluZy1hdG1vc3BoZXJlLWFyb3VuZC1hLXdhcm0tZXhvcGxhbmV0XzE5MTI1MDQxNjIxX28vaHViYmxlLXNlZXMtYS1iZWhlbW90aC1ibGVlZGluZy1hdG1vc3BoZXJlLWFyb3VuZC1hLXdhcm0tZXhvcGxhbmV0XzE5MTI1MDQxNjIxX29+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL2h1YmJsZS1zZWVzLWEtYmVoZW1vdGgtYmxlZWRpbmctYXRtb3NwaGVyZS1hcm91bmQtYS13YXJtLWV4b3BsYW5ldF8xOTEyNTA0MTYyMV9vL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSIsIkhTVCIsImV4b3BsYW5ldCJdLCJkZXNjcmlwdGlvbiI6IkFzdHJvbm9tZXJzIHVzaW5nIE5BU0HigJlzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGF2ZSBkaXNjb3ZlcmVkIGFuIGltbWVuc2UgY2xvdWQgb2YgaHlkcm9nZW4gZHViYmVkIOKAnFRoZSBCZWhlbW90aOKAnSBibGVlZGluZyBmcm9tIGEgcGxhbmV0IG9yYml0aW5nIGEgbmVhcmJ5IHN0YXIuIFRoZSBlbm9ybW91cywgY29tZXQtbGlrZSBmZWF0dXJlIGlzIGFib3V0IDUwIHRpbWVzIHRoZSBzaXplIG9mIHRoZSBwYXJlbnQgc3Rhci4gVGhlIGh5ZHJvZ2VuIGlzIGV2YXBvcmF0aW5nIGZyb20gYSB3YXJtLCBOZXB0dW5lLXNpemVkIHBsYW5ldCwgZHVlIHRvIGV4dHJlbWUgcmFkaWF0aW9uIGZyb20gdGhlIHN0YXIuICBUaGlzIHBoZW5vbWVub24gaGFzIG5ldmVyIGJlZW4gc2VlbiBhcm91bmQgYW4gZXhvcGxhbmV0IHNvIHNtYWxsLiBJdCBtYXkgb2ZmZXIgY2x1ZXMgdG8gaG93IG90aGVyIHBsYW5ldHMgd2l0aCBoeWRyb2dlbi1lbnZlbG9wZWQgYXRtb3NwaGVyZXMgY291bGQgaGF2ZSB0aGVpciBvdXRlciBsYXllcnMgZXZhcG9yYXRlZCBieSB0aGVpciBwYXJlbnQgc3RhciwgbGVhdmluZyBiZWhpbmQgc29saWQsIHJvY2t5IGNvcmVzLiBIb3QsIHJvY2t5IHBsYW5ldHMgc3VjaCBhcyB0aGVzZSB0aGF0IHJvdWdobHkgdGhlIHNpemUgb2YgRWFydGggYXJlIGtub3duIGFzIEhvdC1TdXBlciBFYXJ0aHMuICDigJxUaGlzIGNsb3VkIGlzIHZlcnkgc3BlY3RhY3VsYXIsIHRob3VnaCB0aGUgZXZhcG9yYXRpb24gcmF0ZSBkb2VzIG5vdCB0aHJlYXRlbiB0aGUgcGxhbmV0IHJpZ2h0IG5vdyzigJ0gZXhwbGFpbnMgdGhlIHN0dWR54oCZcyBsZWFkZXIsIERhdmlkIEVocmVucmVpY2ggb2YgdGhlIE9ic2VydmF0b3J5IG9mIHRoZSBVbml2ZXJzaXR5IG9mIEdlbmV2YSBpbiBTd2l0emVybGFuZC4g4oCcQnV0IHdlIGtub3cgdGhhdCBpbiB0aGUgcGFzdCwgdGhlIHN0YXIsIHdoaWNoIGlzIGEgZmFpbnQgcmVkIGR3YXJmLCB3YXMgbW9yZSBhY3RpdmUuIFRoaXMgbWVhbnMgdGhhdCB0aGUgcGxhbmV0IGV2YXBvcmF0ZWQgZmFzdGVyIGR1cmluZyBpdHMgZmlyc3QgYmlsbGlvbiB5ZWFycyBvZiBleGlzdGVuY2UgYmVjYXVzZSBvZiB0aGUgc3Ryb25nIHJhZGlhdGlvbiBmcm9tIHRoZSB5b3VuZyBzdGFyLiBPdmVyYWxsLCB3ZSBlc3RpbWF0ZSB0aGF0IGl0IG1heSBoYXZlIGxvc3QgdXAgdG8gMTAgcGVyY2VudCBvZiBpdHMgYXRtb3NwaGVyZSBvdmVyIHRoZSBwYXN0IHNldmVyYWwgYmlsbGlvbiB5ZWFycy7igJ0gIENhcHRpb246IFRoaXMgYXJ0aXN0J3MgY29uY2VwdCBzaG93cyBcIlRoZSBCZWhlbW90aCxcIiBhbiBlbm9ybW91cyBjb21ldC1saWtlIGNsb3VkIG9mIGh5ZHJvZ2VuIGJsZWVkaW5nIG9mZiBvZiBhIHdhcm0sIE5lcHR1bmUtc2l6ZWQgcGxhbmV0IGp1c3QgMzAgbGlnaHQteWVhcnMgZnJvbSBFYXJ0aC4gQWxzbyBkZXBpY3RlZCBpcyB0aGUgcGFyZW50IHN0YXIsIHdoaWNoIGlzIGEgZmFpbnQgcmVkIGR3YXJmIG5hbWVkIEdKIDQzNi4gVGhlIGh5ZHJvZ2VuIGlzIGV2YXBvcmF0aW5nIGZyb20gdGhlIHBsYW5ldCBkdWUgdG8gZXh0cmVtZSByYWRpYXRpb24gZnJvbSB0aGUgc3Rhci4gQSBwaGVub21lbm9uIHRoaXMgbGFyZ2UgaGFzIG5ldmVyIGJlZm9yZSBiZWVuIHNlZW4gYXJvdW5kIGFueSBleG9wbGFuZXQuICBDcmVkaXRzOiBOQVNBLCBFU0EsIGFuZCBHLiBCYWNvbiAoU1RTY0kpIiwibmFzYV9pZCI6Imh1YmJsZS1zZWVzLWEtYmVoZW1vdGgtYmxlZWRpbmctYXRtb3NwaGVyZS1hcm91bmQtYS13YXJtLWV4b3BsYW5ldF8xOTEyNTA0MTYyMV9vIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wNi0yNFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIGEg4oCcQmVoZW1vdGjigJ0gQmxlZWRpbmcgQXRtb3NwaGVyZSBBcm91bmQgYSBXYXJtIEV4b3BsYW5ldCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4MjQvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE4MjR+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxODI0L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSdzIE5lcHR1bmUgQW5uaXZlcnNhcnkgUGljdHVyZXMiLCJuYXNhIiwibmVwdHVuZSIsImh1YmJsZSIsImhzdCIsImdvZGRhcmRzcGFjZWZsaWdodGNlbnRlciIsIjE2NXllYXJzIl0sImRlc2NyaXB0aW9uIjoiTkFTQSBpbWFnZSByZWxlYXNlIEp1bHkgMTIsIDIwMTEgIE5lcHR1bmU6IDIzOjA5IFVUIChKdW5lIDI1LCAyMDExKSAgVG9kYXksIE5lcHR1bmUgaGFzIGFycml2ZWQgYXQgdGhlIHNhbWUgbG9jYXRpb24gaW4gc3BhY2Ugd2hlcmUgaXQgd2FzIGRpc2NvdmVyZWQgbmVhcmx5IDE2NSB5ZWFycyBhZ28uIFRvIGNvbW1lbW9yYXRlIHRoZSBldmVudCwgTkFTQSdzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGFzIHRha2VuIHRoZXNlICZxdW90O2Fubml2ZXJzYXJ5IHBpY3R1cmVzJnF1b3Q7IG9mIHRoZSBibHVlLWdyZWVuIGdpYW50IHBsYW5ldC4gIE5lcHR1bmUgaXMgdGhlIG1vc3QgZGlzdGFudCBtYWpvciBwbGFuZXQgaW4gb3VyIHNvbGFyIHN5c3RlbS4gR2VybWFuIGFzdHJvbm9tZXIgSm9oYW5uIEdhbGxlIGRpc2NvdmVyZWQgdGhlIHBsYW5ldCBvbiBTZXB0ZW1iZXIgMjMsIDE4NDYuIEF0IHRoZSB0aW1lLCB0aGUgZGlzY292ZXJ5IGRvdWJsZWQgdGhlIHNpemUgb2YgdGhlIGtub3duIHNvbGFyIHN5c3RlbS4gVGhlIHBsYW5ldCBpcyAyLjggYmlsbGlvbiBtaWxlcyAoNC41IGJpbGxpb24ga2lsb21ldGVycykgZnJvbSB0aGUgU3VuLCAzMCB0aW1lcyBmYXJ0aGVyIHRoYW4gRWFydGguIFVuZGVyIHRoZSBTdW4ncyB3ZWFrIHB1bGwgYXQgdGhhdCBkaXN0YW5jZSwgTmVwdHVuZSBwbG9kcyBhbG9uZyBpbiBpdHMgaHVnZSBvcmJpdCwgc2xvd2x5IGNvbXBsZXRpbmcgb25lIHJldm9sdXRpb24gYXBwcm94aW1hdGVseSBldmVyeSAxNjUgeWVhcnMuICA8Yj5UbyByZWFkIG1vcmUgZ28gPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvc2NpZW5jZS9uZXB0dW5lLWNpcmN1aXQuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+IGhlcmU8L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQV9Hb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93ZWIuc3RhZ3JhbS5jb20vbi9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxODI0IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSdzIE5lcHR1bmUgQW5uaXZlcnNhcnkgUGljdHVyZXMiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjQwL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjQwfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDY0MC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJBIEh1YmJsZSBDb3NtaWMgQ291cGxlIiwic3RhciIsInNwYWNlIiwibmFzYSIsImh1YmJsZSIsIm0xNjciLCJuYXNhZ29kZGFyZCIsIndyMTI0Il0sImRlc2NyaXB0aW9uIjoiSGVyZSB3ZSBzZWUgdGhlIHNwZWN0YWN1bGFyIGNvc21pYyBwYWlyaW5nIG9mIHRoZSBzdGFyIEhlbiAyLTQyNyDigJQgbW9yZSBjb21tb25seSBrbm93biBhcyBXUiAxMjQg4oCUIGFuZCB0aGUgbmVidWxhIE0xLTY3IHdoaWNoIHN1cnJvdW5kcyBpdC4gQm90aCBvYmplY3RzLCBjYXB0dXJlZCBoZXJlIGJ5IHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGFyZSBmb3VuZCBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBTYWdpdHRhcml1cyBhbmQgbGllIDE1LDAwMCBsaWdodC15ZWFycyBhd2F5LiAgVGhlIHN0YXIgSGVuIDItNDI3IHNoaW5lcyBicmlnaHRseSBhdCB0aGUgdmVyeSBjZW50ZXIgb2YgdGhpcyBleHBsb3NpdmUgaW1hZ2UgYW5kIGFyb3VuZCB0aGUgaG90IGNsdW1wcyBvZiBzdXJyb3VuZGluZyBnYXMgdGhhdCBhcmUgYmVpbmcgZWplY3RlZCBpbnRvIHNwYWNlIGF0IG92ZXIgOTMsMjEwIG1pbGVzICgxNTAsMDAwIGttKSBwZXIgaG91ci4gIEhlbiAyLTQyNyBpcyBhIFdvbGbigJNSYXlldCBzdGFyLCBuYW1lZCBhZnRlciB0aGUgYXN0cm9ub21lcnMgQ2hhcmxlcyBXb2xmIGFuZCBHZW9yZ2VzIFJheWV0LiBXb2xm4oCTUmF5ZXQgYXJlIHN1cGVyLWhvdCBzdGFycyBjaGFyYWN0ZXJpemVkIGJ5IGEgZmllcmNlIGVqZWN0aW9uIG9mIG1hc3MuICBUaGUgbmVidWxhIE0xLTY3IGlzIGVzdGltYXRlZCB0byBiZSBubyBtb3JlIHRoYW4gMTAsMDAwIHllYXJzIG9sZCDigJQganVzdCBhIGJhYnkgaW4gYXN0cm9ub21pY2FsIHRlcm1zIOKAlCBidXQgd2hhdCBhIGJlYXV0aWZ1bCBhbmQgbWFnbmlmaWNlbnQgc2lnaHQgaXQgbWFrZXMuICBJbWFnZSBjcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSwgQWNrbm93bGVkZ2VtZW50OiBKdWR5IFNjaG1pZHQgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjQwIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6IkEgSHViYmxlIENvc21pYyBDb3VwbGUiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzg0L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzg0fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM4NC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgUGVlcnMgaW50byB0aGUgTW91dGggb2YgTGVvIEEiLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiLCJsZW9hIiwiaHViYmxlc3BhY2V0ZWxlc2NvcGUiLCJuYXNhZ29kZGFyZCJdLCJ0aXRsZSI6Ikh1YmJsZSBQZWVycyBpbnRvIHRoZSBNb3V0aCBvZiBMZW8gQSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDM4NCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJBdCBmaXJzdCBnbGFuY2UsIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSBzZWVtcyB0byBzaG93IGFuIGFycmF5IG9mIGRpZmZlcmVudCBjb3NtaWMgb2JqZWN0cywgYnV0IHRoZSBzcGVja2xpbmcgb2Ygc3RhcnMgc2hvd24gaGVyZSBhY3R1YWxseSBmb3JtcyBhIHNpbmdsZSBib2R5IOKAlCBhIG5lYXJieSBkd2FyZiBnYWxheHkga25vd24gYXMgTGVvIEEuIEl0cyBmZXcgbWlsbGlvbiBzdGFycyBhcmUgc28gc3BhcnNlbHkgZGlzdHJpYnV0ZWQgdGhhdCBzb21lIGRpc3RhbnQgYmFja2dyb3VuZCBnYWxheGllcyBhcmUgdmlzaWJsZSB0aHJvdWdoIGl0LiBMZW8gQSBpdHNlbGYgaXMgYXQgYSBkaXN0YW5jZSBvZiBhYm91dCAyLjUgbWlsbGlvbiBsaWdodC15ZWFycyBmcm9tIEVhcnRoIGFuZCBhIG1lbWJlciBvZiB0aGUgTG9jYWwgR3JvdXAgb2YgZ2FsYXhpZXM7IGEgZ3JvdXAgdGhhdCBpbmNsdWRlcyB0aGUgTWlsa3kgV2F5IGFuZCB0aGUgd2VsbC1rbm93biBBbmRyb21lZGEgZ2FsYXh5LiAgQXN0cm9ub21lcnMgc3R1ZHkgZHdhcmYgZ2FsYXhpZXMgYmVjYXVzZSB0aGV5IGFyZSB2ZXJ5IG51bWVyb3VzIGFuZCBhcmUgc2ltcGxlciBpbiBzdHJ1Y3R1cmUgdGhhbiB0aGVpciBnaWFudCBjb3VzaW5zLiBIb3dldmVyLCB0aGVpciBzbWFsbCBzaXplIG1ha2VzIHRoZW0gZGlmZmljdWx0IHRvIHN0dWR5IGF0IGdyZWF0IGRpc3RhbmNlcy4gQXMgYSByZXN1bHQsIHRoZSBkd2FyZiBnYWxheGllcyBvZiB0aGUgTG9jYWwgR3JvdXAgYXJlIG9mIHBhcnRpY3VsYXIgaW50ZXJlc3QsIGFzIHRoZXkgYXJlIGNsb3NlIGVub3VnaCB0byBzdHVkeSBpbiBkZXRhaWwuICBBcyBpdCB0dXJucyBvdXQsIExlbyBBIGlzIGEgcmF0aGVyIHVudXN1YWwgZ2FsYXh5LiBJdCBpcyBvbmUgb2YgdGhlIG1vc3QgaXNvbGF0ZWQgZ2FsYXhpZXMgaW4gdGhlIExvY2FsIEdyb3VwLCBoYXMgbm8gb2J2aW91cyBzdHJ1Y3R1cmFsIGZlYXR1cmVzIGJleW9uZCBiZWluZyBhIHJvdWdobHkgc3BoZXJpY2FsIG1hc3Mgb2Ygc3RhcnMsIGFuZCBzaG93cyBubyBldmlkZW5jZSBmb3IgcmVjZW50IGludGVyYWN0aW9ucyB3aXRoIGFueSBvZiBpdHMgZmV3IG5laWdoYm9ycy4gSG93ZXZlciwgdGhlIGdhbGF4eeKAmXMgY29udGVudHMgYXJlIG92ZXJ3aGVsbWluZ2x5IGRvbWluYXRlZCBieSByZWxhdGl2ZWx5IHlvdW5nIHN0YXJzLCBzb21ldGhpbmcgdGhhdCB3b3VsZCBub3JtYWxseSBiZSB0aGUgcmVzdWx0IG9mIGEgcmVjZW50IGludGVyYWN0aW9uIHdpdGggYW5vdGhlciBnYWxheHkuIEFyb3VuZCA5MCUgb2YgdGhlIHN0YXJzIGluIExlbyBBIGFyZSBsZXNzIHRoYW4gZWlnaHQgYmlsbGlvbiB5ZWFycyBvbGQg4oCUIHlvdW5nIGluIGNvc21pYyB0ZXJtcyEgVGhpcyByYWlzZXMgYSBudW1iZXIgb2YgaW50cmlndWluZyBxdWVzdGlvbnMgYWJvdXQgd2h5IHN0YXIgZm9ybWF0aW9uIGluIExlbyBBIGRpZCBub3QgdGFrZSBwbGFjZSBvbiB0aGUg4oCcdXN1YWzigJ0gdGltZXNjYWxlLCBidXQgaW5zdGVhZCB3YWl0ZWQgdW50aWwgaXQgd2FzIGdvb2QgYW5kIHJlYWR5LiAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0E7IEFja25vd2xlZGdtZW50OiBKdWR5IFNjaG1pZHQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNDY0L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNDY0fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTQ2NC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgcmV2ZWFscyB0aGUgUmluZyBOZWJ1bGHigJlzIHRydWUgc2hhcGUiLCJuYXNhIiwibmVidWxhIiwiaHViYmxlIiwiaHViYmxlc3BhY2V0ZWxlc2NvcGUiXSwiZGVzY3JpcHRpb24iOiJDYXB0aW9uOiBJbiB0aGlzIGNvbXBvc2l0ZSBpbWFnZSwgdmlzaWJsZS1saWdodCBvYnNlcnZhdGlvbnMgYnkgTkFTQeKAmXMgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBhcmUgY29tYmluZWQgd2l0aCBpbmZyYXJlZCBkYXRhIGZyb20gdGhlIGdyb3VuZC1iYXNlZCBMYXJnZSBCaW5vY3VsYXIgVGVsZXNjb3BlIGluIEFyaXpvbmEgdG8gYXNzZW1ibGUgYSBkcmFtYXRpYyB2aWV3IG9mIHRoZSB3ZWxsLWtub3duIFJpbmcgTmVidWxhLiAgIENyZWRpdDogTkFTQSwgRVNBLCBDLlIuIFJvYmVydCBP4oCZRGVsbCAoVmFuZGVyYmlsdCBVbml2ZXJzaXR5KSwgRy5KLiBGZXJsYW5kIChVbml2ZXJzaXR5IG9mIEtlbnR1Y2t5KSwgVy5KLiBIZW5uZXkgYW5kIE0uIFBlaW1iZXJ0IChOYXRpb25hbCBBdXRvbm9tb3VzIFVuaXZlcnNpdHkgb2YgTWV4aWNvKSBDcmVkaXQgZm9yIExhcmdlIEJpbm9jdWxhciBUZWxlc2NvcGUgZGF0YTogRGF2aWQgVGhvbXBzb24gKFVuaXZlcnNpdHkgb2YgQXJpem9uYSkgICAtLS0tICBUaGUgUmluZyBOZWJ1bGEncyBkaXN0aW5jdGl2ZSBzaGFwZSBtYWtlcyBpdCBhIHBvcHVsYXIgaWxsdXN0cmF0aW9uIGZvciBhc3Ryb25vbXkgYm9va3MuIEJ1dCBuZXcgb2JzZXJ2YXRpb25zIGJ5IE5BU0EncyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIG9mIHRoZSBnbG93aW5nIGdhcyBzaHJvdWQgYXJvdW5kIGFuIG9sZCwgZHlpbmcsIHN1bi1saWtlIHN0YXIgcmV2ZWFsIGEgbmV3IHR3aXN0LiAgJnF1b3Q7VGhlIG5lYnVsYSBpcyBub3QgbGlrZSBhIGJhZ2VsLCBidXQgcmF0aGVyLCBpdCdzIGxpa2UgYSBqZWxseSBkb3VnaG51dCwgYmVjYXVzZSBpdCdzIGZpbGxlZCB3aXRoIG1hdGVyaWFsIGluIHRoZSBtaWRkbGUsJnF1b3Q7IHNhaWQgQy4gUm9iZXJ0IE8nRGVsbCBvZiBWYW5kZXJiaWx0IFVuaXZlcnNpdHkgaW4gTmFzaHZpbGxlLCBUZW5uLiBIZSBsZWFkcyBhIHJlc2VhcmNoIHRlYW0gdGhhdCB1c2VkIEh1YmJsZSBhbmQgc2V2ZXJhbCBncm91bmQtYmFzZWQgdGVsZXNjb3BlcyB0byBvYnRhaW4gdGhlIGJlc3QgdmlldyB5ZXQgb2YgdGhlIGljb25pYyBuZWJ1bGEuIFRoZSBpbWFnZXMgc2hvdyBhIG1vcmUgY29tcGxleCBzdHJ1Y3R1cmUgdGhhbiBhc3Ryb25vbWVycyBvbmNlIHRob3VnaHQgYW5kIGhhdmUgYWxsb3dlZCB0aGVtIHRvIGNvbnN0cnVjdCB0aGUgbW9zdCBwcmVjaXNlIDMtRCBtb2RlbCBvZiB0aGUgbmVidWxhLiAgJnF1b3Q7V2l0aCBIdWJibGUncyBkZXRhaWwsIHdlIHNlZSBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IHNoYXBlIHRoYW4gd2hhdCdzIGJlZW4gdGhvdWdodCBhYm91dCBoaXN0b3JpY2FsbHkgZm9yIHRoaXMgY2xhc3NpYyBuZWJ1bGEsJnF1b3Q7IE8nRGVsbCBzYWlkLiAmcXVvdDtUaGUgbmV3IEh1YmJsZSBvYnNlcnZhdGlvbnMgc2hvdyB0aGUgbmVidWxhIGluIG11Y2ggY2xlYXJlciBkZXRhaWwsIGFuZCB3ZSBzZWUgdGhpbmdzIGFyZSBub3QgYXMgc2ltcGxlIGFzIHdlIHByZXZpb3VzbHkgdGhvdWdodC4mcXVvdDsgICBUaGUgUmluZyBOZWJ1bGEgaXMgYWJvdXQgMiwwMDAgbGlnaHQteWVhcnMgZnJvbSBFYXJ0aCBhbmQgbWVhc3VyZXMgcm91Z2hseSAxIGxpZ2h0LXllYXIgYWNyb3NzLiBMb2NhdGVkIGluIHRoZSBjb25zdGVsbGF0aW9uIEx5cmEsIHRoZSBuZWJ1bGEgaXMgYSBwb3B1bGFyIHRhcmdldCBmb3IgYW1hdGV1ciBhc3Ryb25vbWVycy4gUmVhZCBtb3JlOiA8YSBocmVmPVwiaHR0cDovLzEudXNhLmdvdi8xNFZBT01rXCIgcmVsPVwibm9mb2xsb3dcIj4xLnVzYS5nb3YvMTRWQU9NazwvYT4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE0NjQiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIHJldmVhbHMgdGhlIFJpbmcgTmVidWxh4oCZcyB0cnVlIHNoYXBlIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE0NC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE0NH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxNDQvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIEdhemVzIGF0IGEgQ29zbWljIE1lZ2FtYXNlciJdLCJkZXNjcmlwdGlvbiI6IlRoaXMgZ2FsYXh5IGhhcyBhIGZhciBtb3JlIGV4Y2l0aW5nIGFuZCBmdXR1cmlzdGljIGNsYXNzaWZpY2F0aW9uIHRoYW4gbW9zdCDigJQgaXQgaG9zdHMgYSBtZWdhbWFzZXIuIE1lZ2FtYXNlcnMgYXJlIGludGVuc2VseSBicmlnaHQsIGFyb3VuZCAxMDAgbWlsbGlvbiB0aW1lcyBicmlnaHRlciB0aGFuIHRoZSBtYXNlcnMgZm91bmQgaW4gZ2FsYXhpZXMgbGlrZSB0aGUgTWlsa3kgV2F5LiBUaGUgZW50aXJlIGdhbGF4eSBlc3NlbnRpYWxseSBhY3RzIGFzIGFuIGFzdHJvbm9taWNhbCBsYXNlciB0aGF0IGJlYW1zIG91dCBtaWNyb3dhdmUgZW1pc3Npb24gcmF0aGVyIHRoYW4gdmlzaWJsZSBsaWdodCAoaGVuY2UgdGhlIOKAmG3igJkgcmVwbGFjaW5nIHRoZSDigJhs4oCZKS4gIEEgbWVnYW1hc2VyIGlzIGEgcHJvY2VzcyB0aGF0IGludm9sdmVzIHNvbWUgY29tcG9uZW50cyB3aXRoaW4gdGhlIGdhbGF4eSAobGlrZSBnYXMpIHRoYXQgaXMgaW4gdGhlIHJpZ2h0IHBoeXNpY2FsIGNvbmRpdGlvbiB0byBjYXVzZSB0aGUgYW1wbGlmaWNhdGlvbiBvZiBsaWdodCAoaW4gdGhpcyBjYXNlLCBtaWNyb3dhdmVzKS4gIEJ1dCB0aGVyZSBhcmUgb3RoZXIgcGFydHMgb2YgdGhlIGdhbGF4eSAobGlrZSBzdGFycyBmb3IgZXhhbXBsZSkgdGhhdCBhcmVu4oCZdCBwYXJ0IG9mIHRoZSBtYXNlciBwcm9jZXNzLiAgVGhpcyBtZWdhbWFzZXIgZ2FsYXh5IGlzIG5hbWVkIElSQVMgMTYzOTktMDkzNyBhbmQgaXMgbG9jYXRlZCBvdmVyIDM3MCBtaWxsaW9uIGxpZ2h0LXllYXJzIGZyb20gRWFydGguIFRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSBiZWxpZXMgdGhlIGdhbGF4eeKAmXMgZW5lcmdldGljIG5hdHVyZSwgaW5zdGVhZCBwYWludGluZyBpdCBhcyBhIGJlYXV0aWZ1bCBhbmQgc2VyZW5lIGNvc21pYyByb3NlYnVkLiBUaGUgaW1hZ2UgY29tcHJpc2VzIG9ic2VydmF0aW9ucyBjYXB0dXJlZCBhY3Jvc3MgdmFyaW91cyB3YXZlbGVuZ3RocyBieSB0d28gb2YgSHViYmxl4oCZcyBpbnN0cnVtZW50czogdGhlIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cyAoQUNTKSwgYW5kIHRoZSBOZWFyIEluZnJhcmVkIENhbWVyYSBhbmQgTXVsdGktT2JqZWN0IFNwZWN0cm9tZXRlciAoTklDTU9TKS4gIE5JQ01PU+KAmXMgc3VwZXJiIHNlbnNpdGl2aXR5LCByZXNvbHV0aW9uLCBhbmQgZmllbGQgb2YgdmlldyBnYXZlIGFzdHJvbm9tZXJzIHRoZSB1bmlxdWUgb3Bwb3J0dW5pdHkgdG8gb2JzZXJ2ZSB0aGUgc3RydWN0dXJlIG9mIElSQVMgMTYzOTktMDkzNyBpbiBkZXRhaWwuIFRoZXkgZm91bmQgaXQgaG9zdHMgYSBkb3VibGUgbnVjbGV1cyDigJQgdGhlIGdhbGF4eeKAmXMgY29yZSBpcyB0aG91Z2h0IHRvIGJlIGZvcm1lZCBvZiB0d28gc2VwYXJhdGUgY29yZXMgaW4gdGhlIHByb2Nlc3Mgb2YgbWVyZ2luZy4gVGhlIHR3byBjb21wb25lbnRzLCBuYW1lZCBJUkFTIDE2Mzk5TiBhbmQgSVJBUyAxNjM5OVMgZm9yIHRoZSBub3J0aGVybiBhbmQgc291dGhlcm4gcGFydHMgcmVzcGVjdGl2ZWx5LCBzaXQgb3ZlciAxMSwwMDAgbGlnaHQteWVhcnMgYXBhcnQuIEhvd2V2ZXIsIHRoZXkgYXJlIGJvdGggYnVyaWVkIGRlZXAgd2l0aGluIHRoZSBzYW1lIHN3aXJsIG9mIGNvc21pYyBnYXMgYW5kIGR1c3QgYW5kIGFyZSBpbnRlcmFjdGluZywgZ2l2aW5nIHRoZSBnYWxheHkgaXRzIHBlY3VsaWFyIHN0cnVjdHVyZS4gIFRoZSBudWNsZWkgYXJlIHZlcnkgZGlmZmVyZW50LiBJUkFTIDE2Mzk5UyBhcHBlYXJzIHRvIGJlIGEgc3RhcmJ1cnN0IHJlZ2lvbiwgd2hlcmUgbmV3IHN0YXJzIGFyZSBmb3JtaW5nIGF0IGFuIGluY3JlZGlibGUgcmF0ZS4gSVJBUyAxNjM5OU4sIGhvd2V2ZXIsIGlzIHNvbWV0aGluZyBrbm93biBhcyBhIExJTkVSIG51Y2xldXMgKExvdyBJb25pemF0aW9uIE51Y2xlYXIgRW1pc3Npb24gUmVnaW9uKSwgd2hpY2ggaXMgYSByZWdpb24gd2hvc2UgZW1pc3Npb24gbW9zdGx5IHN0ZW1zIGZyb20gd2Vha2x5LWlvbml6ZWQgb3IgbmV1dHJhbCBhdG9tcyBvZiBwYXJ0aWN1bGFyIGdhc2VzLiBUaGUgbm9ydGhlcm4gbnVjbGV1cyBhbHNvIGhvc3RzIGEgYmxhY2sgaG9sZSB3aXRoIHNvbWUgMTAwIG1pbGxpb24gdGltZXMgdGhlIG1hc3Mgb2YgdGhlIHN1biEgIEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBLCBBY2tub3dsZWRnZW1lbnQ6IEp1ZHkgU2NobWlkdCAoZ2Vja3ppbGxhKSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICAgICIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE0NCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgR2F6ZXMgYXQgYSBDb3NtaWMgTWVnYW1hc2VyIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTcwOC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTcwOH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE3MDgvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFZpZXdzIGEgQ29zbWljIFNreXJvY2tldCJdLCJ0aXRsZSI6Ikh1YmJsZSBWaWV3cyBhIENvc21pYyBTa3lyb2NrZXQiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE3MDgiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiTkFTQSBpbWFnZSByZWxlYXNlIEp1bHkgMywgMjAxMiAgQ2FwdGlvbjogUmVzZW1ibGluZyBhIEZvdXJ0aCBvZiBKdWx5IHNreXJvY2tldCwgSGVyYmlnLUhhcm8gMTEwIGlzIGEgZ2V5c2VyIG9mIGhvdCBnYXMgZnJvbSBhIG5ld2Jvcm4gc3RhciB0aGF0IHNwbGFzaGVzIHVwIGFnYWluc3QgYW5kIHJpY29jaGV0cyBvZmYgdGhlIGRlbnNlIGNvcmUgb2YgYSBjbG91ZCBvZiBtb2xlY3VsYXIgaHlkcm9nZW4uIEFsdGhvdWdoIHRoZSBwbHVtZXMgb2YgZ2FzIGxvb2sgbGlrZSB3aGlmZnMgb2Ygc21va2UsIHRoZXkgYXJlIGFjdHVhbGx5IGJpbGxpb25zIG9mIHRpbWVzIGxlc3MgZGVuc2UgdGhhbiB0aGUgc21va2UgZnJvbSBhIEp1bHkgNCBmaXJld29yay4gVGhpcyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIHBob3RvIHNob3dzIHRoZSBpbnRlZ3JhdGVkIGxpZ2h0IGZyb20gcGx1bWVzLCB3aGljaCBhcmUgbGlnaHQteWVhcnMgYWNyb3NzLiAgLS0gSGVyYmlnLUhhcm8gKEhIKSBvYmplY3RzIGNvbWUgaW4gYSB3aWRlIGFycmF5IG9mIHNoYXBlcywgYnV0IHRoZSBiYXNpYyBjb25maWd1cmF0aW9uIHN0YXlzIHRoZSBzYW1lLiBUd2luIGpldHMgb2YgaGVhdGVkIGdhcywgZWplY3RlZCBpbiBvcHBvc2l0ZSBkaXJlY3Rpb25zIGF3YXkgZnJvbSBhIGZvcm1pbmcgc3Rhciwgc3RyZWFtIHRocm91Z2ggaW50ZXJzdGVsbGFyIHNwYWNlLiBBc3Ryb25vbWVycyBzdXNwZWN0IHRoYXQgdGhlc2Ugb3V0Zmxvd3MgYXJlIGZ1ZWxlZCBieSBnYXMgYWNjcmV0aW5nIG9udG8gYSB5b3VuZyBzdGFyIHN1cnJvdW5kZWQgYnkgYSBkaXNrIG9mIGR1c3QgYW5kIGdhcy4gVGhlIGRpc2sgaXMgdGhlICZxdW90O2Z1ZWwgdGFuaywmcXVvdDsgdGhlIHN0YXIgaXMgdGhlIGdyYXZpdGF0aW9uYWwgZW5naW5lLCBhbmQgdGhlIGpldHMgYXJlIHRoZSBleGhhdXN0LiAgV2hlbiB0aGVzZSBlbmVyZ2V0aWMgamV0cyBzbGFtIGludG8gY29sZGVyIGdhcywgdGhlIGNvbGxpc2lvbiBwbGF5cyBvdXQgbGlrZSBhIHRyYWZmaWMgamFtIG9uIHRoZSBpbnRlcnN0YXRlLiBHYXMgd2l0aGluIHRoZSBzaG9jayBmcm9udCBzbG93cyB0byBhIGNyYXdsLCBidXQgbW9yZSBnYXMgY29udGludWVzIHRvIHBpbGUgdXAgYXMgdGhlIGpldCBrZWVwcyBzbGFtbWluZyBpbnRvIHRoZSBzaG9jayBmcm9tIGJlaGluZC4gVGVtcGVyYXR1cmVzIGNsaW1iIHNoYXJwbHksIGFuZCB0aGlzIGN1cnZpbmcsIGZsYXJlZCByZWdpb24gc3RhcnRzIHRvIGdsb3cuIFRoZXNlICZxdW90O2JvdyBzaG9ja3MmcXVvdDsgYXJlIHNvIG5hbWVkIGJlY2F1c2UgdGhleSByZXNlbWJsZSB0aGUgd2F2ZXMgdGhhdCBmb3JtIGF0IHRoZSBmcm9udCBvZiBhIGJvYXQuICBJbiB0aGUgY2FzZSBvZiB0aGUgc2luZ2xlIEhIIDExMCBqZXQsIGFzdHJvbm9tZXJzIG9ic2VydmUgYSBzcGVjdGFjdWxhciBhbmQgdW51c3VhbCBwZXJtdXRhdGlvbiBvbiB0aGlzIGJhc2ljIG1vZGVsLiBDYXJlZnVsIHN0dWR5IGhhcyByZXBlYXRlZGx5IGZhaWxlZCB0byBmaW5kIHRoZSBzb3VyY2Ugc3RhciBkcml2aW5nIEhIIDExMCwgYW5kIHRoZXJlIG1heSBiZSBnb29kIHJlYXNvbiBmb3IgdGhpczogcGVyaGFwcyB0aGUgSEggMTEwIG91dGZsb3cgaXMgaXRzZWxmIGdlbmVyYXRlZCBieSBhbm90aGVyIGpldC4gIEFzdHJvbm9tZXJzIG5vdyBiZWxpZXZlIHRoYXQgdGhlIG5lYXJieSBISCAyNzAgamV0IGdyYXplcyBhbiBpbW1vdmFibGUgb2JzdGFjbGUgLSBhIG11Y2ggZGVuc2VyLCBjb2xkZXIgY2xvdWQgY29yZSAtIGFuZCBnZXRzIGRpdmVydGVkIG9mZiBhdCBhYm91dCBhIDYwLWRlZ3JlZSBhbmdsZS4gVGhlIGpldCBnb2VzIGRhcmsgYW5kIHRoZW4gcmVlbWVyZ2VzLCBoYXZpbmcgcmVpbnZlbnRlZCBpdHNlbGYgYXMgSEggMTEwLiAgVGhlIGpldCBzaG93cyB0aGF0IHRoZXNlIGVuZXJnZXRpYyBmbG93cyBhcmUgbGlrZSB0aGUgZXJyYXRpYyBvdXRidXJzdHMgZnJvbSBhIFJvbWFuIGNhbmRsZS4gQXMgZmFzdC1tb3ZpbmcgYmxvYnMgb2YgZ2FzIGNhdGNoIHVwIGFuZCBjb2xsaWRlIHdpdGggc2xvd2VyIGJsb2JzLCBuZXcgc2hvY2tzIGFyaXNlIGFsb25nIHRoZSBqZXQncyBpbnRlcmlvci4gVGhlIGxpZ2h0IGVtaXR0ZWQgZnJvbSBleGNpdGVkIGdhcyBpbiB0aGVzZSBob3QgYmx1ZSByaWRnZXMgbWFya3MgdGhlIGJvdW5kYXJpZXMgb2YgdGhlc2UgaW50ZXJpb3IgY29sbGlzaW9ucy4gQnkgbWVhc3VyaW5nIHRoZSBjdXJyZW50IHZlbG9jaXR5IGFuZCBwb3NpdGlvbnMgb2YgZGlmZmVyZW50IGJsb2JzIGFuZCBob3QgcmlkZ2VzIGFsb25nIHRoZSBjaGFpbiB3aXRoaW4gdGhlIGpldCwgYXN0cm9ub21lcnMgY2FuIGVmZmVjdGl2ZWx5ICZxdW90O3Jld2luZCZxdW90OyB0aGUgb3V0ZmxvdywgZXh0cmFwb2xhdGluZyB0aGUgYmxvYnMgYmFjayB0byB0aGUgbW9tZW50IHdoZW4gdGhleSB3ZXJlIGVtaXR0ZWQuIFRoaXMgdGVjaG5pcXVlIGNhbiBiZSB1c2VkIHRvIGdhaW4gaW5zaWdodCBpbnRvIHRoZSBzb3VyY2Ugc3RhcidzIGhpc3Rvcnkgb2YgbWFzcyBhY2NyZXRpb24uICBUaGlzIGltYWdlIGlzIGEgY29tcG9zaXRlIG9mIGRhdGEgdGFrZW4gd2l0aCBIdWJibGUncyBBZHZhbmNlZCBDYW1lcmEgZm9yIFN1cnZleXMgaW4gMjAwNCBhbmQgMjAwNSBhbmQgdGhlIFdpZGUgRmllbGQgQ2FtZXJhIDMgaW4gQXByaWwgMjAxMS4gIENyZWRpdDogTkFTQSwgRVNBLCBhbmQgdGhlIEh1YmJsZSBIZXJpdGFnZSBUZWFtIChTVFNjSS9BVVJBKSAgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL3N0c2NpLWgtcDE5MDZhLWYtMTAyOHg1NDMvc3RzY2ktaC1wMTkwNmEtZi0xMDI4eDU0M350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2Uvc3RzY2ktaC1wMTkwNmEtZi0xMDI4eDU0My9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJVcmFudXMiLCJOZXB0dW5lIiwiSHViYmxlIiwiTkFTQSBHb2RkYXJkIl0sImxvY2F0aW9uIjoiTkFTQSBHb2RkYXJkIiwibmFzYV9pZCI6InN0c2NpLWgtcDE5MDZhLWYtMTAyOHg1NDMiLCJkYXRlX2NyZWF0ZWQiOiIyMDE5LTAyLTExVDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiRHVyaW5nIGl0cyByb3V0aW5lIHllYXJseSBtb25pdG9yaW5nIG9mIHRoZSB3ZWF0aGVyIG9uIG91ciBzb2xhciBzeXN0ZW0ncyBvdXRlciBwbGFuZXRzLCBOQVNBJ3MgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBoYXMgdW5jb3ZlcmVkIGEgbmV3IG15c3RlcmlvdXMgZGFyayBzdG9ybSBvbiBOZXB0dW5lIChyaWdodCkgYW5kIHByb3ZpZGVkIGEgZnJlc2ggbG9vayBhdCBhIGxvbmctbGl2ZWQgc3Rvcm0gY2lyY2xpbmcgYXJvdW5kIHRoZSBub3J0aCBwb2xhciByZWdpb24gb24gVXJhbnVzIChsZWZ0KS4iLCJzZWNvbmRhcnlfY3JlYXRvciI6IlNwYWNlIFRlbGVzY29wZSBTY2llbmNlIEluc3RpdHV0ZSBPZmZpY2Ugb2YgUHVibGljIE91dHJlYWNoIiwidGl0bGUiOiJIdWJibGUgUmV2ZWFscyBEeW5hbWljIEF0bW9zcGhlcmVzIG9mIFVyYW51cywgTmVwdHVuZSIsImNlbnRlciI6IkdTRkMiLCJwaG90b2dyYXBoZXIiOiJOQVNBLCBFU0EsIEEuIFNpbW9uIChOQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciksIGFuZCBNLkguIFdvbmcgYW5kIEEuIEhzdSAoVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBCZXJrZWxleSkifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzOTAvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzOTB+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzkwL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZeKAmXMgSm91cm5leSB0byB0aGUgQ2VudGVyIG9mIG91ciBHYWxheHkiXSwidGl0bGUiOiJIdWJibGXigJlzIEpvdXJuZXkgdG8gdGhlIENlbnRlciBvZiBvdXIgR2FsYXh5IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzkwIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgcGljdHVyZSwgc3Bhbm5pbmcgNTAgbGlnaHQteWVhcnMgYWNyb3NzLCBpcyBhIG1vc2FpYyBzdGl0Y2hlZCBmcm9tIG5pbmUgc2VwYXJhdGUgaW1hZ2VzIGZyb20gSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYSAzLiBUaGUgY2VudGVyIG9mIHRoZSBNaWxreSBXYXkgaXMgbG9jYXRlZCAyNywwMDAgbGlnaHQteWVhcnMgYXdheS4gVGhlIOKAnHNub3dzdG9ybeKAnSBvZiBzdGFycyBpbiB0aGUgaW1hZ2UgaXMganVzdCB0aGUgdGlwIG9mIHRoZSBpY2ViZXJnOiBBc3Ryb25vbWVycyBlc3RpbWF0ZSB0aGF0IGFib3V0IDEwIG1pbGxpb24gc3RhcnMgaW4gdGhpcyBjbHVzdGVyIGFyZSB0b28gZmFpbnQgdG8gYmUgY2FwdHVyZWQgaW4gdGhpcyBpbWFnZS4gIFJlYWQgbW9yZTogPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvZmVhdHVyZS9nb2RkYXJkLzIwMTYvaHViYmxlLXMtam91cm5leS10by10aGUtY2VudGVyLW9mLW91ci1nYWxheHlcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5uYXNhLmdvdi9mZWF0dXJlL2dvZGRhcmQvMjAxNi9odWJibGUtcy1qb3VybmV5LXRvLXRoZS4uLjwvYT4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDY5OS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDY5OX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2OTkvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlIFZpZXcgb2YgYSBOaXRyb2dlbi1SaWNoIE5lYnVsYSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2OTkiLCJkYXRlX2NyZWF0ZWQiOiIyMDE1LTA2LTI2VDE1OjM0OjI2WiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFZpZXcgb2YgYSBOaXRyb2dlbi1SaWNoIE5lYnVsYSIsImRlc2NyaXB0aW9uIjoiVGhpcyBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIHNob3dzIGEgcGxhbmV0YXJ5IG5lYnVsYSBuYW1lZCBOR0MgNjE1MywgbG9jYXRlZCBhYm91dCA0LDAwMCBsaWdodC15ZWFycyBhd2F5IGluIHRoZSBzb3V0aGVybiBjb25zdGVsbGF0aW9uIG9mIFNjb3JwaXVzIChUaGUgU2NvcnBpb24pLiBUaGUgZmFpbnQgYmx1ZSBoYXplIGFjcm9zcyB0aGUgZnJhbWUgc2hvd3Mgd2hhdCByZW1haW5zIG9mIGEgc3RhciBsaWtlIHRoZSBzdW4gYWZ0ZXIgaXQgaGFzIGRlcGxldGVkIG1vc3Qgb2YgaXRzIGZ1ZWwuIFdoZW4gdGhpcyBoYXBwZW5zLCB0aGUgb3V0ZXIgbGF5ZXJzIG9mIHRoZSBzdGFyIGFyZSBlamVjdGVkLCBhbmQgZ2V0IGV4Y2l0ZWQgYW5kIGlvbml6ZWQgYnkgdGhlIGVuZXJnZXRpYyB1bHRyYXZpb2xldCBsaWdodCBlbWl0dGVkIGJ5IHRoZSBicmlnaHQgaG90IGNvcmUgb2YgdGhlIHN0YXIsIGZvcm1pbmcgdGhlIG5lYnVsYS4gIE5HQyA2MTUzIGlzIGEgcGxhbmV0YXJ5IG5lYnVsYSB0aGF0IGlzIGVsbGlwdGljYWwgaW4gc2hhcGUsIHdpdGggYW4gZXh0cmVtZWx5IHJpY2ggbmV0d29yayBvZiBsb29wcyBhbmQgZmlsYW1lbnRzLCBzaG93biBjbGVhcmx5IGluIHRoaXMgSHViYmxlIGltYWdlLiBIb3dldmVyLCB0aGlzIGlzIG5vdCB3aGF0IG1ha2VzIHRoaXMgcGxhbmV0YXJ5IG5lYnVsYSBzbyBpbnRlcmVzdGluZyBmb3IgYXN0cm9ub21lcnMuICBNZWFzdXJlbWVudHMgc2hvdyB0aGF0IE5HQyA2MTUzIGNvbnRhaW5zIGxhcmdlIGFtb3VudHMgb2YgbmVvbiwgYXJnb24sIG94eWdlbiwgY2FyYm9uIGFuZCBjaGxvcmluZSDigJQgdXAgdG8gdGhyZWUgdGltZXMgbW9yZSB0aGFuIGNhbiBiZSBmb3VuZCBpbiB0aGUgc29sYXIgc3lzdGVtLiBUaGUgbmVidWxhIGNvbnRhaW5zIGEgd2hvcHBpbmcgZml2ZSB0aW1lcyBtb3JlIG5pdHJvZ2VuIHRoYW4gb3VyIHN1biEgQWx0aG91Z2ggaXQgbWF5IGJlIHRoYXQgdGhlIHN0YXIgZGV2ZWxvcGVkIGhpZ2hlciBsZXZlbHMgb2YgdGhlc2UgZWxlbWVudHMgYXMgaXQgZ3JldyBhbmQgZXZvbHZlZCwgaXQgaXMgbW9yZSBsaWtlbHkgdGhhdCB0aGUgc3RhciBvcmlnaW5hbGx5IGZvcm1lZCBmcm9tIGEgY2xvdWQgb2YgbWF0ZXJpYWwgdGhhdCBhbHJlYWR5IGNvbnRhaW5lZCBhIGxvdCBtb3JlIG9mIHRoZXNlIGVsZW1lbnRzLiAgVGV4dCBjcmVkaXQ6IEV1cm9wZWFuIFNwYWNlIEFnZW5jeSBJbWFnZSBjcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSwgQWNrbm93bGVkZ2VtZW50OiBNYXRlaiBOb3ZhayAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTA1OS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTA1OX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEwNTkvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiR3JhbmQgU3dpcmxzIGZyb20gTkFTQSdzIEh1YmJsZSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEwNTkiLCJkYXRlX2NyZWF0ZWQiOiIyMDE0LTA2LTA2VDE0OjM1OjQ3WiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiR3JhbmQgU3dpcmxzIGZyb20gTkFTQSdzIEh1YmJsZSIsImRlc2NyaXB0aW9uIjoiVGhpcyBuZXcgSHViYmxlIGltYWdlIHNob3dzIE5HQyAxNTY2LCBhIGJlYXV0aWZ1bCBnYWxheHkgbG9jYXRlZCBhcHByb3hpbWF0ZWx5IDQwIG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBEb3JhZG8gKFRoZSBEb2xwaGluZmlzaCkuIE5HQyAxNTY2IGlzIGFuIGludGVybWVkaWF0ZSBzcGlyYWwgZ2FsYXh5LCBtZWFuaW5nIHRoYXQgd2hpbGUgaXQgZG9lcyBub3QgaGF2ZSBhIHdlbGwtZGVmaW5lZCBiYXItc2hhcGVkIHJlZ2lvbiBvZiBzdGFycyBhdCBpdHMgY2VudGVyIOKAlCBsaWtlIGJhcnJlZCBzcGlyYWxzIOKAlCBpdCBpcyBub3QgcXVpdGUgYW4gdW5iYXJyZWQgc3BpcmFsIGVpdGhlci4gIFRoZSBzbWFsbCBidXQgZXh0cmVtZWx5IGJyaWdodCBudWNsZXVzIG9mIE5HQyAxNTY2IGlzIGNsZWFybHkgdmlzaWJsZSBpbiB0aGlzIGltYWdlLCBhIHRlbGx0YWxlIHNpZ24gb2YgaXRzIG1lbWJlcnNoaXAgb2YgdGhlIFNleWZlcnQgY2xhc3Mgb2YgZ2FsYXhpZXMuIFRoZSBjZW50ZXJzIG9mIHN1Y2ggZ2FsYXhpZXMgYXJlIHZlcnkgYWN0aXZlIGFuZCBsdW1pbm91cywgZW1pdHRpbmcgc3Ryb25nIGJ1cnN0cyBvZiByYWRpYXRpb24gYW5kIHBvdGVudGlhbGx5IGhhcmJvcmluZyBzdXBlcm1hc3NpdmUgYmxhY2sgaG9sZXMgdGhhdCBhcmUgbWFueSBtaWxsaW9ucyBvZiB0aW1lcyB0aGUgbWFzcyBvZiB0aGUgc3VuLiAgTkdDIDE1NjYgaXMgbm90IGp1c3QgYW55IFNleWZlcnQgZ2FsYXh5OyBpdCBpcyB0aGUgc2Vjb25kIGJyaWdodGVzdCBTZXlmZXJ0IGdhbGF4eSBrbm93bi4gSXQgaXMgYWxzbyB0aGUgYnJpZ2h0ZXN0IGFuZCBtb3N0IGRvbWluYW50IG1lbWJlciBvZiB0aGUgRG9yYWRvIEdyb3VwLCBhIGxvb3NlIGNvbmNlbnRyYXRpb24gb2YgZ2FsYXhpZXMgdGhhdCB0b2dldGhlciBjb21wcmlzZSBvbmUgb2YgdGhlIHJpY2hlc3QgZ2FsYXh5IGdyb3VwcyBvZiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZS4gVGhpcyBpbWFnZSBoaWdobGlnaHRzIHRoZSBiZWF1dHkgYW5kIGF3ZS1pbnNwaXJpbmcgbmF0dXJlIG9mIHRoaXMgdW5pcXVlIGdhbGF4eSBncm91cCwgd2l0aCBOR0MgMTU2NiBnbGl0dGVyaW5nIGFuZCBnbG93aW5nLCBpdHMgYnJpZ2h0IG51Y2xldXMgZnJhbWVkIGJ5IHN3aXJsaW5nIGFuZCBzeW1tZXRyaWNhbCBsYXZlbmRlciBhcm1zLiAgVGhpcyBpbWFnZSB3YXMgdGFrZW4gYnkgSHViYmxl4oCZcyBXaWRlIEZpZWxkIENhbWVyYSAzIChXRkMzKSBpbiB0aGUgbmVhci1pbmZyYXJlZCBwYXJ0IG9mIHRoZSBzcGVjdHJ1bS4gICAgRXVyb3BlYW4gU3BhY2UgQWdlbmN5IENyZWRpdDogIEVTQS9IdWJibGUgJmFtcDsgTkFTQSwgQWNrbm93bGVkZ2VtZW50OiBGbGlja3IgdXNlciBEZXQ1OCAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyYW0uY29tL25hc2Fnb2RkYXJkP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjA1OC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjA1OH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIwNTgvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlJ3MgV2lkZSBWaWV3IG9mICdNeXN0aWMgTW91bnRhaW4nIGluIEluZnJhcmVkIl0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjA1OCIsImRhdGVfY3JlYXRlZCI6IjIwMTAtMDQtMjNUMTM6MzM6NDJaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUncyBXaWRlIFZpZXcgb2YgJ015c3RpYyBNb3VudGFpbicgaW4gSW5mcmFyZWQiLCJkZXNjcmlwdGlvbiI6Ik5BU0EgaW1hZ2UgcmVsZWFzZSBBcHJpbCAyMiwgMjAxMCAgVGhpcyBpcyBhIE5BU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBuZWFyLWluZnJhcmVkLWxpZ2h0IGltYWdlIG9mIGEgdGhyZWUtbGlnaHQteWVhci10YWxsIHBpbGxhciBvZiBnYXMgYW5kIGR1c3QgdGhhdCBpcyBiZWluZyBlYXRlbiBhd2F5IGJ5IHRoZSBicmlsbGlhbnQgbGlnaHQgZnJvbSBuZWFyYnkgc3RhcnMgaW4gdGhlIHRlbXBlc3R1b3VzIHN0ZWxsYXIgbnVyc2VyeSBjYWxsZWQgdGhlIENhcmluYSBOZWJ1bGEsIGxvY2F0ZWQgNyw1MDAgbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgc291dGhlcm4gY29uc3RlbGxhdGlvbiBDYXJpbmEuIFRoZSBpbWFnZSBtYXJrcyB0aGUgMjB0aCBhbm5pdmVyc2FyeSBvZiBIdWJibGUncyBsYXVuY2ggYW5kIGRlcGxveW1lbnQgaW50byBhbiBvcmJpdCBhcm91bmQgRWFydGguIFRoZSBpbWFnZSByZXZlYWxzIGEgcGxldGhvcmEgb2Ygc3RhcnMgYmVoaW5kIHRoZSBnYXNlb3VzIHZlaWwgb2YgdGhlIG5lYnVsYSdzIHdhbGwgb2YgaHlkcm9nZW4sIGxhY2VkIHdpdGggZHVzdC4gVGhlIGZvcmVncm91bmQgcGlsbGFyIGJlY29tZXMgc2VtaS10cmFuc3BhcmVudCBiZWNhdXNlIGluZnJhcmVkIGxpZ2h0IGZyb20gYmFja2dyb3VuZCBzdGFycyBwZW5ldHJhdGVzIHRocm91Z2ggbXVjaCBvZiB0aGUgZHVzdC4gQSBmZXcgc3RhcnMgaW5zaWRlIHRoZSBwaWxsYXIgYWxzbyBiZWNvbWUgdmlzaWJsZS4gVGhlIGZhbHNlIGNvbG9ycyBhcmUgYXNzaWduZWQgdG8gdGhyZWUgZGlmZmVyZW50IGluZnJhcmVkIHdhdmVsZW5ndGggcmFuZ2VzLiBIdWJibGUncyBXaWRlIEZpZWxkIENhbWVyYSAzIG9ic2VydmVkIHRoZSBwaWxsYXIgaW4gRmVicnVhcnkgYW5kIE1hcmNoIDIwMTAuIE9iamVjdCBOYW1lczogSEggOTAxLCBISCA5MDIgSW1hZ2UgVHlwZTogQXN0cm9ub21pY2FsICBDcmVkaXQ6IE5BU0EsIEVTQSwgYW5kIE0uIExpdmlvIGFuZCB0aGUgSHViYmxlIDIwdGggQW5uaXZlcnNhcnkgVGVhbSAoU1RTY0kpICBUbyByZWFkIGxlYXJuIG1vcmUgYWJvdXQgdGhpcyBpbWFnZSBnbyB0bzogIDxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L21pc3Npb25fcGFnZXMvaHViYmxlL3NjaWVuY2UvaHViYmxlMjB0aC1pbWcuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+d3d3Lm5hc2EuZ292L21pc3Npb25fcGFnZXMvaHViYmxlL3NjaWVuY2UvaHViYmxlMjB0aC1pbWcuLi4uPC9hPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiAgaXMgaG9tZSB0byB0aGUgbmF0aW9uJ3MgbGFyZ2VzdCBvcmdhbml6YXRpb24gb2YgY29tYmluZWQgc2NpZW50aXN0cywgZW5naW5lZXJzIGFuZCB0ZWNobm9sb2dpc3RzIHRoYXQgYnVpbGQgc3BhY2VjcmFmdCwgaW5zdHJ1bWVudHMgYW5kIG5ldyB0ZWNobm9sb2d5IHRvIHN0dWR5IHRoZSBFYXJ0aCwgdGhlIHN1biwgb3VyIHNvbGFyIHN5c3RlbSwgYW5kIHRoZSB1bml2ZXJzZS4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTgyL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTgyfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk4Mi9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUgRmVhdGhlcnMgdGhlIFBlYWNvY2siXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTgyIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNC0wOS0xOVQxNDozNDo0OVoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBGZWF0aGVycyB0aGUgUGVhY29jayIsImRlc2NyaXB0aW9uIjoiVGhpcyBwaWN0dXJlLCB0YWtlbiBieSB0aGUgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZeKAmXMgV2lkZSBGaWVsZCBQbGFuZXRhcnkgQ2FtZXJhIDIgKFdGUEMyKSwgc2hvd3MgYSBnYWxheHkga25vd24gYXMgTkdDIDY4NzIgaW4gdGhlIGNvbnN0ZWxsYXRpb24gb2YgUGF2byAoVGhlIFBlYWNvY2spLiBJdHMgdW51c3VhbCBzaGFwZSBpcyBjYXVzZWQgYnkgaXRzIGludGVyYWN0aW9ucyB3aXRoIHRoZSBzbWFsbGVyIGdhbGF4eSB0aGF0IGNhbiBiZSBzZWVuIGp1c3QgYWJvdmUgTkdDIDY4NzIsIGNhbGxlZCBJQyA0OTcwLiBUaGV5IGJvdGggbGllIHJvdWdobHkgMzAwIG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBmcm9tIEVhcnRoLiAgRnJvbSB0aXAgdG8gdGlwLCBOR0MgNjg3MiBtZWFzdXJlcyBvdmVyIDUwMCwwMDAgbGlnaHQteWVhcnMgYWNyb3NzLCBtYWtpbmcgaXQgdGhlIHNlY29uZCBsYXJnZXN0IHNwaXJhbCBnYWxheHkgZGlzY292ZXJlZCB0byBkYXRlLiBJbiB0ZXJtcyBvZiBzaXplIGl0IGlzIGJlYXRlbiBvbmx5IGJ5IE5HQyAyNjIsIGEgZ2FsYXh5IHRoYXQgbWVhc3VyZXMgYSBtaW5kLWJvZ2dsaW5nIDEuMyBtaWxsaW9uIGxpZ2h0LXllYXJzIGluIGRpYW1ldGVyISBUbyBwdXQgdGhhdCBpbnRvIHBlcnNwZWN0aXZlLCBvdXIgb3duIGdhbGF4eSwgdGhlIE1pbGt5IFdheSwgbWVhc3VyZXMgYmV0d2VlbiAxMDAsMDAwIGFuZCAxMjAsMDAwIGxpZ2h0LXllYXJzIGFjcm9zcywgbWFraW5nIE5HQyA2ODcyIGFib3V0IGZpdmUgdGltZXMgaXRzIHNpemUuICBUaGUgdXBwZXIgbGVmdCBzcGlyYWwgYXJtIG9mIE5HQyA2ODcyIGlzIHZpc2libHkgZGlzdG9ydGVkIGFuZCBpcyBwb3B1bGF0ZWQgYnkgc3Rhci1mb3JtaW5nIHJlZ2lvbnMsIHdoaWNoIGFwcGVhciBibHVlIG9uIHRoaXMgaW1hZ2UuIFRoaXMgbWF5IGhhdmUgYmVlbiBiZSBjYXVzZWQgYnkgSUMgNDk3MCByZWNlbnRseSBwYXNzaW5nIHRocm91Z2ggdGhpcyBhcm0g4oCUIGFsdGhvdWdoIGhlcmUsIHJlY2VudCBtZWFucyAxMzAgbWlsbGlvbiB5ZWFycyBhZ28hIEFzdHJvbm9tZXJzIGhhdmUgbm90ZWQgdGhhdCBOR0MgNjg3MiBzZWVtcyB0byBiZSByZWxhdGl2ZWx5IHNwYXJzZSBpbiB0ZXJtcyBvZiBmcmVlIGh5ZHJvZ2VuLCB3aGljaCBpcyB0aGUgYmFzaXMgbWF0ZXJpYWwgZm9yIG5ldyBzdGFycywgbWVhbmluZyB0aGF0IGlmIGl0IHdlcmVu4oCZdCBmb3IgaXRzIGludGVyYWN0aW9ucyB3aXRoIElDIDQ5NzAsIE5HQyA2ODcyIG1pZ2h0IG5vdCBoYXZlIGJlZW4gYWJsZSB0byBwcm9kdWNlIG5ldyBidXJzdHMgb2Ygc3RhciBmb3JtYXRpb24uICBDcmVkaXQ6IEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBIC8gQWNrbm93bGVkZ2VtZW50OiBKdWR5IFNjaG1pZHQgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2NTcvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2NTd+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjU3L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBGaW5kcyBhIExpdHRsZSBHZW0iXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjU3IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNS0wOC0wN1QxMzozMTo0M1oiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBGaW5kcyBhIExpdHRsZSBHZW0iLCJkZXNjcmlwdGlvbiI6IlRoaXMgY29sb3JmdWwgYnViYmxlIGlzIGEgcGxhbmV0YXJ5IG5lYnVsYSBjYWxsZWQgTkdDIDY4MTgsIGFsc28ga25vd24gYXMgdGhlIExpdHRsZSBHZW0gTmVidWxhLiBJdCBpcyBsb2NhdGVkIGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIFNhZ2l0dGFyaXVzIChUaGUgQXJjaGVyKSwgcm91Z2hseSA2LDAwMCBsaWdodC15ZWFycyBhd2F5IGZyb20gdXMuIFRoZSByaWNoIGdsb3cgb2YgdGhlIGNsb3VkIGlzIGp1c3Qgb3ZlciBoYWxmIGEgbGlnaHQteWVhciBhY3Jvc3Mg4oCUIGh1bW9uZ291cyBjb21wYXJlZCB0byBpdHMgdGlueSBjZW50cmFsIHN0YXIg4oCUIGJ1dCBzdGlsbCBhIGxpdHRsZSBnZW0gb24gYSBjb3NtaWMgc2NhbGUuICBXaGVuIHN0YXJzIGxpa2UgdGhlIHN1biBlbnRlciAmcXVvdDtyZXRpcmVtZW50LCZxdW90OyB0aGV5IHNoZWQgdGhlaXIgb3V0ZXIgbGF5ZXJzIGludG8gc3BhY2UgdG8gY3JlYXRlIGdsb3dpbmcgY2xvdWRzIG9mIGdhcyBjYWxsZWQgcGxhbmV0YXJ5IG5lYnVsYWUuIFRoaXMgZWplY3Rpb24gb2YgbWFzcyBpcyB1bmV2ZW4sIGFuZCBwbGFuZXRhcnkgbmVidWxhZSBjYW4gaGF2ZSB2ZXJ5IGNvbXBsZXggc2hhcGVzLiBOR0MgNjgxOCBzaG93cyBrbm90dHkgZmlsYW1lbnQtbGlrZSBzdHJ1Y3R1cmVzIGFuZCBkaXN0aW5jdCBsYXllcnMgb2YgbWF0ZXJpYWwsIHdpdGggYSBicmlnaHQgYW5kIGVuY2xvc2VkIGNlbnRyYWwgYnViYmxlIHN1cnJvdW5kZWQgYnkgYSBsYXJnZXIsIG1vcmUgZGlmZnVzZSBjbG91ZC4gIFNjaWVudGlzdHMgYmVsaWV2ZSB0aGF0IHRoZSBzdGVsbGFyIHdpbmQgZnJvbSB0aGUgY2VudHJhbCBzdGFyIHByb3BlbHMgdGhlIG91dGZsb3dpbmcgbWF0ZXJpYWwsIHNjdWxwdGluZyB0aGUgZWxvbmdhdGVkIHNoYXBlIG9mIE5HQyA2ODE4LiBBcyB0aGlzIGZhc3Qgd2luZCBzbWFzaGVzIHRocm91Z2ggdGhlIHNsb3dlci1tb3ZpbmcgY2xvdWQgaXQgY3JlYXRlcyBwYXJ0aWN1bGFybHkgYnJpZ2h0IGJsb3dvdXRzIGF0IHRoZSBidWJibGXigJlzIG91dGVyIGxheWVycy4gIEh1YmJsZSBwcmV2aW91c2x5IGltYWdlZCB0aGlzIG5lYnVsYSBiYWNrIGluIDE5OTcgd2l0aCBpdHMgV2lkZSBGaWVsZCBQbGFuZXRhcnkgQ2FtZXJhIDIsIHVzaW5nIGEgbWl4IG9mIGZpbHRlcnMgdGhhdCBoaWdobGlnaHRlZCBlbWlzc2lvbiBmcm9tIGlvbml6ZWQgb3h5Z2VuIGFuZCBoeWRyb2dlbi4gVGhpcyBpbWFnZSwgd2hpbGUgZnJvbSB0aGUgc2FtZSBjYW1lcmEsIHVzZXMgZGlmZmVyZW50IGZpbHRlcnMgdG8gcmV2ZWFsIGEgZGlmZmVyZW50IHZpZXcgb2YgdGhlIG5lYnVsYS4gICAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EsIEFja25vd2xlZGdlbWVudDogSnVkeSBTY2htaWR0ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzY3L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzY3fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDc2Ny9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJQYW50YSByaGVpIGFzIFNlZW4gYnkgSHViYmxlIl0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDc2NyIsImRhdGVfY3JlYXRlZCI6IjIwMTUtMDItMjBUMjA6MDU6NTRaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJQYW50YSByaGVpIGlzIGEgc2ltcGxpZmllZCB2ZXJzaW9uIG9mIHRoZSBmYW1vdXMgR3JlZWsgcGhpbG9zb3BoZXIgSGVyYWNsaXR1cycgdGVhY2hpbmdzLiBJdCBiYXNpY2FsbHkgbWVhbnMsIGV2ZXJ5dGhpbmcgZmxvd3MuIEFuZCBldmVyeXRoaW5nIGluIHRoZSBVbml2ZXJzZSBpcyBpbmRlZWQgY29udGludWFsbHkgb24gdGhlIG1vdmUsIHNwaXJhbGluZyBhbmQgc2hpZnRpbmcgdGhyb3VnaCBzcGFjZS4gIFNvbWUgY29zbWljIG9iamVjdHMgbW92ZSBhIGxpdHRsZSBmdXJ0aGVyIHRoYW4gb3RoZXJzIOKAlCB0YWtlIHRoZSBzdWJqZWN0IG9mIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSwgYSBnbG9idWxhciBjbHVzdGVyIG9mIHN0YXJzIGtub3duIGFzIFBhbG9tYXIgMTIuIEFsdGhvdWdoIGl0IGN1cnJlbnRseSBsaWVzIG9uIHRoZSBvdXRza2lydHMgb2YgdGhlIE1pbGt5IFdheeKAmXMgaGFsbywgUGFsb21hciAxMiB3YXMgbm90IGJvcm4gaGVyZS4gV2hlbiBhc3Ryb25vbWVycyBmaXJzdCBzdHVkaWVkIHRoaXMgY2x1c3RlciwgdGhleSB3ZXJlIHB1enpsZWQgYnkgaXRzIHN0cmFuZ2VseSB5b3VuZyBhZ2Ugd2hlbiBjb21wYXJlZCB0byB0aGUgb3RoZXIgY2x1c3RlcnMgaW4gdGhlIGdhbGF4eS4gSXQgYXBwZWFyZWQgdG8gYmUgYXJvdW5kIDMwIHBlcmNlbnQgeW91bmdlciB0aGFuIG90aGVyIE1pbGt5IFdheSBnbG9idWxhcnMuIFN1cmVseSBpZiBpdCBoYWQgYmVlbiBib3JuIHdpdGhpbiBvdXIgZ2FsYXh5LCBpdCB3b3VsZCBoYXZlIHNwcnVuZyB0byBsaWZlIGF0IGEgc2ltaWxhciB0aW1lIHRvIGl0cyBjbHVzdGVyIGNvbXBhbmlvbnM/ICBBIGJpdCBtb3JlIGRpZ2dpbmcgcmV2ZWFsZWQgdGhhdCBQYWxvbWFyIDEyIHdhcyBhY3R1YWxseSByaXBwZWQgZnJvbSBpdHMgaW5pdGlhbCBob21lLCB0aGUgU2FnaXR0YXJpdXMgRHdhcmYgRWxsaXB0aWNhbCBnYWxheHksIGFyb3VuZCAxLjcgYmlsbGlvbiB5ZWFycyBhZ28gdmlhIHRpZGFsIGludGVyYWN0aW9ucyBiZXR3ZWVuIGl0cyBmb3JtZXIgaG9tZSBhbmQgb3VyIGdhbGF4eS4gVGhlIGR3YXJmIGdhbGF4eSB0aGF0IFBhbG9tYXIgMTIgb25jZSBjYWxsZWQgaG9tZSBpcyBhIHNhdGVsbGl0ZSBnYWxheHkgdG8gb3VycywgYW5kIGNsb3NlbHkgb3JiaXRzIGFyb3VuZCB1cyDigJQgZXZlbiBvY2Nhc2lvbmFsbHkgcGFzc2luZyB0aHJvdWdoIHRoZSBwbGFuZSBvZiBvdXIgZ2FsYXh5LiBJbiBmYWN0LCBpdCBpcyBiZWluZyBzbG93bHkgdG9ybiBhcGFydCBhbmQgY29uc3VtZWQgYnkgdGhlIE1pbGt5IFdheS4gIFRoZSBzcGFya2xpbmcgc3RhcnMgaW4gdGhpcyBwaWN0dXJlIHdlcmUgaW1hZ2VkIGJ5IEh1YmJsZeKAmXMgQWR2YW5jZWQgQ2FtZXJhIGZvciBTdXJ2ZXlzLiAgQ3JlZGl0OiBFU0EvTkFTQSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+IDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyYW0uY29tL25hc2Fnb2RkYXJkP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICIsInRpdGxlIjoiUGFudGEgcmhlaSBhcyBTZWVuIGJ5IEh1YmJsZSIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5MjEvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE5MjF+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTIxL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIk5BU0EncyBIdWJibGUgWm9vbXMgaW4gb24gYSBTcGFjZSBPZGRpdHkiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTIxIiwiZGF0ZV9jcmVhdGVkIjoiMjAxMS0wMS0xMVQxODoyNzoyOVoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ik5BU0EncyBIdWJibGUgWm9vbXMgaW4gb24gYSBTcGFjZSBPZGRpdHkiLCJkZXNjcmlwdGlvbiI6Ik5BU0EgaW1hZ2UgcmVsZWFzZSBKYW51YXJ5IDEwLCAyMDExICBJbiB0aGlzIGltYWdlIGJ5IE5BU0EncyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlLCBhbiB1bnVzdWFsLCBnaG9zdGx5IGdyZWVuIGJsb2Igb2YgZ2FzIGFwcGVhcnMgdG8gZmxvYXQgbmVhciBhIG5vcm1hbC1sb29raW5nIHNwaXJhbCBnYWxheHkuICBUaGUgYml6YXJyZSBvYmplY3QsIGR1YmJlZCBIYW5ueSdzIFZvb3J3ZXJwIChIYW5ueSdzIE9iamVjdCBpbiBEdXRjaCksIGlzIHRoZSBvbmx5IHZpc2libGUgcGFydCBvZiBhIDMwMCwwMDAtbGlnaHQteWVhci1sb25nIHN0cmVhbWVyIG9mIGdhcyBzdHJldGNoaW5nIGFyb3VuZCB0aGUgZ2FsYXh5LCBjYWxsZWQgSUMgMjQ5Ny4gVGhlIGdyZWVuaXNoIFZvb3J3ZXJwIGlzIHZpc2libGUgYmVjYXVzZSBhIHNlYXJjaGxpZ2h0IGJlYW0gb2YgbGlnaHQgZnJvbSB0aGUgZ2FsYXh5J3MgY29yZSBpbGx1bWluYXRlZCBpdC4gVGhpcyBiZWFtIGNhbWUgZnJvbSBhIHF1YXNhciwgYSBicmlnaHQsIGVuZXJnZXRpYyBvYmplY3QgdGhhdCBpcyBwb3dlcmVkIGJ5IGEgYmxhY2sgaG9sZS4gVGhlIHF1YXNhciBtYXkgaGF2ZSB0dXJuZWQgb2ZmIGFib3V0IDIwMCwwMDAgeWVhcnMgYWdvLiAgVGhpcyBIdWJibGUgdmlldyB1bmNvdmVycyBhIHBvY2tldCBvZiBzdGFyIGNsdXN0ZXJzLCB0aGUgeWVsbG93aXNoLW9yYW5nZSBhcmVhIGF0IHRoZSB0aXAgb2YgSGFubnkncyBWb29yd2VycC4gVGhlIHN0YXIgY2x1c3RlcnMgYXJlIGNvbmZpbmVkIHRvIGFuIGFyZWEgdGhhdCBpcyBhIGZldyB0aG91c2FuZCBsaWdodC15ZWFycyB3aWRlLiBUaGUgeW91bmdlc3Qgc3RhcnMgYXJlIGEgY291cGxlIG9mIG1pbGxpb24geWVhcnMgb2xkLiBUaGUgVm9vcndlcnAgaXMgdGhlIHNpemUgb2Ygb3VyIE1pbGt5IFdheSBnYWxheHksIGFuZCBpdHMgYnJpZ2h0IGdyZWVuIGNvbG9yIGlzIGZyb20gZ2xvd2luZyBveHlnZW4uICBIdWJibGUgYWxzbyBzaG93cyB0aGF0IGdhcyBmbG93aW5nIGZyb20gSUMgMjQ5NyBtYXkgaGF2ZSBpbnN0aWdhdGVkIHRoZSBzdGFyIGJpcnRoIGJ5IGNvbXByZXNzaW5nIHRoZSBnYXMgaW4gSGFubnkncyBWb29yd2VycC4gVGhlIGdhbGF4eSBpcyBsb2NhdGVkIGFib3V0IDY1MCBtaWxsaW9uIGxpZ2h0LXllYXJzIGZyb20gRWFydGguICBXaGF0IGFwcGVhcnMgdG8gYmUgYSBnYXBpbmcgaG9sZSBpbiBIYW5ueSdzIFZvb3J3ZXJwIGFjdHVhbGx5IG1heSBiZSBhIHNoYWRvdyBjYXN0IGJ5IGFuIG9iamVjdCBpbiB0aGUgcXVhc2FyJ3MgbGlnaHQgcGF0aC4gVGhlIGZlYXR1cmUgZ2l2ZXMgdGhlIGlsbHVzaW9uIG9mIGEgaG9sZSBhYm91dCAyMCwwMDAgbGlnaHQteWVhcnMgd2lkZS4gSHViYmxlIHJldmVhbHMgc2hhcnAgZWRnZXMgYnV0IG5vIG90aGVyIGNoYW5nZXMgaW4gdGhlIGdhcyBhcm91bmQgdGhlIGFwcGFyZW50IG9wZW5pbmcsIHN1Z2dlc3RpbmcgdGhhdCBhbiBvYmplY3QgY2xvc2UgdG8gdGhlIHF1YXNhciBtYXkgaGF2ZSBibG9ja2VkIHNvbWUgb2YgdGhlIGxpZ2h0IGFuZCBwcm9qZWN0ZWQgYSBzaGFkb3cgb24gdGhlIFZvb3J3ZXJwLiBUaGlzIHBoZW5vbWVub24gaXMgc2ltaWxhciB0byBhIGZseSBvbiBhIG1vdmllIHByb2plY3RvciBsZW5zIGNhc3RpbmcgYSBzaGFkb3cgb24gYSBtb3ZpZSBzY3JlZW4uICBBbiBpbnRlcmFjdGlvbiBiZXR3ZWVuIElDIDI0OTcgYW5kIGFub3RoZXIgZ2FsYXh5IGFib3V0IGEgYmlsbGlvbiB5ZWFycyBhZ28gbWF5IGhhdmUgY3JlYXRlZCBIYW5ueSdzIFZvb3J3ZXJwIGFuZCBmdWVsZWQgdGhlIHF1YXNhci4gVGhlIEh1YmJsZSBpbWFnZSBzaG93cyB0aGF0IElDIDI0OTcgaGFzIGJlZW4gZGlzdHVyYmVkLCB3aXRoIGNvbXBsZXggZHVzdCBwYXRjaGVzLCB3YXJwZWQgc3BpcmFsIGFybXMsIGFuZCByZWdpb25zIG9mIHN0YXIgZm9ybWF0aW9uIGFyb3VuZCBpdHMgY29yZS4gVGhlc2UgZmVhdHVyZXMgc3VnZ2VzdCB0aGUgYWZ0ZXJtYXRoIG9mIGEgZ2FsYXh5IG1lcmdlci4gVGhlIGJyaWdodCBzcG90cyBpbiB0aGUgY2VudHJhbCBwYXJ0IG9mIHRoZSBnYWxheHkgYXJlIHN0YXItZm9ybWluZyByZWdpb25zLiBUaGUgc21hbGwsIHBpbmtpc2ggb2JqZWN0IHRvIHRoZSBsb3dlciByaWdodCBvZiBJQyAyNDk3IGlzIGFuIGVkZ2Utb24gc3BpcmFsIGdhbGF4eSBpbiB0aGUgYmFja2dyb3VuZC4gIFRoZSBpbWFnZSB3YXMgbWFkZSBieSBjb21iaW5pbmcgZGF0YSBmcm9tIHRoZSBBZHZhbmNlZCBDYW1lcmEgZm9yIFN1cnZleXMgKEFDUykgYW5kIHRoZSBXaWRlIEZpZWxkIENhbWVyYSAzIChXRkMzKS4gVGhlIEFDUyBleHBvc3VyZXMgd2VyZSB0YWtlbiBBcHJpbCAxMiwgMjAxMDsgdGhlIFdGQzMgZGF0YSwgQXByaWwgNCwgMjAxMC4gIE9iamVjdCBOYW1lczogSGFubnkncyBWb29yd2VycCwgSUMgMjQ5NyAgSW1hZ2UgVHlwZTogQXN0cm9ub21pY2FsICBDcmVkaXQ6IE5BU0EsIEVTQSwgVy4gS2VlbCAoVW5pdmVyc2l0eSBvZiBBbGFiYW1hKSwgYW5kIHRoZSBHYWxheHkgWm9vIFRlYW0gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FfR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5Kb2luIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI1Ni9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI1Nn50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAyNTYvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiQSBIdWJibGUgU2t5IEZ1bGwgb2YgU3RhcnMiLCJuYXNhIiwiaHViYmxlIiwic3BhY2UiLCJzdGFycyIsImdsb2JhbCIsImNsdXN0ZXIiLCJuZ2M0ODMzIl0sImRlc2NyaXB0aW9uIjoiU28gQ29sZHBsYXkgaXNuJ3QgdGhlIG9ubHkgb25lIHRvIHNlZSBhIHNreSBmdWxsIG9mIHN0YXJzLCB0aGVzZSBhcmUgMjJLIGxpZ2h0LXllYXJzIGF3YXkgIExvY2F0ZWQgYXBwcm94aW1hdGVseSAyMiwwMDAgbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBNdXNjYSAoVGhlIEZseSksIHRoaXMgdGlnaHRseSBwYWNrZWQgY29sbGVjdGlvbiBvZiBzdGFycyDigJQga25vd24gYXMgYSBnbG9idWxhciBjbHVzdGVyIOKAlCBnb2VzIGJ5IHRoZSBuYW1lIG9mIE5HQyA0ODMzLiBUaGlzIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaW1hZ2Ugc2hvd3MgdGhlIGRhenpsaW5nIHN0ZWxsYXIgZ3JvdXAgaW4gYWxsIGl0cyBnbG9yeS4gIE5HQyA0ODMzIGlzIG9uZSBvZiB0aGUgb3ZlciAxNTAgZ2xvYnVsYXIgY2x1c3RlcnMga25vd24gdG8gcmVzaWRlIHdpdGhpbiB0aGUgTWlsa3kgV2F5LiBUaGVzZSBvYmplY3RzIGFyZSB0aG91Z2h0IHRvIGNvbnRhaW4gc29tZSBvZiB0aGUgb2xkZXN0IHN0YXJzIGluIG91ciBnYWxheHkuIFN0dWR5aW5nIHRoZXNlIGFuY2llbnQgY29zbWljIGNsdXN0ZXJzIGNhbiBoZWxwIGFzdHJvbm9tZXJzIHRvIHVucmF2ZWwgaG93IGEgZ2FsYXh5IGZvcm1lZCBhbmQgZXZvbHZlZCwgYW5kIGdpdmUgYW4gaWRlYSBvZiB0aGUgZ2FsYXh54oCZcyBhZ2UuICBHbG9idWxhciBjbHVzdGVycyBhcmUgcmVzcG9uc2libGUgZm9yIHNvbWUgb2YgdGhlIG1vc3Qgc3RyaWtpbmcgc2lnaHRzIGluIHRoZSBjb3Ntb3MsIHdpdGggaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIHN0YXJzIGNvbmdyZWdhdGluZyBpbiB0aGUgc2FtZSByZWdpb24gb2Ygc3BhY2UuIEh1YmJsZSBoYXMgb2JzZXJ2ZWQgbWFueSBvZiB0aGVzZSBjbHVzdGVycyBkdXJpbmcgaXRzIHRpbWUgaW4gb3JiaXQgYXJvdW5kIG91ciBwbGFuZXQsIGVhY2ggYXMgYnJlYXRodGFraW5nIGFzIHRoZSBsYXN0LiAgYml0Lmx5LzJiODVwMzYgICBJbWFnZSBjcmVkaXQ6IEVTQS9IdWJibGUgYW5kIE5BU0EgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgICAgIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjU2IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6IkEgSHViYmxlIFNreSBGdWxsIG9mIFN0YXJzIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDUwNi9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDUwNn50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA1MDYvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiQSBHYWxheHkgYXQgdGhlIENlbnRlciBvZiB0aGUgSHViYmxlIFR1bmluZyBGb3JrIiwic3BhY2UiLCJuYXNhIiwiZ2FsYXh5IiwibGVudGljdWxhciIsImh1YmJsZSIsIm5hc2Fnb2RkYXJkIiwibXJrODIwIl0sInRpdGxlIjoiQSBHYWxheHkgYXQgdGhlIENlbnRlciBvZiB0aGUgSHViYmxlIFR1bmluZyBGb3JrIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNTA2IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgZ2FsYXh5IGlzIGtub3duIGFzIE1yayA4MjAgYW5kIGlzIGNsYXNzaWZpZWQgYXMgYSBsZW50aWN1bGFyIGdhbGF4eSDigJQgdHlwZSBTMCBvbiB0aGUgSHViYmxlIFR1bmluZyBGb3JrLiBUaGUgSHViYmxlIFR1bmluZyBGb3JrIGlzIHVzZWQgdG8gY2xhc3NpZnkgZ2FsYXhpZXMgYWNjb3JkaW5nIHRvIHRoZWlyIG1vcnBob2xvZ3kuIEVsbGlwdGljYWwgZ2FsYXhpZXMgbG9vayBsaWtlIHNtb290aCBibG9icyBpbiB0aGUgc2t5IGFuZCBsaWUgb24gdGhlIGhhbmRsZSBvZiB0aGUgZm9yay4gVGhleSBhcmUgYXJyYW5nZWQgYWxvbmcgdGhlIGhhbmRsZSBiYXNlZCBvbiBob3cgZWxsaXB0aWNhbCB0aGV5IGFyZSwgd2l0aCB0aGUgbW9yZSBzcGhlcmljYWwgZ2FsYXhpZXMgZnVydGhlc3QgZnJvbSB0aGUgdGluZXMgb2YgdGhlIGZvcmssIGFuZCB0aGUgbW9yZSBlZ2ctc2hhcGVkIG9uZXMgY2xvc2VzdCB0byB0aGUgZW5kIG9mIHRoZSBoYW5kbGUgd2hlcmUgaXQgZGl2aWRlcy4gVGhlIHR3byBwcm9uZ3Mgb2YgdGhlIHR1bmluZyBmb3JrIHJlcHJlc2VudCB0eXBlcyBvZiB1bmJhcnJlZCBhbmQgYmFycmVkIHNwaXJhbCBnYWxheGllcy4gIExlbnRpY3VsYXIgZ2FsYXhpZXMgbGlrZSBNcmsgODIwIGFyZSBpbiB0aGUgdHJhbnNpdGlvbiB6b25lIGJldHdlZW4gZWxsaXB0aWNhbHMgYW5kIHNwaXJhbHMgYW5kIGxpZSByaWdodCB3aGVyZSB0aGUgZm9yayBkaXZpZGVzLiBBIGNsb3NlciBsb29rIGF0IHRoZSBhcHBlYXJhbmNlIG9mIE1yayA4MjAgcmV2ZWFscyBoaW50cyBvZiBhIHNwaXJhbCBzdHJ1Y3R1cmUgZW1iZWRkZWQgaW4gYSBjaXJjdWxhciBoYWxvIG9mIHN0YXJzLiAgU3Vycm91bmRpbmcgTXJrIDgyMCBpbiB0aGlzIGltYWdlIGlzIGEgZ29vZCBzYW1wbGluZyBvZiBvdGhlciBnYWxheHkgdHlwZXMsIGNvdmVyaW5nIGFsbW9zdCBldmVyeSB0eXBlIGZvdW5kIG9uIHRoZSBIdWJibGUgVHVuaW5nIEZvcmssIGJvdGggZWxsaXB0aWNhbCBhbmQgc3BpcmFsLiBNb3N0IG9mIHRoZSBzbWVhcnMgYW5kIHNwZWNrcyBhcmUgZGlzdGFudCBnYWxheGllcywgYnV0IHRoZSBwcm9taW5lbnQgYnJpZ2h0IG9iamVjdCBhdCB0aGUgYm90dG9tIGlzIGEgZm9yZWdyb3VuZCBzdGFyIGNhbGxlZCBUWUMgNDM4Ni03ODctMS4gIENyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBIGFuZCBOLiBHb3JpbiAoU1RTY0kpLCBBY2tub3dsZWRnZW1lbnQ6IEp1ZHkgU2NobWlkdCAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICAgIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDUyOC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDUyOH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA1MjgvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNwaWVzIEJpZyBCYW5nIEZyb250aWVycyIsImJpZyIsImdhbGF4eSIsImdhbGF4aWVzIiwiYmFuZyIsImh1YmJsZSIsImh1YmJsZXNwYWNldGVsZXNjb3BlIiwiYmluZ2JhbmciLCJtYWNzajA3MTc1Mzc0NSJdLCJkZXNjcmlwdGlvbiI6Ik9ic2VydmF0aW9ucyBieSB0aGUgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBoYXZlIHRha2VuIGFkdmFudGFnZSBvZiBncmF2aXRhdGlvbmFsIGxlbnNpbmcgdG8gcmV2ZWFsIHRoZSBsYXJnZXN0IHNhbXBsZSBvZiB0aGUgZmFpbnRlc3QgYW5kIGVhcmxpZXN0IGtub3duIGdhbGF4aWVzIGluIHRoZSB1bml2ZXJzZS4gU29tZSBvZiB0aGVzZSBnYWxheGllcyBmb3JtZWQganVzdCA2MDAgbWlsbGlvbiB5ZWFycyBhZnRlciB0aGUgYmlnIGJhbmcgYW5kIGFyZSBmYWludGVyIHRoYW4gYW55IG90aGVyIGdhbGF4eSB5ZXQgdW5jb3ZlcmVkIGJ5IEh1YmJsZS4gVGhlIHRlYW0gaGFzIGRldGVybWluZWQgZm9yIHRoZSBmaXJzdCB0aW1lIHdpdGggc29tZSBjb25maWRlbmNlIHRoYXQgdGhlc2Ugc21hbGwgZ2FsYXhpZXMgd2VyZSB2aXRhbCB0byBjcmVhdGluZyB0aGUgdW5pdmVyc2UgdGhhdCB3ZSBzZWUgdG9kYXkuICBBbiBpbnRlcm5hdGlvbmFsIHRlYW0gb2YgYXN0cm9ub21lcnMsIGxlZCBieSBIYWtpbSBBdGVrIG9mIHRoZSBFY29sZSBQb2x5dGVjaG5pcXVlIEbDqWTDqXJhbGUgZGUgTGF1c2FubmUsIFN3aXR6ZXJsYW5kLCBoYXMgZGlzY292ZXJlZCBvdmVyIDI1MCB0aW55IGdhbGF4aWVzIHRoYXQgZXhpc3RlZCBvbmx5IDYwMC05MDAgbWlsbGlvbiB5ZWFycyBhZnRlciB0aGUgYmlnIGJhbmfigJQgb25lIG9mIHRoZSBsYXJnZXN0IHNhbXBsZXMgb2YgZHdhcmYgZ2FsYXhpZXMgeWV0IHRvIGJlIGRpc2NvdmVyZWQgYXQgdGhlc2UgZXBvY2hzLiBUaGUgbGlnaHQgZnJvbSB0aGVzZSBnYWxheGllcyB0b29rIG92ZXIgMTIgYmlsbGlvbiB5ZWFycyB0byByZWFjaCB0aGUgdGVsZXNjb3BlLCBhbGxvd2luZyB0aGUgYXN0cm9ub21lcnMgdG8gbG9vayBiYWNrIGluIHRpbWUgd2hlbiB0aGUgdW5pdmVyc2Ugd2FzIHN0aWxsIHZlcnkgeW91bmcuICBSZWFkIG1vcmU6IDxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2ZlYXR1cmUvZ29kZGFyZC9odWJibGUtc3BpZXMtYmlnLWJhbmctZnJvbnRpZXJzXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvZmVhdHVyZS9nb2RkYXJkL2h1YmJsZS1zcGllcy1iaWctYmFuZy1mcm9udGllcnM8L2E+ICBDcmVkaXQ6IE5BU0EvRVNBICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNTI4IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTcGllcyBCaWcgQmFuZyBGcm9udGllcnMiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTAwL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTAwfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDEwMC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJBbGllbiBhdXJvcmFlIHNwb3R0ZWQgb24gVXJhbnVzIGJ5IEh1YmJsZSIsInVyYW51cyJdLCJ0aXRsZSI6IkFsaWVuIGF1cm9yYWUgc3BvdHRlZCBvbiBVcmFudXMgYnkgSHViYmxlIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTAwIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgaXMgYSBjb21wb3NpdGUgaW1hZ2Ugb2YgVXJhbnVzIGJ5IFZveWFnZXIgMiBhbmQgdHdvIGRpZmZlcmVudCBvYnNlcnZhdGlvbnMgbWFkZSBieSBIdWJibGUg4oCUIG9uZSBmb3IgdGhlIHJpbmcgYW5kIG9uZSBmb3IgdGhlIGF1cm9yYXMuICBFdmVyIHNpbmNlIFZveWFnZXIgMiBiZWFtZWQgaG9tZSBzcGVjdGFjdWxhciBpbWFnZXMgb2YgdGhlIHBsYW5ldHMgaW4gdGhlIDE5ODBzLCBwbGFuZXQtbG92ZXJzIGhhdmUgYmVlbiBob29rZWQgb24gYXVyb3JhcyBvbiBvdGhlciBwbGFuZXRzLiBBdXJvcmFzIGFyZSBjYXVzZWQgYnkgc3RyZWFtcyBvZiBjaGFyZ2VkIHBhcnRpY2xlcyBsaWtlIGVsZWN0cm9ucyB0aGF0IGNvbWUgZnJvbSB2YXJpb3VzIG9yaWdpbnMgc3VjaCBhcyBzb2xhciB3aW5kcywgdGhlIHBsYW5ldGFyeSBpb25vc3BoZXJlLCBhbmQgbW9vbiB2b2xjYW5pc20uIFRoZXkgYmVjb21lIGNhdWdodCBpbiBwb3dlcmZ1bCBtYWduZXRpYyBmaWVsZHMgYW5kIGFyZSBjaGFubmVsZWQgaW50byB0aGUgdXBwZXIgYXRtb3NwaGVyZSwgd2hlcmUgdGhlaXIgaW50ZXJhY3Rpb25zIHdpdGggZ2FzIHBhcnRpY2xlcywgc3VjaCBhcyBveHlnZW4gb3Igbml0cm9nZW4sIHNldCBvZmYgc3BlY3RhY3VsYXIgYnVyc3RzIG9mIGxpZ2h0LiAgVGhlIGF1cm9yYXMgb24gSnVwaXRlciBhbmQgU2F0dXJuIGFyZSB3ZWxsLXN0dWRpZWQsIGJ1dCBub3QgbXVjaCBpcyBrbm93biBhYm91dCB0aGUgYXVyb3JhcyBvZiB0aGUgZ2lhbnQgaWNlIHBsYW5ldCBVcmFudXMuIEluIDIwMTEsIHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGJlY2FtZSB0aGUgZmlyc3QgRWFydGgtYmFzZWQgdGVsZXNjb3BlIHRvIHNuYXAgYW4gaW1hZ2Ugb2YgdGhlIGF1cm9yYXMgb24gVXJhbnVzLiBJbiAyMDEyIGFuZCAyMDE0IGEgdGVhbSBsZWQgYnkgYW4gYXN0cm9ub21lciBmcm9tIFBhcmlzIE9ic2VydmF0b3J5IHRvb2sgYSBzZWNvbmQgbG9vayBhdCB0aGUgYXVyb3JhcyB1c2luZyB0aGUgdWx0cmF2aW9sZXQgY2FwYWJpbGl0aWVzIG9mIHRoZSBTcGFjZSBUZWxlc2NvcGUgSW1hZ2luZyBTcGVjdHJvZ3JhcGggKFNUSVMpIGluc3RhbGxlZCBvbiBIdWJibGUuICBUaGV5IHRyYWNrZWQgdGhlIGludGVycGxhbmV0YXJ5IHNob2NrcyBjYXVzZWQgYnkgdHdvIHBvd2VyZnVsIGJ1cnN0cyBvZiBzb2xhciB3aW5kIHRyYXZlbGluZyBmcm9tIHRoZSBzdW4gdG8gVXJhbnVzLCB0aGVuIHVzZWQgSHViYmxlIHRvIGNhcHR1cmUgdGhlaXIgZWZmZWN0IG9uIFVyYW51c+KAmSBhdXJvcmFzIOKAlCBhbmQgZm91bmQgdGhlbXNlbHZlcyBvYnNlcnZpbmcgdGhlIG1vc3QgaW50ZW5zZSBhdXJvcmFzIGV2ZXIgc2VlbiBvbiB0aGUgcGxhbmV0LiBCeSB3YXRjaGluZyB0aGUgYXVyb3JhcyBvdmVyIHRpbWUsIHRoZXkgY29sbGVjdGVkIHRoZSBmaXJzdCBkaXJlY3QgZXZpZGVuY2UgdGhhdCB0aGVzZSBwb3dlcmZ1bCBzaGltbWVyaW5nIHJlZ2lvbnMgcm90YXRlIHdpdGggdGhlIHBsYW5ldC4gVGhleSBhbHNvIHJlLWRpc2NvdmVyZWQgVXJhbnVz4oCZIGxvbmctbG9zdCBtYWduZXRpYyBwb2xlcywgd2hpY2ggd2VyZSBsb3N0IHNob3J0bHkgYWZ0ZXIgdGhlaXIgZGlzY292ZXJ5IGJ5IFZveWFnZXIgMiBpbiAxOTg2IGR1ZSB0byB1bmNlcnRhaW50aWVzIGluIG1lYXN1cmVtZW50cyBhbmQgdGhlIGZlYXR1cmVsZXNzIHBsYW5ldCBzdXJmYWNlLiAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EsIEwuIExhbXkgLyBPYnNlcnZhdG9pcmUgZGUgUGFyaXMgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMTIvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwMTJ+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDEyL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSdzIEhvY2tleSBTdGljayBHYWxheHkiLCJuZ2M0NjU2Il0sImRlc2NyaXB0aW9uIjoiVGhlIHN0YXIgb2YgdGhpcyBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIGlzIGEgZ2FsYXh5IGtub3duIGFzIE5HQyA0NjU2LCBsb2NhdGVkIGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIENhbmVzIFZlbmF0aWNpIChUaGUgSHVudGluZyBEb2dzKS4gSG93ZXZlciwgaXQgYWxzbyBoYXMgYSBzb21ld2hhdCBtb3JlIGludGVyZXN0aW5nIGFuZCBpbnRyaWd1aW5nIG5hbWU6IHRoZSBIb2NrZXkgU3RpY2sgR2FsYXh5ISBUaGUgcmVhc29uIGZvciB0aGlzIGlzIGEgbGl0dGxlIHVuY2xlYXIgZnJvbSB0aGlzIHBhcnRpYWwgdmlldywgd2hpY2ggc2hvd3MgdGhlIGJyaWdodCBjZW50cmFsIHJlZ2lvbiwgYnV0IHRoZSBnYWxheHkgaXMgYWN0dWFsbHkgc2hhcGVkIGxpa2UgYW4gZWxvbmdhdGVkLCB3YXJwZWQgc3RpY2ssIHN0cmV0Y2hpbmcgb3V0IHRocm91Z2ggc3BhY2UgdW50aWwgaXQgY3VybHMgYXJvdW5kIGF0IG9uZSBlbmQgdG8gZm9ybSBhIHN0cmlraW5nIGltaXRhdGlvbiBvZiBhIGNlbGVzdGlhbCBob2NrZXkgc3RpY2suICBUaGlzIHVudXN1YWwgc2hhcGUgaXMgdGhvdWdodCB0byBiZSBkdWUgdG8gYW4gaW50ZXJhY3Rpb24gYmV0d2VlbiBOR0MgNDY1NiBhbmQgYSBjb3VwbGUgb2YgbmVhciBuZWlnaGJvcnMsIE5HQyA0NjMxIChvdGhlcndpc2Uga25vd24gYXMgVGhlIFdoYWxlIEdhbGF4eSkgYW5kIE5HQyA0NjI3IChhIHNtYWxsIGVsbGlwdGljYWwpLiBHYWxhY3RpYyBpbnRlcmFjdGlvbnMgY2FuIGNvbXBsZXRlbHkgcmVzaGFwZSBhIGNlbGVzdGlhbCBvYmplY3QsIHNoaWZ0aW5nIGFuZCB3YXJwaW5nIGl0cyBjb25zdGl0dWVudCBnYXMsIHN0YXJzLCBhbmQgZHVzdCBpbnRvIGJpemFycmUgYW5kIGJlYXV0aWZ1bCBjb25maWd1cmF0aW9ucy4gIENyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gICIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDAxMiIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUncyBIb2NrZXkgU3RpY2sgR2FsYXh5IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDY3Ny9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDY3N350aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA2NzcvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIExvb2tzIGluIG9uIGEgR2FsYWN0aWMgTnVyc2VyeSIsIm5nYzExNDAiXSwidGl0bGUiOiJIdWJibGUgTG9va3MgaW4gb24gYSBHYWxhY3RpYyBOdXJzZXJ5IiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNjc3IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgZHJhbWF0aWMgaW1hZ2Ugc2hvd3MgdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGXigJlzIHZpZXcgb2YgZHdhcmYgZ2FsYXh5IGtub3duIGFzIE5HQyAxMTQwLCB3aGljaCBsaWVzIDYwIG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBFcmlkYW51cy4gQXMgY2FuIGJlIHNlZW4gaW4gdGhpcyBpbWFnZSBOR0MgMTE0MCBoYXMgYW4gaXJyZWd1bGFyIGZvcm0sIG11Y2ggbGlrZSB0aGUgTGFyZ2UgTWFnZWxsYW5pYyBDbG91ZCDigJQgYSBzbWFsbCBnYWxheHkgdGhhdCBvcmJpdHMgdGhlIE1pbGt5IFdheS4gIFRoaXMgc21hbGwgZ2FsYXh5IGlzIHVuZGVyZ29pbmcgd2hhdCBpcyBrbm93biBhcyBhIHN0YXJidXJzdC4gRGVzcGl0ZSBiZWluZyBhbG1vc3QgdGVuIHRpbWVzIHNtYWxsZXIgdGhhbiB0aGUgTWlsa3kgV2F5IGl0IGlzIGNyZWF0aW5nIHN0YXJzIGF0IGFib3V0IHRoZSBzYW1lIHJhdGUsIHdpdGggdGhlIGVxdWl2YWxlbnQgb2Ygb25lIHN0YXIgdGhlIHNpemUgb2Ygb3VyIHN1biBiZWluZyBjcmVhdGVkIHBlciB5ZWFyLiBUaGlzIGlzIGNsZWFybHkgdmlzaWJsZSBpbiB0aGUgaW1hZ2UsIHdoaWNoIHNob3dzIHRoZSBnYWxheHkgaWxsdW1pbmF0ZWQgYnkgYnJpZ2h0LCBibHVlLXdoaXRlLCB5b3VuZyBzdGFycy4gIEdhbGF4aWVzIGxpa2UgTkdDIDExNDAg4oCUIHNtYWxsLCBzdGFyYnVyc3RpbmcgYW5kIGNvbnRhaW5pbmcgbGFyZ2UgYW1vdW50cyBvZiBwcmltb3JkaWFsIGdhcyB3aXRoIGZhciBmZXdlciBlbGVtZW50cyBoZWF2aWVyIHRoYW4gaHlkcm9nZW4gYW5kIGhlbGl1bSB0aGFuIGFyZSBwcmVzZW50IGluIG91ciBzdW4g4oCUIGFyZSBvZiBwYXJ0aWN1bGFyIGludGVyZXN0IHRvIGFzdHJvbm9tZXJzLiBUaGVpciBjb21wb3NpdGlvbiBtYWtlcyB0aGVtIHNpbWlsYXIgdG8gdGhlIGludGVuc2VseSBzdGFyLWZvcm1pbmcgZ2FsYXhpZXMgaW4gdGhlIGVhcmx5IFVuaXZlcnNlLiBBbmQgdGhlc2UgZWFybHkgVW5pdmVyc2UgZ2FsYXhpZXMgd2VyZSB0aGUgYnVpbGRpbmcgYmxvY2tzIG9mIHByZXNlbnQtZGF5IGxhcmdlIGdhbGF4aWVzIGxpa2Ugb3VyIGdhbGF4eSwgdGhlIE1pbGt5IFdheS4gQnV0LCBhcyB0aGV5IGFyZSBzbyBmYXIgYXdheSB0aGVzZSBlYXJseSBVbml2ZXJzZSBnYWxheGllcyBhcmUgaGFyZGVyIHRvIHN0dWR5IHNvIHRoZXNlIGNsb3NlciBzdGFyYnVyc3RpbmcgZ2FsYXhpZXMgYXJlIGEgZ29vZCBzdWJzdGl0dXRlIGZvciBsZWFybmluZyBtb3JlIGFib3V0IGdhbGF4eSBldm9sdXRpb24uICBUaGUgdmlnb3JvdXMgc3RhciBmb3JtYXRpb24gd2lsbCBoYXZlIGEgdmVyeSBkZXN0cnVjdGl2ZSBlZmZlY3Qgb24gdGhpcyBzbWFsbCBkd2FyZiBnYWxheHkgaW4gaXRzIGZ1dHVyZS4gV2hlbiB0aGUgbGFyZ2VyIHN0YXJzIGluIHRoZSBnYWxheHkgZGllLCBhbmQgZXhwbG9kZSBhcyBzdXBlcm5vdmFlLCBnYXMgaXMgYmxvd24gaW50byBzcGFjZSBhbmQgbWF5IGVhc2lseSBlc2NhcGUgdGhlIGdyYXZpdGF0aW9uYWwgcHVsbCBvZiB0aGUgZ2FsYXh5LiBUaGUgZWplY3Rpb24gb2YgZ2FzIGZyb20gdGhlIGdhbGF4eSBtZWFucyBpdCBpcyB0aHJvd2luZyBvdXQgaXRzIHBvdGVudGlhbCBmb3IgZnV0dXJlIHN0YXJzIGFzIHRoaXMgZ2FzIGlzIG9uZSBvZiB0aGUgYnVpbGRpbmcgYmxvY2tzIG9mIHN0YXIgZm9ybWF0aW9uLiBOR0MgMTE0MOKAmXMgc3RhcmJ1cnN0IGNhbm5vdCBsYXN0IGZvciBsb25nLiAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE1OS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE1OX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxNTkvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIE5ldHMgYSBTdWJ0bGUgU3dhcm0iLCJuZ2M0Nzg5YSJdLCJkZXNjcmlwdGlvbiI6IlRoaXMgSHViYmxlIGltYWdlIHNob3dzIE5HQyA0Nzg5QSwgYSBkd2FyZiBpcnJlZ3VsYXIgZ2FsYXh5IGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIENvbWEgQmVyZW5pY2VzLiBJdCBjZXJ0YWlubHkgbGl2ZXMgdXAgdG8gaXRzIG5hbWUg4oCUIHRoZSBzdGFycyB0aGF0IGNhbGwgdGhpcyBnYWxheHkgaG9tZSBhcmUgc21lYXJlZCBvdXQgYWNyb3NzIHRoZSBza3kgaW4gYW4gYXBwYXJlbnRseSBkaXNvcmRlcmx5IGFuZCBpcnJlZ3VsYXIganVtYmxlLCBnaXZpbmcgTkdDIDQ3ODlBIGEgZmFyIG1vcmUgc3VidGxlIGFuZCBhYnN0cmFjdCBhcHBlYXJhbmNlIHRoYW4gaXRzIGdsaXR6eSBzcGlyYWwgYW5kIGVsbGlwdGljYWwgY291c2lucy4gIFRoZXNlIHN0YXJzIG1heSBsb29rIGFzIGlmIHRoZXkgaGF2ZSBiZWVuIHJhbmRvbWx5IHNwcmlua2xlZCBvbiB0aGUgc2t5LCBidXQgdGhleSBhcmUgYWxsIGhlbGQgdG9nZXRoZXIgYnkgZ3Jhdml0eS4gVGhlIGNvbG9ycyBpbiB0aGlzIGltYWdlIGhhdmUgYmVlbiBkZWxpYmVyYXRlbHkgZXhhZ2dlcmF0ZWQgdG8gZW1waGFzaXplIHRoZSBtaXggb2YgYmx1ZSBhbmQgcmVkIHN0YXJzLiBUaGUgYmx1ZSBzdGFycyBhcmUgYnJpZ2h0LCBob3QgYW5kIG1hc3NpdmUgc3RhcnMgdGhhdCBoYXZlIGZvcm1lZCByZWxhdGl2ZWx5IHJlY2VudGx5LCB3aGVyZWFzIHRoZSByZWQgc3RhcnMgYXJlIG11Y2ggb2xkZXIuIFRoZSBwcmVzZW5jZSBvZiBib3RoIHRlbGxzIHVzIHRoYXQgc3RhcnMgaGF2ZSBiZWVuIGZvcm1pbmcgaW4gdGhpcyBnYWxheHkgdGhyb3VnaG91dCBpdHMgaGlzdG9yeS4gIEF0IGEgZGlzdGFuY2Ugb2YganVzdCBvdmVyIDE0IG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBOR0MgNDc4OUEgaXMgcmVsYXRpdmVseSBjbG9zZSB0byB1cywgYWxsb3dpbmcgdXMgdG8gc2VlIG1hbnkgb2YgdGhlIGluZGl2aWR1YWwgc3RhcnMgd2l0aGluIGl0cyBib3VuZHMuIFRoaXMgaW1hZ2UgYWxzbyByZXZlYWxzIG51bWVyb3VzIG90aGVyIGdhbGF4aWVzLCBmYXIgbW9yZSBkaXN0YW50LCB0aGF0IGFwcGVhciBhcyBmdXp6eSBzaGFwZXMgc3ByZWFkIGFjcm9zcyB0aGUgaW1hZ2UuICBJbWFnZSBDcmVkaXQ6IEVTQS9IdWJibGUgJmFtcDsgTkFTQSwgQWNrbm93bGVkZ2VtZW50czogSnVkeSBTY2htaWR0IChHZWNremlsbGEpICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxNTkiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIE5ldHMgYSBTdWJ0bGUgU3dhcm0iLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDMzL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDMzfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDQzMy9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgU3BpZXMgYSBSZWJlbCIsInNwYWNlIiwibmFzYSIsImh1YmJsZSIsIm5hc2Fnb2RkYXJkIiwibmdjNTQwOCJdLCJkZXNjcmlwdGlvbiI6Ik1vc3QgZ2FsYXhpZXMgcG9zc2VzcyBhIG1hamVzdGljIHNwaXJhbCBvciBlbGxpcHRpY2FsIHN0cnVjdHVyZS4gQWJvdXQgYSBxdWFydGVyIG9mIGdhbGF4aWVzLCB0aG91Z2gsIGRlZnkgc3VjaCBjb252ZW50aW9uYWwsIHJvdW5kZWQgYWVzdGhldGljcywgaW5zdGVhZCBzcG9ydGluZyBhIG1lc3N5LCBpbmRlZmluYWJsZSBzaGFwZS4gS25vd24gYXMgaXJyZWd1bGFyIGdhbGF4aWVzLCB0aGlzIGdyb3VwIGluY2x1ZGVzIE5HQyA1NDA4LCB0aGUgZ2FsYXh5IHRoYXQgaGFzIGJlZW4gc25hcHBlZCBoZXJlIGJ5IHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlLiAgSm9obiBIZXJzY2hlbCByZWNvcmRlZCB0aGUgZXhpc3RlbmNlIG9mIE5HQyA1NDA4IGluIEp1bmUgMTgzNC4gQXN0cm9ub21lcnMgaGFkIGxvbmcgbWlzdGFrZW4gTkdDIDU0MDggZm9yIGEgcGxhbmV0YXJ5IG5lYnVsYSwgYW4gZXhwZWxsZWQgY2xvdWQgb2YgbWF0ZXJpYWwgZnJvbSBhbiBhZ2luZyBzdGFyLiBJbnN0ZWFkLCBidWNraW5nIGxhYmVscywgTkdDIDU0MDggdHVybmVkIG91dCB0byBiZSBhbiBlbnRpcmUgZ2FsYXh5LCBsb2NhdGVkIGFib3V0IDE2IG1pbGxpb24gbGlnaHQteWVhcnMgZnJvbSBFYXJ0aCBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBDZW50YXVydXMgKFRoZSBDZW50YXVyKS4gIEluIHlldCBhbm90aGVyIHNpZ24gb2YgTkdDIDU0MDggYnJlYWtpbmcgY29udmVudGlvbiwgdGhlIGdhbGF4eSBpcyBhc3NvY2lhdGVkIHdpdGggYW4gb2JqZWN0IGtub3duIGFzIGFuIHVsdHJhbHVtaW5vdXMgWC1yYXkgc291cmNlLCBkdWJiZWQgTkdDIDU0MDggWC0xLCBvbmUgb2YgdGhlIGJlc3Qgc3R1ZGllZCBvZiBpdHMgY2xhc3MuIFRoZXNlIHJhcmUgb2JqZWN0cyBiZWFtIG91dCBwcm9kaWdpb3VzIGFtb3VudHMgb2YgZW5lcmdldGljIFgtcmF5cy4gQXN0cm9waHlzaWNpc3RzIGJlbGlldmUgdGhlc2Ugc291cmNlcyB0byBiZSBzdHJvbmcgY2FuZGlkYXRlcyBmb3IgaW50ZXJtZWRpYXRlLW1hc3MgYmxhY2sgaG9sZXMuIFRoaXMgaHlwb3RoZXRpY2FsIHR5cGUgb2YgYmxhY2sgaG9sZSBoYXMgc2lnbmlmaWNhbnRseSBsZXNzIG1hc3MgdGhhbiB0aGUgc3VwZXJtYXNzaXZlIGJsYWNrIGhvbGVzIGZvdW5kIGluIGdhbGFjdGljIGNlbnRlcnMsIHdoaWNoIGNhbiBoYXZlIGJpbGxpb25zIG9mIHRpbWVzIHRoZSBtYXNzIG9mIHRoZSBzdW4sIGJ1dCBoYXZlIGEgZ29vZCBkZWFsIG1vcmUgbWFzcyB0aGFuIHRoZSBibGFjayBob2xlcyBmb3JtZWQgd2hlbiBnaWFudCBzdGFycyBjb2xsYXBzZS4gIEltYWdlIGNyZWRpdDogRVNBL0h1YmJsZSAmYW1wOyBOQVNBLCBBY2tub3dsZWRnZW1lbnQ6IEp1ZHkgU2NobWlkdCAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICAiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA0MzMiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFNwaWVzIGEgUmViZWwiLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTEzL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxNTEzfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTUxMy9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGXigJlzIFZpZXcgb2YgYSBDaGFuZ2luZyBGYW4iLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiLCJoZWxpb3BoeXNpY3MiLCJzb2xhcnN5c3RlbWV4cGxvcmF0aW9uIiwiZ29kZGFyZGJhaHJlZmh0dHB3d3duYXNhZ292YXVkaWVuY2Vmb3JtZWRpYWZlYXR1cmVzbXBwaG90b2d1aWRlbGluZXNodG1scmVsbm9mb2xsb3duYXNhaW1hZ2V1c2Vwb2xpY3lhYmJhaHJlZmh0dHB3d3duYXNhZ292Y2VudGVyc2dvZGRhcmRob21laW5kZXhodG1scmVsbm9mb2xsb3duYXNhZ29kZGFyZHNwYWNlZmxpZ2h0Y2VudGVyYWJlbmFibGUiXSwidGl0bGUiOiJIdWJibGXigJlzIFZpZXcgb2YgYSBDaGFuZ2luZyBGYW4iLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDE1MTMiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsImRlc2NyaXB0aW9uIjoiVGhlIFVuaXZlcnNlIGlzIHJhcmVseSBzdGF0aWMsIGFsdGhvdWdoIHRoZSB0aW1lc2NhbGVzIGludm9sdmVkIGNhbiBiZSB2ZXJ5IGxvbmcuIFNpbmNlIG1vZGVybiBhc3Ryb25vbWljYWwgb2JzZXJ2YXRpb25zIGJlZ2FuIHdlIGhhdmUgYmVlbiBvYnNlcnZpbmcgdGhlIGJpcnRocGxhY2VzIG9mIG5ldyBzdGFycyBhbmQgcGxhbmV0cywgc2VhcmNoaW5nIGZvciBhbmQgc3R1ZHlpbmcgdGhlIHN1YnRsZSBjaGFuZ2VzIHRoYXQgaGVscCB1cyB0byBmaWd1cmUgb3V0IHdoYXQgaXMgaGFwcGVuaW5nIHdpdGhpbi4gIFRoZSBicmlnaHQgc3BvdCBsb2NhdGVkIGF0IHRoZSBlZGdlIG9mIHRoZSBibHVpc2ggZmFuLXNoYXBlZCBzdHJ1Y3R1cmUgaW4gdGhpcyBIdWJibGUgaW1hZ2UgaXMgYSB5b3VuZyBzdGFyIGNhbGxlZCBWKiBQViBDZXBoZWksIG9yIFBWIENlcC4gSXQgaXMgYSBmYXZvcml0ZSB0YXJnZXQgZm9yIGFtYXRldXIgYXN0cm9ub21lcnMgYmVjYXVzZSB0aGUgZmFuLXNoYXBlZCBuZWJ1bG9zaXR5LCBrbm93biBhcyBHTSAxLTI5IG9yIEd5dWxidWRhZ2hpYW7igJlzIE5lYnVsYSwgY2hhbmdlcyBvdmVyIGEgdGltZXNjYWxlIG9mIG1vbnRocy4gVGhlIGJyaWdodG5lc3Mgb2YgdGhlIHN0YXIgaGFzIGFsc28gdmFyaWVkIG92ZXIgdGltZS4gIEltYWdlcyBvZiBQViBDZXAgdGFrZW4gaW4gMTk1MiBzaG93ZWQgYSBuZWJ1bG91cyBzdHJlYWssIHNpbWlsYXIgdG8gYSBjb21ldOKAmXMgdGFpbC4gSG93ZXZlciwgdGhpcyBoYWQgdmFuaXNoZWQgd2hlbiBuZXcgaW1hZ2VzIG9mIHRoZSBzdGFyIHdlcmUgb2J0YWluZWQgc29tZSB0d2VudHktZml2ZSB5ZWFycyBsYXRlci4gSW5zdGVhZCwgdGhlIGJsdWUgZmFuLXNoYXBlZCBuZWJ1bGEgaGFkIGFwcGVhcmVkLiBUd2VudHktZml2ZSB5ZWFycyBpcyBhIHZlcnkgc2hvcnQgcGVyaW9kIG9uIGNvc21pYyB0aW1lc2NhbGVzLCBzbyBhc3Ryb25vbWVycyB0aGluayB0aGF0IHRoZSBteXN0ZXJpb3VzIHN0cmVhayBtYXkgaGF2ZSBiZWVuIGEgdGVtcG9yYXJ5IHBoZW5vbWVub24sIHN1Y2ggYXMgdGhlIHJlbW5hbnRzIG9mIGEgbWFzc2l2ZSBzdGVsbGFyIGZsYXJlIOKAlCBzaW1pbGFyIHRvIHRoZSBzb2xhciBmbGFyZXMgd2UgYXJlIHVzZWQgdG8gc2VlaW5nIGluIHRoZSBzb2xhciBzeXN0ZW0uICBBdCB0aGUgc2FtZSB0aW1lIGFzIHRoaXMgd2FzIGhhcHBlbmluZywgdGhlIHN0YXIgaXRzZWxmIHdhcyBicmlnaHRlbmluZy4gVGhpcyBwcm92aWRlZCB0aGUgbGlnaHQgdG8gaWxsdW1pbmF0ZSB0aGUgbmV3bHkgZm9ybWVkIGZhbi1zaGFwZWQgbmVidWxhLiBUaGlzIGJyaWdodGVuaW5nIG1pZ2h0IGJlIHJlbGF0ZWQgdG8gdGhlIHN0YXJ0IG9mIHRoZSBoeWRyb2dlbi1idXJuaW5nIHBoYXNlIG9mIHRoZSBzdGFyLCB3aGljaCB3b3VsZCBtZWFuIHRoYXQgaXQgd2FzIHJlYWNoaW5nIG1hdHVyaXR5LiAgUFYgQ2VwIGlzIHRob3VnaHQgdG8gYmUgc3Vycm91bmRlZCBieSBhIGRpc2Mgb2YgZ2FzIGFuZCBkdXN0LCB3aGljaCB3b3VsZCBzdG9wIGxpZ2h0IGZyb20gZXNjYXBpbmcgaW4gYWxsIGRpcmVjdGlvbnMuIFRoZSBmYW4tbGlrZSBhcHBlYXJhbmNlIGlzIHRoZXJlZm9yZSBwcm9iYWJseSBhIHJlc3VsdCBvZiBzdGFybGlnaHQgZXNjYXBpbmcgZnJvbSB0aGUgZHVzdCBkaXNjIGFuZCBwcm9qZWN0aW5nIG9udG8gdGhlIG5lYnVsYS4gIFBWIENlcCBpcyBsb2NhdGVkIGluIHRoZSBub3J0aGVybiBjb25zdGVsbGF0aW9uIG9mIENlcGhldXMgYXQgYSBkaXN0YW5jZSBvZiBvdmVyIDE2MDAgbGlnaHQteWVhcnMgZnJvbSBFYXJ0aC4gICBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kvTkFTQSBIdWJibGUgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzMyL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzMyfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDMzMi9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgVGFrZXMgTWFycyBQb3J0cmFpdCBOZWFyIENsb3NlIEFwcHJvYWNoIiwibWFycyIsIm5hc2EiLCJodWJibGUiLCJodWJibGVzcGFjZXRlbGVzY29wZSIsIm5hc2Fnb2RkYXJkIl0sInRpdGxlIjoiSHViYmxlIFRha2VzIE1hcnMgUG9ydHJhaXQgTmVhciBDbG9zZSBBcHByb2FjaCIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDMzMiIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJNYXJzIGlzIGxvb2tpbmcgbWlnaHR5IGZpbmUgaW4gdGhpcyBwb3J0cmFpdCBuYWJiZWQgYnkgdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgb24gYSBuZWFyIGNsb3NlIGFwcHJvYWNoISAgUmVhZCBtb3JlOiA8YSBocmVmPVwiaHR0cDovL2dvLm5hc2EuZ292LzFyV1lpQlRcIiByZWw9XCJub2ZvbGxvd1wiPmdvLm5hc2EuZ292LzFyV1lpQlQ8L2E+ICBUaGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpcyBtb3JlIHdlbGwga25vd24gZm9yIGl0cyBwaWN0dXJlc3F1ZSB2aWV3cyBvZiBuZWJ1bGFlIGFuZCBnYWxheGllcywgYnV0IGl0J3MgYWxzbyB1c2VmdWwgZm9yIHN0dWR5aW5nIG91ciBvd24gcGxhbmV0cywgaW5jbHVkaW5nIE1hcnMuICBIdWJibGUgaW1hZ2VkIE1hcnMgb24gTWF5IDEyLCAyMDE2IC0gdGVuIGRheXMgYmVmb3JlIE1hcnMgd291bGQgYmUgb24gdGhlIGV4YWN0IG9wcG9zaXRlIHNpZGUgb2YgdGhlIEVhcnRoIGZyb20gdGhlIFN1bi4gIEJyaWdodCwgZnJvc3R5IHBvbGFyIGNhcHMsIGFuZCBjbG91ZHMgYWJvdmUgYSB2aXZpZCwgcnVzdC1jb2xvcmVkIGxhbmRzY2FwZSByZXZlYWwgTWFycyBhcyBhIGR5bmFtaWMgc2Vhc29uYWwgcGxhbmV0IGluIHRoaXMgTkFTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIHZpZXcgdGFrZW4gb24gTWF5IDEyLCAyMDE2LCB3aGVuIE1hcnMgd2FzIDUwIG1pbGxpb24gbWlsZXMgZnJvbSBFYXJ0aC4gVGhlIEh1YmJsZSBpbWFnZSByZXZlYWxzIGRldGFpbHMgYXMgc21hbGwgYXMgMjAgdG8gMzAgbWlsZXMgYWNyb3NzLiAgVGhlIGxhcmdlLCBkYXJrIHJlZ2lvbiBhdCBmYXIgcmlnaHQgaXMgU3lydGlzIE1ham9yIFBsYW5pdGlhLCBvbmUgb2YgdGhlIGZpcnN0IGZlYXR1cmVzIGlkZW50aWZpZWQgb24gdGhlIHN1cmZhY2Ugb2YgdGhlIHBsYW5ldCBieSBzZXZlbnRlZW50aC1jZW50dXJ5IG9ic2VydmVycy4gQ2hyaXN0aWFhbiBIdXlnZW5zIHVzZWQgdGhpcyBmZWF0dXJlIHRvIG1lYXN1cmUgdGhlIHJvdGF0aW9uIHJhdGUgb2YgTWFycy4gKEEgTWFydGlhbiBkYXkgaXMgYWJvdXQgMjQgaG91cnMgYW5kIDM3IG1pbnV0ZXMuKSBUb2RheSB3ZSBrbm93IHRoYXQgU3lydGlzIE1ham9yIGlzIGFuIGFuY2llbnQsIGluYWN0aXZlIHNoaWVsZCB2b2xjYW5vLiBMYXRlLWFmdGVybm9vbiBjbG91ZHMgc3Vycm91bmQgaXRzIHN1bW1pdCBpbiB0aGlzIHZpZXcuICBBIGxhcmdlIG92YWwgZmVhdHVyZSB0byB0aGUgc291dGggb2YgU3lydGlzIE1ham9yIGlzIHRoZSBicmlnaHQgSGVsbGFzIFBsYW5pdGlhIGJhc2luLiBBYm91dCAxLDEwMCBtaWxlcyBhY3Jvc3MgYW5kIG5lYXJseSBmaXZlIG1pbGVzIGRlZXAsIGl0IHdhcyBmb3JtZWQgYWJvdXQgMy41IGJpbGxpb24geWVhcnMgYWdvIGJ5IGFuIGFzdGVyb2lkIGltcGFjdC4gIFRoZSBvcmFuZ2UgYXJlYSBpbiB0aGUgY2VudGVyIG9mIHRoZSBpbWFnZSBpcyBBcmFiaWEgVGVycmEsIGEgdmFzdCB1cGxhbmQgcmVnaW9uIGluIG5vcnRoZXJuIE1hcnMgdGhhdCBjb3ZlcnMgYWJvdXQgMiw4MDAgbWlsZXMuIFRoZSBsYW5kc2NhcGUgaXMgZGVuc2VseSBjcmF0ZXJlZCBhbmQgaGVhdmlseSBlcm9kZWQsIGluZGljYXRpbmcgdGhhdCBpdCBjb3VsZCBiZSBhbW9uZyB0aGUgb2xkZXN0IHRlcnJhaW5zIG9uIHRoZSBwbGFuZXQuIERyaWVkIHJpdmVyIGNhbnlvbnMgKHRvbyBzbWFsbCB0byBiZSBzZWVuIGhlcmUpIHdpbmQgdGhyb3VnaCB0aGUgcmVnaW9uIGFuZCBlbXB0eSBpbnRvIHRoZSBsYXJnZSBub3J0aGVybiBsb3dsYW5kcy4gIENyZWRpdDogTkFTQSwgRVNBLCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpLCBKLiBCZWxsIChBU1UpLCBhbmQgTS4gV29sZmYgKFNwYWNlIFNjaWVuY2UgSW5zdGl0dXRlKSAjbmFzYWdvZGRhcmQgI21hcnMgI2h1YmJsZSAjc3BhY2UgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgICAgIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDMzNC9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDMzNH50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzMzQvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFRha2VzIE1hcnMgUG9ydHJhaXQgTmVhciBDbG9zZSBBcHByb2FjaCIsIm1hcnMiLCJuYXNhIiwiaHViYmxlIiwiaHViYmxlc3BhY2V0ZWxlc2NvcGUiLCJuYXNhZ29kZGFyZCJdLCJkZXNjcmlwdGlvbiI6Ik1hcnMgaXMgbG9va2luZyBtaWdodHkgZmluZSBpbiB0aGlzIHBvcnRyYWl0IG5hYmJlZCBieSB0aGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBvbiBhIG5lYXIgY2xvc2UgYXBwcm9hY2ghICBSZWFkIG1vcmU6IDxhIGhyZWY9XCJodHRwOi8vZ28ubmFzYS5nb3YvMXJXWWlCVFwiIHJlbD1cIm5vZm9sbG93XCI+Z28ubmFzYS5nb3YvMXJXWWlCVDwvYT4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIG1vcmUgd2VsbCBrbm93biBmb3IgaXRzIHBpY3R1cmVzcXVlIHZpZXdzIG9mIG5lYnVsYWUgYW5kIGdhbGF4aWVzLCBidXQgaXQncyBhbHNvIHVzZWZ1bCBmb3Igc3R1ZHlpbmcgb3VyIG93biBwbGFuZXRzLCBpbmNsdWRpbmcgTWFycy4gIEh1YmJsZSBpbWFnZWQgTWFycyBvbiBNYXkgMTIsIDIwMTYgLSB0ZW4gZGF5cyBiZWZvcmUgTWFycyB3b3VsZCBiZSBvbiB0aGUgZXhhY3Qgb3Bwb3NpdGUgc2lkZSBvZiB0aGUgRWFydGggZnJvbSB0aGUgU3VuLiAgQnJpZ2h0LCBmcm9zdHkgcG9sYXIgY2FwcywgYW5kIGNsb3VkcyBhYm92ZSBhIHZpdmlkLCBydXN0LWNvbG9yZWQgbGFuZHNjYXBlIHJldmVhbCBNYXJzIGFzIGEgZHluYW1pYyBzZWFzb25hbCBwbGFuZXQgaW4gdGhpcyBOQVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgdmlldyB0YWtlbiBvbiBNYXkgMTIsIDIwMTYsIHdoZW4gTWFycyB3YXMgNTAgbWlsbGlvbiBtaWxlcyBmcm9tIEVhcnRoLiBUaGUgSHViYmxlIGltYWdlIHJldmVhbHMgZGV0YWlscyBhcyBzbWFsbCBhcyAyMCB0byAzMCBtaWxlcyBhY3Jvc3MuICBUaGUgbGFyZ2UsIGRhcmsgcmVnaW9uIGF0IGZhciByaWdodCBpcyBTeXJ0aXMgTWFqb3IgUGxhbml0aWEsIG9uZSBvZiB0aGUgZmlyc3QgZmVhdHVyZXMgaWRlbnRpZmllZCBvbiB0aGUgc3VyZmFjZSBvZiB0aGUgcGxhbmV0IGJ5IHNldmVudGVlbnRoLWNlbnR1cnkgb2JzZXJ2ZXJzLiBDaHJpc3RpYWFuIEh1eWdlbnMgdXNlZCB0aGlzIGZlYXR1cmUgdG8gbWVhc3VyZSB0aGUgcm90YXRpb24gcmF0ZSBvZiBNYXJzLiAoQSBNYXJ0aWFuIGRheSBpcyBhYm91dCAyNCBob3VycyBhbmQgMzcgbWludXRlcy4pIFRvZGF5IHdlIGtub3cgdGhhdCBTeXJ0aXMgTWFqb3IgaXMgYW4gYW5jaWVudCwgaW5hY3RpdmUgc2hpZWxkIHZvbGNhbm8uIExhdGUtYWZ0ZXJub29uIGNsb3VkcyBzdXJyb3VuZCBpdHMgc3VtbWl0IGluIHRoaXMgdmlldy4gIEEgbGFyZ2Ugb3ZhbCBmZWF0dXJlIHRvIHRoZSBzb3V0aCBvZiBTeXJ0aXMgTWFqb3IgaXMgdGhlIGJyaWdodCBIZWxsYXMgUGxhbml0aWEgYmFzaW4uIEFib3V0IDEsMTAwIG1pbGVzIGFjcm9zcyBhbmQgbmVhcmx5IGZpdmUgbWlsZXMgZGVlcCwgaXQgd2FzIGZvcm1lZCBhYm91dCAzLjUgYmlsbGlvbiB5ZWFycyBhZ28gYnkgYW4gYXN0ZXJvaWQgaW1wYWN0LiAgVGhlIG9yYW5nZSBhcmVhIGluIHRoZSBjZW50ZXIgb2YgdGhlIGltYWdlIGlzIEFyYWJpYSBUZXJyYSwgYSB2YXN0IHVwbGFuZCByZWdpb24gaW4gbm9ydGhlcm4gTWFycyB0aGF0IGNvdmVycyBhYm91dCAyLDgwMCBtaWxlcy4gVGhlIGxhbmRzY2FwZSBpcyBkZW5zZWx5IGNyYXRlcmVkIGFuZCBoZWF2aWx5IGVyb2RlZCwgaW5kaWNhdGluZyB0aGF0IGl0IGNvdWxkIGJlIGFtb25nIHRoZSBvbGRlc3QgdGVycmFpbnMgb24gdGhlIHBsYW5ldC4gRHJpZWQgcml2ZXIgY2FueW9ucyAodG9vIHNtYWxsIHRvIGJlIHNlZW4gaGVyZSkgd2luZCB0aHJvdWdoIHRoZSByZWdpb24gYW5kIGVtcHR5IGludG8gdGhlIGxhcmdlIG5vcnRoZXJuIGxvd2xhbmRzLiAgQ3JlZGl0OiBOQVNBLCBFU0EsIHRoZSBIdWJibGUgSGVyaXRhZ2UgVGVhbSAoU1RTY0kvQVVSQSksIEouIEJlbGwgKEFTVSksIGFuZCBNLiBXb2xmZiAoU3BhY2UgU2NpZW5jZSBJbnN0aXR1dGUpICNuYXNhZ29kZGFyZCAjbWFycyAjaHViYmxlICNzcGFjZSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICAgICAiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzMzQiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFRha2VzIE1hcnMgUG9ydHJhaXQgTmVhciBDbG9zZSBBcHByb2FjaCIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzMzMvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAzMzN+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzMzL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBUYWtlcyBNYXJzIFBvcnRyYWl0IE5lYXIgQ2xvc2UgQXBwcm9hY2giLCJtYXJzIiwibmFzYSIsImh1YmJsZSIsImh1YmJsZXNwYWNldGVsZXNjb3BlIiwibmFzYWdvZGRhcmQiXSwidGl0bGUiOiJIdWJibGUgVGFrZXMgTWFycyBQb3J0cmFpdCBOZWFyIENsb3NlIEFwcHJvYWNoIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMzMzIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6Ik1hcnMgaXMgbG9va2luZyBtaWdodHkgZmluZSBpbiB0aGlzIHBvcnRyYWl0IG5hYmJlZCBieSB0aGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBvbiBhIG5lYXIgY2xvc2UgYXBwcm9hY2ghICBSZWFkIG1vcmU6IDxhIGhyZWY9XCJodHRwOi8vZ28ubmFzYS5nb3YvMXJXWWlCVFwiIHJlbD1cIm5vZm9sbG93XCI+Z28ubmFzYS5nb3YvMXJXWWlCVDwvYT4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIG1vcmUgd2VsbCBrbm93biBmb3IgaXRzIHBpY3R1cmVzcXVlIHZpZXdzIG9mIG5lYnVsYWUgYW5kIGdhbGF4aWVzLCBidXQgaXQncyBhbHNvIHVzZWZ1bCBmb3Igc3R1ZHlpbmcgb3VyIG93biBwbGFuZXRzLCBpbmNsdWRpbmcgTWFycy4gIEh1YmJsZSBpbWFnZWQgTWFycyBvbiBNYXkgMTIsIDIwMTYgLSB0ZW4gZGF5cyBiZWZvcmUgTWFycyB3b3VsZCBiZSBvbiB0aGUgZXhhY3Qgb3Bwb3NpdGUgc2lkZSBvZiB0aGUgRWFydGggZnJvbSB0aGUgU3VuLiAgQnJpZ2h0LCBmcm9zdHkgcG9sYXIgY2FwcywgYW5kIGNsb3VkcyBhYm92ZSBhIHZpdmlkLCBydXN0LWNvbG9yZWQgbGFuZHNjYXBlIHJldmVhbCBNYXJzIGFzIGEgZHluYW1pYyBzZWFzb25hbCBwbGFuZXQgaW4gdGhpcyBOQVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgdmlldyB0YWtlbiBvbiBNYXkgMTIsIDIwMTYsIHdoZW4gTWFycyB3YXMgNTAgbWlsbGlvbiBtaWxlcyBmcm9tIEVhcnRoLiBUaGUgSHViYmxlIGltYWdlIHJldmVhbHMgZGV0YWlscyBhcyBzbWFsbCBhcyAyMCB0byAzMCBtaWxlcyBhY3Jvc3MuICBUaGUgbGFyZ2UsIGRhcmsgcmVnaW9uIGF0IGZhciByaWdodCBpcyBTeXJ0aXMgTWFqb3IgUGxhbml0aWEsIG9uZSBvZiB0aGUgZmlyc3QgZmVhdHVyZXMgaWRlbnRpZmllZCBvbiB0aGUgc3VyZmFjZSBvZiB0aGUgcGxhbmV0IGJ5IHNldmVudGVlbnRoLWNlbnR1cnkgb2JzZXJ2ZXJzLiBDaHJpc3RpYWFuIEh1eWdlbnMgdXNlZCB0aGlzIGZlYXR1cmUgdG8gbWVhc3VyZSB0aGUgcm90YXRpb24gcmF0ZSBvZiBNYXJzLiAoQSBNYXJ0aWFuIGRheSBpcyBhYm91dCAyNCBob3VycyBhbmQgMzcgbWludXRlcy4pIFRvZGF5IHdlIGtub3cgdGhhdCBTeXJ0aXMgTWFqb3IgaXMgYW4gYW5jaWVudCwgaW5hY3RpdmUgc2hpZWxkIHZvbGNhbm8uIExhdGUtYWZ0ZXJub29uIGNsb3VkcyBzdXJyb3VuZCBpdHMgc3VtbWl0IGluIHRoaXMgdmlldy4gIEEgbGFyZ2Ugb3ZhbCBmZWF0dXJlIHRvIHRoZSBzb3V0aCBvZiBTeXJ0aXMgTWFqb3IgaXMgdGhlIGJyaWdodCBIZWxsYXMgUGxhbml0aWEgYmFzaW4uIEFib3V0IDEsMTAwIG1pbGVzIGFjcm9zcyBhbmQgbmVhcmx5IGZpdmUgbWlsZXMgZGVlcCwgaXQgd2FzIGZvcm1lZCBhYm91dCAzLjUgYmlsbGlvbiB5ZWFycyBhZ28gYnkgYW4gYXN0ZXJvaWQgaW1wYWN0LiAgVGhlIG9yYW5nZSBhcmVhIGluIHRoZSBjZW50ZXIgb2YgdGhlIGltYWdlIGlzIEFyYWJpYSBUZXJyYSwgYSB2YXN0IHVwbGFuZCByZWdpb24gaW4gbm9ydGhlcm4gTWFycyB0aGF0IGNvdmVycyBhYm91dCAyLDgwMCBtaWxlcy4gVGhlIGxhbmRzY2FwZSBpcyBkZW5zZWx5IGNyYXRlcmVkIGFuZCBoZWF2aWx5IGVyb2RlZCwgaW5kaWNhdGluZyB0aGF0IGl0IGNvdWxkIGJlIGFtb25nIHRoZSBvbGRlc3QgdGVycmFpbnMgb24gdGhlIHBsYW5ldC4gRHJpZWQgcml2ZXIgY2FueW9ucyAodG9vIHNtYWxsIHRvIGJlIHNlZW4gaGVyZSkgd2luZCB0aHJvdWdoIHRoZSByZWdpb24gYW5kIGVtcHR5IGludG8gdGhlIGxhcmdlIG5vcnRoZXJuIGxvd2xhbmRzLiAgQ3JlZGl0OiBOQVNBLCBFU0EsIHRoZSBIdWJibGUgSGVyaXRhZ2UgVGVhbSAoU1RTY0kvQVVSQSksIEouIEJlbGwgKEFTVSksIGFuZCBNLiBXb2xmZiAoU3BhY2UgU2NpZW5jZSBJbnN0aXR1dGUpICNuYXNhZ29kZGFyZCAjbWFycyAjaHViYmxlICNzcGFjZSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyaWQubWUvbmFzYWdvZGRhcmQvP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+ICAgICAiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjc4L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjc4fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI3OC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgUmV2ZWFscyBTdGVsbGFyIEZpcmV3b3JrcyBpbiDigJhTa3lyb2NrZXTigJkgR2FsYXh5IiwibmFzYSIsImdhbGF4eSIsImh1YmJsZSIsIm5hc2Fnb2RkYXJkIl0sImRlc2NyaXB0aW9uIjoiRmlyZXdvcmtzIHNob3dzIGFyZSBub3QganVzdCBjb25maW5lZCB0byBFYXJ0aOKAmXMgc2tpZXMuIE5BU0HigJlzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgaGFzIGNhcHR1cmVkIGEgc3BlY3RhY3VsYXIgZmlyZXdvcmtzIGRpc3BsYXkgaW4gYSBzbWFsbCwgbmVhcmJ5IGdhbGF4eSwgd2hpY2ggcmVzZW1ibGVzIGEgSnVseSA0dGggc2t5cm9ja2V0LiAgQSBmaXJlc3Rvcm0gb2Ygc3RhciBiaXJ0aCBpcyBsaWdodGluZyB1cCBvbmUgZW5kIG9mIHRoZSBkaW1pbnV0aXZlIGdhbGF4eSBLaXNvIDU2MzkuIFRoZSBkd2FyZiBnYWxheHkgaXMgc2hhcGVkIGxpa2UgYSBmbGF0dGVuZWQgcGFuY2FrZSwgYnV0IGJlY2F1c2UgaXQgaXMgdGlsdGVkIGVkZ2Utb24sIGl0IHJlc2VtYmxlcyBhIHNreXJvY2tldCwgd2l0aCBhIGJyaWxsaWFudCBibGF6aW5nIGhlYWQgYW5kIGEgbG9uZywgc3Rhci1zdHVkZGVkIHRhaWwuICBLaXNvIDU2MzkgaXMgYSByYXJlLCBuZWFyYnkgZXhhbXBsZSBvZiBlbG9uZ2F0ZWQgZ2FsYXhpZXMgdGhhdCBvY2N1ciBpbiBhYnVuZGFuY2UgYXQgbGFyZ2VyIGRpc3RhbmNlcywgd2hlcmUgd2Ugb2JzZXJ2ZSB0aGUgdW5pdmVyc2UgZHVyaW5nIGVhcmxpZXIgZXBvY2hzLiBBc3Ryb25vbWVycyBzdWdnZXN0IHRoYXQgdGhlIGZyZW56aWVkIHN0YXIgYmlydGggaXMgc3BhcmtlZCBieSBpbnRlcmdhbGFjdGljIGdhcyByYWluaW5nIG9uIG9uZSBlbmQgb2YgdGhlIGdhbGF4eSBhcyBpdCBkcmlmdHMgdGhyb3VnaCBzcGFjZS4gIOKAnEkgdGhpbmsgS2lzbyA1NjM5IGlzIGEgYmVhdXRpZnVsLCB1cC1jbG9zZSBleGFtcGxlIG9mIHdoYXQgbXVzdCBoYXZlIGJlZW4gY29tbW9uIGxvbmcgYWdvLOKAnSBzYWlkIGxlYWQgcmVzZWFyY2hlciBEZWJyYSBFbG1lZ3JlZW4gb2YgVmFzc2FyIENvbGxlZ2UsIGluIFBvdWdoa2VlcHNpZSwgTmV3IFlvcmsuIOKAnFRoZSBjdXJyZW50IHRoaW5raW5nIGlzIHRoYXQgZ2FsYXhpZXMgaW4gdGhlIGVhcmx5IHVuaXZlcnNlIGdyb3cgZnJvbSBhY2NyZXRpbmcgZ2FzIGZyb20gdGhlIHN1cnJvdW5kaW5nIG5laWdoYm9yaG9vZC4gSXTigJlzIGEgc3RhZ2UgdGhhdCBnYWxheGllcywgaW5jbHVkaW5nIG91ciBNaWxreSBXYXksIG11c3QgZ28gdGhyb3VnaCBhcyB0aGV5IGFyZSBncm93aW5nIHVwLuKAnSAgT2JzZXJ2YXRpb25zIG9mIHRoZSBlYXJseSB1bml2ZXJzZSwgc3VjaCBhcyBIdWJibGXigJlzIFVsdHJhLURlZXAgRmllbGQsIHJldmVhbCB0aGF0IGFib3V0IDEwIHBlcmNlbnQgb2YgYWxsIGdhbGF4aWVzIGhhdmUgdGhlc2UgZWxvbmdhdGVkIHNoYXBlcywgYW5kIGFyZSBjb2xsZWN0aXZlbHkgY2FsbGVkIOKAnHRhZHBvbGVzLuKAnSBCdXQgc3R1ZGllcyBvZiB0aGUgbmVhcmJ5IHVuaXZlcnNlIGhhdmUgdHVybmVkIHVwIG9ubHkgYSBmZXcgb2YgdGhlc2UgdW51c3VhbCBnYWxheGllcywgaW5jbHVkaW5nIEtpc28gNTYzOS4gVGhlIGRldmVsb3BtZW50IG9mIHRoZSBuZWFyYnkgc3Rhci1tYWtpbmcgdGFkcG9sZSBnYWxheGllcywgaG93ZXZlciwgaGFzIGxhZ2dlZCBiZWhpbmQgdGhhdCBvZiB0aGVpciBwZWVycywgd2hpY2ggaGF2ZSBzcGVudCBiaWxsaW9ucyBvZiB5ZWFycyBidWlsZGluZyB0aGVtc2VsdmVzIHVwIGludG8gbWFueSBvZiB0aGUgc3BpcmFsIGdhbGF4aWVzIHNlZW4gdG9kYXkuICBFbG1lZ3JlZW4gdXNlZCBIdWJibGXigJlzIFdpZGUgRmllbGQgQ2FtZXJhIDMgdG8gY29uZHVjdCBhIGRldGFpbGVkIGltYWdpbmcgc3R1ZHkgb2YgS2lzbyA1NjM5LiBUaGUgaW1hZ2VzIGluIGRpZmZlcmVudCBmaWx0ZXJzIHJldmVhbCBpbmZvcm1hdGlvbiBhYm91dCBhbiBvYmplY3QgYnkgZGlzc2VjdGluZyBpdHMgbGlnaHQgaW50byBpdHMgY29tcG9uZW50IGNvbG9ycy4gSHViYmxl4oCZcyBjcmlzcCByZXNvbHV0aW9uIGhlbHBlZCBFbG1lZ3JlZW4gYW5kIGhlciB0ZWFtIGFuYWx5emUgdGhlIGdpYW50IHN0YXItZm9ybWluZyBjbHVtcHMgaW4gS2lzbyA1NjM5IGFuZCBkZXRlcm1pbmUgdGhlIG1hc3NlcyBhbmQgYWdlcyBvZiB0aGUgc3RhciBjbHVzdGVycy4gIFRoZSBpbnRlcm5hdGlvbmFsIHRlYW0gb2YgcmVzZWFyY2hlcnMgc2VsZWN0ZWQgS2lzbyA1NjM5IGZyb20gYSBzcGVjdHJvc2NvcGljIHN1cnZleSBvZiAxMCBuZWFyYnkgdGFkcG9sZSBnYWxheGllcywgb2JzZXJ2ZWQgd2l0aCB0aGUgR3JhbmQgQ2FuYXJ5IFRlbGVzY29wZSBpbiBMYSBQYWxtYSwgU3BhaW4sIGJ5IEpvcmdlIFNhbmNoZXogQWxtZWlkYSBhbmQgY29sbGFib3JhdG9ycyBhdCB0aGUgSW5zdGl0dXRvIGRlIEFzdHJvZmlzaWNhIGRlIENhbmFyaWFzLiBUaGUgb2JzZXJ2YXRpb25zIHJldmVhbGVkIHRoYXQgaW4gbW9zdCBvZiB0aG9zZSBnYWxheGllcywgaW5jbHVkaW5nIEtpc28gNTYzOSwgdGhlIGdhcyBjb21wb3NpdGlvbiBpcyBub3QgdW5pZm9ybS4gIFRoZSBicmlnaHQgZ2FzIGluIHRoZSBnYWxheHnigJlzIGhlYWQgY29udGFpbnMgZmV3ZXIgaGVhdmllciBlbGVtZW50cyAoY29sbGVjdGl2ZWx5IGNhbGxlZCDigJxtZXRhbHPigJ0pLCBzdWNoIGFzIGNhcmJvbiBhbmQgb3h5Z2VuLCB0aGFuIHRoZSByZXN0IG9mIHRoZSBnYWxheHkuIFN0YXJzIGNvbnNpc3QgbWFpbmx5IG9mIGh5ZHJvZ2VuIGFuZCBoZWxpdW0sIGJ1dCBjb29rIHVwIG90aGVyIOKAnGhlYXZpZXLigJ0gZWxlbWVudHMuIFdoZW4gdGhlIHN0YXJzIGRpZSwgdGhleSByZWxlYXNlIHRoZWlyIGhlYXZ5IGVsZW1lbnRzIGFuZCBlbnJpY2ggdGhlIHN1cnJvdW5kaW5nIGdhcy4gIOKAnFRoZSBtZXRhbGxpY2l0eSBzdWdnZXN0cyB0aGF0IHRoZXJlIGhhcyB0byBiZSByYXRoZXIgcHVyZSBnYXMsIGNvbXBvc2VkIG1vc3RseSBvZiBoeWRyb2dlbiwgY29taW5nIGludG8gdGhlIHN0YXItZm9ybWluZyBwYXJ0IG9mIHRoZSBnYWxheHksIGJlY2F1c2UgaW50ZXJnYWxhY3RpYyBzcGFjZSBjb250YWlucyBtb3JlIHByaXN0aW5lIGh5ZHJvZ2VuLXJpY2ggZ2FzLOKAnSBFbG1lZ3JlZW4gZXhwbGFpbmVkLiDigJxPdGhlcndpc2UsIHRoZSBzdGFyYnVyc3QgcmVnaW9uIHNob3VsZCBiZSBhcyByaWNoIGluIGhlYXZ5IGVsZW1lbnRzIGFzIHRoZSByZXN0IG9mIHRoZSBnYWxheHku4oCdICBIdWJibGUgb2ZmZXJzIGEgZGV0YWlsZWQgdmlldyBvZiB0aGUgZ2FsYXh54oCZcyBzdGFyLW1ha2luZyBmcmVuenkuIFRoZSB0ZWxlc2NvcGUgdW5jb3ZlcmVkIHNldmVyYWwgZG96ZW4gY2x1c3RlcnMgb2Ygc3RhcnMgaW4gdGhlIGdhbGF4eeKAmXMgc3Rhci1mb3JtaW5nIGhlYWQsIHdoaWNoIHNwYW5zIDIsNzAwIGxpZ2h0LXllYXJzIGFjcm9zcy4gVGhlc2UgY2x1c3RlcnMgaGF2ZSBhbiBhdmVyYWdlIGFnZSBvZiBsZXNzIHRoYW4gMSBtaWxsaW9uIHllYXJzIGFuZCBtYXNzZXMgdGhhdCBhcmUgdGhyZWUgdG8gc2l4IHRpbWVzIGxhcmdlciB0aGFuIHRob3NlIGluIHRoZSByZXN0IG9mIHRoZSBnYWxheHkuIE90aGVyIHN0YXIgZm9ybWF0aW9uIGlzIHRha2luZyBwbGFjZSB0aHJvdWdob3V0IHRoZSBnYWxheHkgYnV0IG9uIGEgbXVjaCBzbWFsbGVyIHNjYWxlLiBTdGFyIGNsdXN0ZXJzIGluIHRoZSByZXN0IG9mIHRoZSBnYWxheHkgYXJlIGJldHdlZW4gc2V2ZXJhbCBtaWxsaW9uIHRvIGEgZmV3IGJpbGxpb24geWVhcnMgb2xkLiAg4oCcVGhlcmUgaXMgbXVjaCBtb3JlIHN0YXIgZm9ybWF0aW9uIGdvaW5nIG9uIGluIHRoZSBoZWFkIHRoYW4gd2hhdCB5b3Ugd291bGQgZXhwZWN0IGluIHN1Y2ggYSB0aW55IGdhbGF4eSzigJ0gc2FpZCB0ZWFtIG1lbWJlciBCcnVjZSBFbG1lZ3JlZW4gb2YgSUJN4oCZcyBUaG9tYXMgSi4gV2F0c29u4oCZcyBSZXNlYXJjaCBDZW50ZXIsIGluIFlvcmt0b3duIEhlaWdodHMsIE5ldyBZb3JrLiDigJxBbmQgd2UgdGhpbmsgdGhlIHN0YXIgZm9ybWF0aW9uIGlzIHRyaWdnZXJlZCBieSB0aGUgb25nb2luZyBhY2NyZXRpb24gb2YgbWV0YWwtcG9vciBnYXMgb250byBhIHBhcnQgb2YgYW4gb3RoZXJ3aXNlIHF1aWVzY2VudCBkd2FyZiBnYWxheHku4oCdICBIdWJibGUgYWxzbyByZXZlYWxlZCBnaWFudCBob2xlcyBwZXBwZXJlZCB0aHJvdWdob3V0IHRoZSBnYWxheHnigJlzIHN0YXJidXJzdCBoZWFkLiBUaGVzZSBjYXZpdGllcyBnaXZlIHRoZSBnYWxheHnigJlzIGhlYWQgYSBTd2lzcy1jaGVlc2UgYXBwZWFyYW5jZSBiZWNhdXNlIG51bWVyb3VzIHN1cGVybm92YSBkZXRvbmF0aW9ucyDigJMgbGlrZSBmaXJld29yayBhZXJpYWwgYnVyc3RzIOKAkyBoYXZlIGNhcnZlZCBvdXQgaG9sZXMgb2YgcmFyaWZpZWQgc3VwZXJoZWF0ZWQgZ2FzLiAgVGhlIGdhbGF4eSwgbG9jYXRlZCA4MiBtaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXksIGhhcyB0YWtlbiBiaWxsaW9ucyBvZiB5ZWFycyB0byBkZXZlbG9wIGJlY2F1c2UgaXQgaGFzIGJlZW4gZHJpZnRpbmcgdGhyb3VnaCBhbiBpc29sYXRlZCDigJxkZXNlcnTigJ0gaW4gdGhlIHVuaXZlcnNlLCBkZXZvaWQgb2YgbXVjaCBnYXMuICBXaGF0IHRyaWdnZXJlZCB0aGUgc3RhcmJ1cnN0IGluIHN1Y2ggYSBiYWNrd2F0ZXIgZ2FsYXh5PyBCYXNlZCBvbiBzaW11bGF0aW9ucyBieSBEYW5pZWwgQ2V2ZXJpbm8gb2YgdGhlIENlbnRlciBmb3IgQXN0cm9ub215IGF0IEhlaWRlbGJlcmcgVW5pdmVyc2l0eSBpbiBHZXJtYW55LCBhbmQgb3RoZXIgdGVhbSBtZW1iZXJzLCB0aGUgb2JzZXJ2YXRpb25zIHN1Z2dlc3QgdGhhdCBsZXNzIHRoYW4gMSBtaWxsaW9uIHllYXJzIGFnbywgS2lzbyA1NjM54oCZcyBsZWFkaW5nIGVkZ2UgZW5jb3VudGVyZWQgYSBmaWxhbWVudCBvZiBnYXMuIFRoZSBmaWxhbWVudCBkcm9wcGVkIGEgbGFyZ2UgY2x1bXAgb2YgbWF0dGVyIG9udG8gdGhlIGdhbGF4eSwgc3Rva2luZyB0aGUgdmlnb3JvdXMgc3RhciBiaXJ0aC4gIERlYnJhIEVsbWVncmVlbiBleHBlY3RzIHRoYXQgaW4gdGhlIGZ1dHVyZSBvdGhlciBwYXJ0cyBvZiB0aGUgZ2FsYXh5IHdpbGwgam9pbiBpbiB0aGUgc3Rhci1tYWtpbmcgZmlyZXdvcmtzIHNob3cuIOKAnEdhbGF4aWVzIHJvdGF0ZSwgYW5kIGFzIEtpc28gNTYzOSBjb250aW51ZXMgdG8gc3BpbiwgYW5vdGhlciBwYXJ0IG9mIHRoZSBnYWxheHkgbWF5IHJlY2VpdmUgYW4gaW5mdXNpb24gb2YgbmV3IGdhcyBmcm9tIHRoaXMgZmlsYW1lbnQsIGluc3RpZ2F0aW5nIGFub3RoZXIgcm91bmQgb2Ygc3RhciBiaXJ0aCzigJ0gc2hlIHNhaWQuICBUaGUgdGVhbeKAmXMgcmVzdWx0cyBoYXZlIGJlZW4gYWNjZXB0ZWQgZm9yIHB1YmxpY2F0aW9uIGluIFRoZSBBc3Ryb3BoeXNpY2FsIEpvdXJuYWwuICBPdGhlciB0ZWFtIG1lbWJlcnMgaW5jbHVkZSBDYXNpYW5hIE11bm96LVR1bm9uIGFuZCBNZXJjZWRlcyBGaWxobyAoSW5zdGl0dXRvIGRlIEFzdHJvZsOtc2ljYSBkZSBDYW5hcmlhcywgQ2FuYXJ5IElzbGFuZHMpLCBKYWlybyBNZW5kZXotQWJyZXUgKFVuaXZlcnNpdHkgb2YgU3QuIEFuZHJld3MsIFVuaXRlZCBLaW5nZG9tKSwgSm9obiBHYWxsYWdoZXIgKFVuaXZlcnNpdHkgb2YgV2lzY29uc2luLU1hZGlzb24pLCBhbmQgTWFyYyBSYWZlbHNraSAoTkFTQSdzIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciwgR3JlZW5iZWx0LCBNYXJ5bGFuZCkuICBUaGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpcyBhIHByb2plY3Qgb2YgaW50ZXJuYXRpb25hbCBjb29wZXJhdGlvbiBiZXR3ZWVuIE5BU0EgYW5kIHRoZSBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kuIE5BU0EncyBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXIgaW4gR3JlZW5iZWx0LCBNYXJ5bGFuZCwgbWFuYWdlcyB0aGUgdGVsZXNjb3BlLiBUaGUgU3BhY2UgVGVsZXNjb3BlIFNjaWVuY2UgSW5zdGl0dXRlIChTVFNjSSkgaW4gQmFsdGltb3JlLCBNYXJ5bGFuZCwgY29uZHVjdHMgSHViYmxlIHNjaWVuY2Ugb3BlcmF0aW9ucy4gU1RTY0kgaXMgb3BlcmF0ZWQgZm9yIE5BU0EgYnkgdGhlIEFzc29jaWF0aW9uIG9mIFVuaXZlcnNpdGllcyBmb3IgUmVzZWFyY2ggaW4gQXN0cm9ub215IGluIFdhc2hpbmd0b24sIEQuQy4gIEZvciBpbWFnZXMgYW5kIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgS2lzbyA1NjM5IGFuZCBIdWJibGUsIHZpc2l0OiAgIDxhIGhyZWY9XCJodHRwOi8vaHViYmxlc2l0ZS5vcmcvbmV3cy8yMDE2LzIzXCIgcmVsPVwibm9mb2xsb3dcIj5odWJibGVzaXRlLm9yZy9uZXdzLzIwMTYvMjM8L2E+ICA8YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9odWJibGVcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5uYXNhLmdvdi9odWJibGU8L2E+ICBJbWFnZSBjcmVkaXQ6IE5BU0EsIEVTQSwgYW5kIEQuIEVsbWVncmVlbiAoVmFzc2FyIENvbGxlZ2UpICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gICAgICAiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAyNzgiLCJkYXRlX2NyZWF0ZWQiOiIyMDE3LTEyLTA4VDAwOjAwOjAwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFJldmVhbHMgU3RlbGxhciBGaXJld29ya3MgaW4g4oCYU2t5cm9ja2V04oCZIEdhbGF4eSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEwMTcvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEwMTd+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMDE3L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBSZXZpc2l0cyBhIEdsb2J1bGFyIENsdXN0ZXLigJlzIEFnZSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEwMTciLCJkYXRlX2NyZWF0ZWQiOiIyMDE0LTA4LTEzVDIwOjMwOjQwWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFJldmlzaXRzIGEgR2xvYnVsYXIgQ2x1c3RlcuKAmXMgQWdlIiwiZGVzY3JpcHRpb24iOiJUaGlzIG5ldyBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIHNob3dzIHRoZSBnbG9idWxhciBjbHVzdGVyIElDIDQ0OTkuICBHbG9idWxhciBjbHVzdGVycyBhcmUgYmlnIGJhbGxzIG9mIG9sZCBzdGFycyB0aGF0IG9yYml0IGFyb3VuZCB0aGVpciBob3N0IGdhbGF4eS4gSXQgaGFzIGxvbmcgYmVlbiBiZWxpZXZlZCB0aGF0IGFsbCB0aGUgc3RhcnMgd2l0aGluIGEgZ2xvYnVsYXIgY2x1c3RlciBmb3JtIGF0IHRoZSBhYm91dCBzYW1lIHRpbWUsIGEgcHJvcGVydHkgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBjbHVzdGVyJ3MgYWdlLiBGb3IgbW9yZSBtYXNzaXZlIGdsb2J1bGFycyBob3dldmVyLCBkZXRhaWxlZCBvYnNlcnZhdGlvbnMgaGF2ZSBzaG93biB0aGF0IHRoaXMgaXMgbm90IGVudGlyZWx5IHRydWUg4oCUIHRoZXJlIGlzIGV2aWRlbmNlIHRoYXQgdGhleSBpbnN0ZWFkIGNvbnNpc3Qgb2YgbXVsdGlwbGUgcG9wdWxhdGlvbnMgb2Ygc3RhcnMgYm9ybiBhdCBkaWZmZXJlbnQgdGltZXMuIE9uZSBvZiB0aGUgZHJpdmluZyBmb3JjZXMgYmVoaW5kIHRoaXMgYmVoYXZpb3IgaXMgdGhvdWdodCB0byBiZSBncmF2aXR5OiBtb3JlIG1hc3NpdmUgZ2xvYnVsYXJzIG1hbmFnZSB0byBncmFiIG1vcmUgZ2FzIGFuZCBkdXN0LCB3aGljaCBjYW4gdGhlbiBiZSB0cmFuc2Zvcm1lZCBpbnRvIG5ldyBzdGFycy4gIElDIDQ0OTkgaXMgYSBzb21ld2hhdCBzcGVjaWFsIGNhc2UuIEl0cyBtYXNzIGxpZXMgc29tZXdoZXJlIGJldHdlZW4gbG93LW1hc3MgZ2xvYnVsYXJzLCB3aGljaCBzaG93IGEgc2luZ2xlIGdlbmVyYXRpb24gYnVpbGQtdXAsIGFuZCB0aGUgbW9yZSBjb21wbGV4IGFuZCBtYXNzaXZlIGdsb2J1bGFycyB3aGljaCBjYW4gY29udGFpbiBtb3JlIHRoYW4gb25lIGdlbmVyYXRpb24gb2Ygc3RhcnMuIEJ5IHN0dWR5aW5nIG9iamVjdHMgbGlrZSBJQyA0NDk5IGFzdHJvbm9tZXJzIGNhbiB0aGVyZWZvcmUgZXhwbG9yZSBob3cgbWFzcyBhZmZlY3RzIGEgY2x1c3RlcidzIGNvbnRlbnRzLiBBc3Ryb25vbWVycyBmb3VuZCBubyBzaWduIG9mIG11bHRpcGxlIGdlbmVyYXRpb25zIG9mIHN0YXJzIGluIElDIDQ0OTkg4oCUIHN1cHBvcnRpbmcgdGhlIGlkZWEgdGhhdCBsZXNzIG1hc3NpdmUgY2x1c3RlcnMgaW4gZ2VuZXJhbCBvbmx5IGNvbnNpc3Qgb2YgYSBzaW5nbGUgc3RlbGxhciBnZW5lcmF0aW9uLiAgSHViYmxlIG9ic2VydmF0aW9ucyBvZiBJQyA0NDk5IGhhdmUgYWxzbyBoZWxwZWQgdG8gcGlucG9pbnQgdGhlIGNsdXN0ZXIncyBhZ2U6IG9ic2VydmF0aW9ucyBvZiB0aGlzIGNsdXN0ZXIgZnJvbSB0aGUgMTk5MHMgc3VnZ2VzdGVkIGEgcHV6emxpbmdseSB5b3VuZyBhZ2Ugd2hlbiBjb21wYXJlZCB0byBvdGhlciBnbG9idWxhciBjbHVzdGVycyB3aXRoaW4gdGhlIE1pbGt5IFdheS4gSG93ZXZlciwgc2luY2UgdGhvc2UgZmlyc3QgZXN0aW1hdGVzIG5ldyBIdWJibGUgZGF0YSBoYXZlIGJlZW4gb2J0YWluZWQgYW5kIGl0IGhhcyBiZWVuIGZvdW5kIHRvIGJlIG11Y2ggbW9yZSBsaWtlbHkgdGhhdCBJQyA0NDk5IGlzIGFjdHVhbGx5IHJvdWdobHkgdGhlIHNhbWUgYWdlIGFzIG90aGVyIE1pbGt5IFdheSBjbHVzdGVycyBhdCBhcHByb3hpbWF0ZWx5IDEyIGJpbGxpb24geWVhcnMgb2xkLiAgICAgICAgIENyZWRpdDogRVNBIGFuZCBOQVNBICAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3MjAvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3MjB+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzIwL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBPYnNlcnZlcyBPbmUtb2YtYS1LaW5kIFN0YXIgTmlja25hbWVkIOKAmE5hc3R54oCZIl0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDcyMCIsImRhdGVfY3JlYXRlZCI6IjIwMTUtMDUtMjFUMTk6MjI6NDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgT2JzZXJ2ZXMgT25lLW9mLWEtS2luZCBTdGFyIE5pY2tuYW1lZCDigJhOYXN0eeKAmSIsImRlc2NyaXB0aW9uIjoiQXN0cm9ub21lcnMgdXNpbmcgTkFTQeKAmXMgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBoYXZlIHVuY292ZXJlZCBzdXJwcmlzaW5nIG5ldyBjbHVlcyBhYm91dCBhIGhlZnR5LCByYXBpZGx5IGFnaW5nIHN0YXIgd2hvc2UgYmVoYXZpb3IgaGFzIG5ldmVyIGJlZW4gc2VlbiBiZWZvcmUgaW4gb3VyIE1pbGt5IFdheSBnYWxheHkuIEluIGZhY3QsIHRoZSBzdGFyIGlzIHNvIHdlaXJkIHRoYXQgYXN0cm9ub21lcnMgaGF2ZSBuaWNrbmFtZWQgaXQg4oCcTmFzdHkgMSzigJ0gYSBwbGF5IG9uIGl0cyBjYXRhbG9nIG5hbWUgb2YgTmFTdDEuIFRoZSBzdGFyIG1heSByZXByZXNlbnQgYSBicmllZiB0cmFuc2l0b3J5IHN0YWdlIGluIHRoZSBldm9sdXRpb24gb2YgZXh0cmVtZWx5IG1hc3NpdmUgc3RhcnMuICBGaXJzdCBkaXNjb3ZlcmVkIHNldmVyYWwgZGVjYWRlcyBhZ28sIE5hc3R5IDEgd2FzIGlkZW50aWZpZWQgYXMgYSBXb2xmLVJheWV0IHN0YXIsIGEgcmFwaWRseSBldm9sdmluZyBzdGFyIHRoYXQgaXMgbXVjaCBtb3JlIG1hc3NpdmUgdGhhbiBvdXIgc3VuLiBUaGUgc3RhciBsb3NlcyBpdHMgaHlkcm9nZW4tZmlsbGVkIG91dGVyIGxheWVycyBxdWlja2x5LCBleHBvc2luZyBpdHMgc3VwZXItaG90IGFuZCBleHRyZW1lbHkgYnJpZ2h0IGhlbGl1bS1idXJuaW5nIGNvcmUuICBCdXQgTmFzdHkgMSBkb2VzbuKAmXQgbG9vayBsaWtlIGEgdHlwaWNhbCBXb2xmLVJheWV0IHN0YXIuIFRoZSBhc3Ryb25vbWVycyB1c2luZyBIdWJibGUgaGFkIGV4cGVjdGVkIHRvIHNlZSB0d2luIGxvYmVzIG9mIGdhcyBmbG93aW5nIGZyb20gb3Bwb3NpdGUgc2lkZXMgb2YgdGhlIHN0YXIsIHBlcmhhcHMgc2ltaWxhciB0byB0aG9zZSBlbWFuYXRpbmcgZnJvbSB0aGUgbWFzc2l2ZSBzdGFyIEV0YSBDYXJpbmFlLCB3aGljaCBpcyBhIFdvbGYtUmF5ZXQgY2FuZGlkYXRlLiAgIEluc3RlYWQsIEh1YmJsZSByZXZlYWxlZCBhIHBhbmNha2Utc2hhcGVkIGRpc2sgb2YgZ2FzIGVuY2lyY2xpbmcgdGhlIHN0YXIuIFRoZSB2YXN0IGRpc2sgaXMgbmVhcmx5IDIgdHJpbGxpb24gbWlsZXMgd2lkZSwgYW5kIG1heSBoYXZlIGZvcm1lZCBmcm9tIGFuIHVuc2VlbiBjb21wYW5pb24gc3RhciB0aGF0IHNuYWNrZWQgb24gdGhlIG91dGVyIGVudmVsb3BlIG9mIHRoZSBuZXdseSBmb3JtZWQgV29sZi1SYXlldC4gIEJhc2VkIG9uIGN1cnJlbnQgZXN0aW1hdGVzLCB0aGUgbmVidWxhIHN1cnJvdW5kaW5nIHRoZSBzdGFycyBpcyBqdXN0IGEgZmV3IHRob3VzYW5kIHllYXJzIG9sZCwgYW5kIGFzIGNsb3NlIGFzIDMsMDAwIGxpZ2h0LXllYXJzIGZyb20gRWFydGguICBSZWFkIG1vcmU6IDxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2ZlYXR1cmUvaHViYmxlLW9ic2VydmVzLW9uZS1vZi1hLWtpbmQtc3Rhci1uaWNrbmFtZWQtbmFzdHlcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5uYXNhLmdvdi9mZWF0dXJlL2h1YmJsZS1vYnNlcnZlcy1vbmUtb2YtYS1raW5kLXN0YXItbi4uLjwvYT4gIENyZWRpdHM6IE5BU0EvSHViYmxlICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMDE0L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMDE0fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTAxNC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUgU2VlcyBhIFNpbHZlciBOZWVkbGUgaW4gdGhlIFNreSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEwMTQiLCJkYXRlX2NyZWF0ZWQiOiIyMDE0LTA4LTIyVDE1OjE5OjAyWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFNlZXMgYSBTaWx2ZXIgTmVlZGxlIGluIHRoZSBTa3kiLCJkZXNjcmlwdGlvbiI6IlRoaXMgc3R1bm5pbmcgbmV3IGltYWdlIGZyb20gdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgc2hvd3MgcGFydCBvZiB0aGUgc2t5IGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIENhbmVzIFZlbmF0aWNpIChUaGUgSHVudGluZyBEb2dzKS4gIEFsdGhvdWdoIHRoaXMgcmVnaW9uIG9mIHRoZSBza3kgaXMgbm90IGhvbWUgdG8gYW55IHN0ZWxsYXIgaGVhdnl3ZWlnaHRzLCBiZWluZyBtb3N0bHkgZmlsbGVkIHdpdGggc3RhcnMgb2YgYXZlcmFnZSBicmlnaHRuZXNzLCBpdCBkb2VzIGNvbnRhaW4gZml2ZSBNZXNzaWVyIG9iamVjdHMgYW5kIG51bWVyb3VzIGludHJpZ3VpbmcgZ2FsYXhpZXMg4oCUIGluY2x1ZGluZyBOR0MgNTE5NSwgYSBzbWFsbCBiYXJyZWQgc3BpcmFsIGdhbGF4eSBjb25zaWRlcmVkIHRvIGJlIG9uZSBvZiB0aGUgbW9zdCBiZWF1dGlmdWwgZ2FsYXhpZXMgdmlzaWJsZSwgYW5kIGl0cyBuZWFyYnkgaW50ZXJhY3RpbmcgcGFydG5lciB0aGUgV2hpcmxwb29sIEdhbGF4eSAoaGVpYzA1MDZhKS4gVGhlIHF1aXJreSBTdW5mbG93ZXIgR2FsYXh5IGlzIGFub3RoZXIgbm90YWJsZSBnYWxheHkgaW4gdGhpcyBjb25zdGVsbGF0aW9uLCBhbmQgaXMgb25lIG9mIHRoZSBsYXJnZXN0IGFuZCBicmlnaHRlc3QgZWRnZS1vbiBnYWxheGllcyBpbiBvdXIgc2tpZXMuICBKb2luaW5nIHRoaXMgaG9zdCBvZiBjaGFyYWN0ZXJzIGlzIHNwaXJhbCBnYWxheHkgTkdDIDQyNDQsIG5pY2tuYW1lZCB0aGUgU2lsdmVyIE5lZWRsZSBHYWxheHksIHNob3duIGluIHRoaXMgbmV3IGltYWdlIGZyb20gSHViYmxlLiBUaGlzIGdhbGF4eSBzcGFucyBzb21lIDY1LDAwMCBsaWdodC15ZWFycyBhbmQgbGllcyBhcm91bmQgMTMuNSBtaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXkuIEl0IGFwcGVhcnMgYXMgYSB3YWZlci10aGluIHN0cmVhayBhY3Jvc3MgdGhlIHNreSwgd2l0aCBsb29zZWx5IHdvdW5kIHNwaXJhbCBhcm1zIGhpZGRlbiBmcm9tIHZpZXcgYXMgd2Ugb2JzZXJ2ZSB0aGUgZ2FsYXh5IGZyb20gdGhlIHNpZGUuIEl0IGlzIHBhcnQgb2YgYSBncm91cCBvZiBnYWxheGllcyBrbm93biBhcyB0aGUgTTk0IEdyb3VwLiAgIE51bWVyb3VzIGJyaWdodCBjbHVtcHMgb2YgZ2FzIGNhbiBiZSBzZWVuIHNjYXR0ZXJlZCBhY3Jvc3MgaXRzIGxlbmd0aCwgYWxvbmcgd2l0aCBkYXJrIGR1c3QgbGFuZXMgc3Vycm91bmRpbmcgdGhlIGdhbGF4eeKAmXMgY29yZS4gTkdDIDQyNDQgYWxzbyBoYXMgYSBicmlnaHQgc3RhciBjbHVzdGVyIGF0IGl0cyBjZW50ZXIuIEFsdGhvdWdoIHdlIGNhbiBtYWtlIG91dCB0aGUgZ2FsYXh54oCZcyBicmlnaHQgY2VudHJhbCByZWdpb24gYW5kIHN0YXItc3BhdHRlcmVkIGFybXMsIHdlIGNhbm5vdCBzZWUgYW55IG1vcmUgaW50cmljYXRlIHN0cnVjdHVyZSBkdWUgdG8gdGhlIGdhbGF4eeKAmXMgcG9zaXRpb247IGZyb20gRWFydGgsIHdlIHNlZSBpdCBzdHJldGNoZWQgb3V0IGFzIGEgZmxhdHRlbmVkIHN0cmVhayBhY3Jvc3MgdGhlIHNreS4gQSBudW1iZXIgb2YgZGlmZmVyZW50IG9ic2VydmF0aW9ucyB3ZXJlIHBpZWNlZCB0b2dldGhlciB0byBmb3JtIHRoaXMgbW9zYWljLCBhbmQgZ2FwcyBpbiBIdWJibGXigJlzIGNvdmVyYWdlIGhhdmUgYmVlbiBmaWxsZWQgaW4gdXNpbmcgZ3JvdW5kLWJhc2VkIGRhdGEuIFRoZSBIdWJibGUgb2JzZXJ2YXRpb25zIHdlcmUgdGFrZW4gYXMgcGFydCBvZiB0aGUgR2FsYXh5IEhhbG9zLCBPdXRlciBkaXNrcywgU3Vic3RydWN0dXJlLCBUaGljayBkaXNrcyBhbmQgU3RhciBjbHVzdGVycyAoR0hPU1RTKSBzdXJ2ZXksIHdoaWNoIGlzIHNjYW5uaW5nIG5lYXJieSBnYWxheGllcyB0byBleHBsb3JlIGhvdyB0aGV5IGFuZCB0aGVpciBzdGFycyBmb3JtZWQgdG8gZ2V0IGEgbW9yZSBjb21wbGV0ZSB2aWV3IG9mIHRoZSBoaXN0b3J5IG9mIHRoZSBVbml2ZXJzZS4gICBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kgQ3JlZGl0OiBOQVNBICZhbXA7IEVTQSwgQWNrbm93bGVkZ2VtZW50OiBSb2Vsb2YgZGUgSm9uZyAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+IDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyYW0uY29tL25hc2Fnb2RkYXJkP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjA3Ni9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjA3Nn50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDIwNzYvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIENhcHR1cmVzIFNwZWN0YWN1bGFyIFwiTGFuZHNjYXBlXCIgaW4gdGhlIENhcmluYSBOZWJ1bGEiLCJzcGFjZSIsIm5hc2EiLCJodWJibGUiLCJodWJibGVzcGFjZXRlbGVzY29wZSIsImdvZGRhcmRzcGFjZWZsaWdodGNlbnRlciIsImh1YmJsZTIwdGhhbm5pdmVyc2FyeSIsImh1YmJsZTIweWVhcnMiXSwiZGVzY3JpcHRpb24iOiJOQVNBIGltYWdlIHJlbGVhc2UgQXByaWwgMjIsIDIwMTAgIE5BU0EncyBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGNhcHR1cmVkIHRoaXMgYmlsbG93aW5nIGNsb3VkIG9mIGNvbGQgaW50ZXJzdGVsbGFyIGdhcyBhbmQgZHVzdCByaXNpbmcgZnJvbSBhIHRlbXBlc3R1b3VzIHN0ZWxsYXIgbnVyc2VyeSBsb2NhdGVkIGluIHRoZSBDYXJpbmEgTmVidWxhLCA3LDUwMCBsaWdodC15ZWFycyBhd2F5IGluIHRoZSBzb3V0aGVybiBjb25zdGVsbGF0aW9uIENhcmluYS4gVGhpcyBwaWxsYXIgb2YgZHVzdCBhbmQgZ2FzIHNlcnZlcyBhcyBhbiBpbmN1YmF0b3IgZm9yIG5ldyBzdGFycyBhbmQgaXMgdGVlbWluZyB3aXRoIG5ldyBzdGFyLWZvcm1pbmcgYWN0aXZpdHkuIEhvdCwgeW91bmcgc3RhcnMgZXJvZGUgYW5kIHNjdWxwdCB0aGUgY2xvdWRzIGludG8gdGhpcyBmYW50YXN5IGxhbmRzY2FwZSBieSBzZW5kaW5nIG91dCB0aGljayBzdGVsbGFyIHdpbmRzIGFuZCBzY29yY2hpbmcgdWx0cmF2aW9sZXQgcmFkaWF0aW9uLiBUaGUgbG93LWRlbnNpdHkgcmVnaW9ucyBvZiB0aGUgbmVidWxhIGFyZSBzaHJlZGRlZCB3aGlsZSB0aGUgZGVuc2VyIHBhcnRzIHJlc2lzdCBlcm9zaW9uIGFuZCByZW1haW4gYXMgdGhpY2sgcGlsbGFycy4gSW4gdGhlIGRhcmssIGNvbGQgaW50ZXJpb3JzIG9mIHRoZXNlIGNvbHVtbnMgbmV3IHN0YXJzIGNvbnRpbnVlIHRvIGZvcm0uIEluIHRoZSBwcm9jZXNzIG9mIHN0YXIgZm9ybWF0aW9uLCBhIGRpc2sgYXJvdW5kIHRoZSBwcm90by1zdGFyIHNsb3dseSBhY2NyZXRlcyBvbnRvIHRoZSBzdGFyJ3Mgc3VyZmFjZS4gUGFydCBvZiB0aGUgbWF0ZXJpYWwgaXMgZWplY3RlZCBhbG9uZyBqZXRzIHBlcnBlbmRpY3VsYXIgdG8gdGhlIGFjY3JldGlvbiBkaXNrLiBUaGUgamV0cyBoYXZlIHNwZWVkcyBvZiBzZXZlcmFsIGh1bmRyZWRzIG9mIG1pbGVzIHBlciBzZWNvbmQuIEFzIHRoZXNlIGpldHMgcGxvdyBpbnRvIHRoZSBzdXJyb3VuZCBuZWJ1bGEsIHRoZXkgY3JlYXRlIHNtYWxsLCBnbG93aW5nIHBhdGNoZXMgb2YgbmVidWxvc2l0eSwgY2FsbGVkIEhlcmJpZy1IYXJvIChISCkgb2JqZWN0cy4gIExvbmcgc3RyZWFtZXJzIG9mIGdhcyBjYW4gYmUgc2VlbiBzaG9vdGluZyBpbiBvcHBvc2l0ZSBkaXJlY3Rpb25zIG9mZiB0aGUgcGVkZXN0YWwgb24gdGhlIHVwcGVyIHJpZ2h0LWhhbmQgc2lkZSBvZiB0aGUgaW1hZ2UuIEFub3RoZXIgcGFpciBvZiBqZXRzIGlzIHZpc2libGUgaW4gYSBwZWFrIG5lYXIgdGhlIHRvcC1jZW50ZXIgb2YgdGhlIGltYWdlLiBUaGVzZSBqZXRzIChrbm93biBhcyBISCA5MDEgYW5kIEhIIDkwMiwgcmVzcGVjdGl2ZWx5KSBhcmUgY29tbW9uIHNpZ25hdHVyZXMgb2YgdGhlIGJpcnRocyBvZiBuZXcgc3RhcnMuIFRoaXMgaW1hZ2UgY2VsZWJyYXRlcyB0aGUgMjB0aCBhbm5pdmVyc2FyeSBvZiBIdWJibGUncyBsYXVuY2ggYW5kIGRlcGxveW1lbnQgaW50byBhbiBvcmJpdCBhcm91bmQgRWFydGguIEh1YmJsZSdzIFdpZGUgRmllbGQgQ2FtZXJhIDMgb2JzZXJ2ZWQgdGhlIHBpbGxhciBvbiBGZWIuIDEtMiwgMjAxMC4gVGhlIGNvbG9ycyBpbiB0aGlzIGNvbXBvc2l0ZSBpbWFnZSBjb3JyZXNwb25kIHRvIHRoZSBnbG93IG9mIG94eWdlbiAoYmx1ZSksIGh5ZHJvZ2VuIGFuZCBuaXRyb2dlbiAoZ3JlZW4pLCBhbmQgc3VsZnVyIChyZWQpLiBPYmplY3QgTmFtZXM6IEhIIDkwMSwgSEggOTAyIEltYWdlIFR5cGU6IEFzdHJvbm9taWNhbCAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCBNLiBMaXZpbyBhbmQgdGhlIEh1YmJsZSAyMHRoIEFubml2ZXJzYXJ5IFRlYW0gKFNUU2NJKSAgVG8gcmVhZCBsZWFybiBtb3JlIGFib3V0IHRoaXMgaW1hZ2UgZ28gdG86ICA8YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9zY2llbmNlL2h1YmJsZTIwdGgtaW1nLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPnd3dy5uYXNhLmdvdi9taXNzaW9uX3BhZ2VzL2h1YmJsZS9zY2llbmNlL2h1YmJsZTIwdGgtaW1nLi4uLjwvYT4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gIGlzIGhvbWUgdG8gdGhlIG5hdGlvbidzIGxhcmdlc3Qgb3JnYW5pemF0aW9uIG9mIGNvbWJpbmVkIHNjaWVudGlzdHMsIGVuZ2luZWVycyBhbmQgdGVjaG5vbG9naXN0cyB0aGF0IGJ1aWxkIHNwYWNlY3JhZnQsIGluc3RydW1lbnRzIGFuZCBuZXcgdGVjaG5vbG9neSB0byBzdHVkeSB0aGUgRWFydGgsIHRoZSBzdW4sIG91ciBzb2xhciBzeXN0ZW0sIGFuZCB0aGUgdW5pdmVyc2UuIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMDc2IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBDYXB0dXJlcyBTcGVjdGFjdWxhciBcIkxhbmRzY2FwZVwiIGluIHRoZSBDYXJpbmEgTmVidWxhIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk5NS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk5NX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA5OTUvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIFNlZXMgU3BpcmFsIGluIFNlcnBlbnMiLCJzcGFjZSIsIm5hc2EiLCJnYWxheHkiLCJlc2EiLCJkYXJrbWF0dGVyIiwiaHViYmxlIiwicGdjNTQ0OTMiXSwidGl0bGUiOiJIdWJibGUgU2VlcyBTcGlyYWwgaW4gU2VycGVucyIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk5NSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGlzIG5ldyBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGltYWdlIHNob3dzIGEgYmVhdXRpZnVsIHNwaXJhbCBnYWxheHkga25vd24gYXMgUEdDIDU0NDkzLCBsb2NhdGVkIGluIHRoZSBjb25zdGVsbGF0aW9uIG9mIFNlcnBlbnMgKFRoZSBTZXJwZW50KS4gVGhpcyBnYWxheHkgaXMgcGFydCBvZiBhIGdhbGF4eSBjbHVzdGVyIHRoYXQgaGFzIGJlZW4gc3R1ZGllZCBieSBhc3Ryb25vbWVycyBleHBsb3JpbmcgYW4gaW50cmlndWluZyBwaGVub21lbm9uIGtub3duIGFzIHdlYWsgZ3Jhdml0YXRpb25hbCBsZW5zaW5nLiAgVGhpcyBlZmZlY3QsIGNhdXNlZCBieSB0aGUgdW5ldmVuIGRpc3RyaWJ1dGlvbiBvZiBtYXR0ZXIgKGluY2x1ZGluZyBkYXJrIG1hdHRlcikgdGhyb3VnaG91dCB0aGUgVW5pdmVyc2UsIGhhcyBiZWVuIGV4cGxvcmVkIHZpYSBzdXJ2ZXlzIHN1Y2ggYXMgdGhlIEh1YmJsZSBNZWRpdW0gRGVlcCBTdXJ2ZXkuIERhcmsgbWF0dGVyIGlzIG9uZSBvZiB0aGUgZ3JlYXQgbXlzdGVyaWVzIGluIGNvc21vbG9neS4gSXQgYmVoYXZlcyB2ZXJ5IGRpZmZlcmVudGx5IGZyb20gb3JkaW5hcnkgbWF0dGVyIGFzIGl0IGRvZXMgbm90IGVtaXQgb3IgYWJzb3JiIGxpZ2h0IG9yIG90aGVyIGZvcm1zIG9mIGVsZWN0cm9tYWduZXRpYyBlbmVyZ3kg4oCUIGhlbmNlIHRoZSB0ZXJtICZxdW90O2RhcmsuJnF1b3Q7ICBFdmVuIHRob3VnaCB3ZSBjYW5ub3Qgb2JzZXJ2ZSBkYXJrIG1hdHRlciBkaXJlY3RseSwgd2Uga25vdyBpdCBleGlzdHMuIE9uZSBwcm9taW5lbnQgcGllY2Ugb2YgZXZpZGVuY2UgZm9yIHRoZSBleGlzdGVuY2Ugb2YgdGhpcyBteXN0ZXJpb3VzIG1hdHRlciBpcyBrbm93biBhcyB0aGUgJnF1b3Q7Z2FsYXh5IHJvdGF0aW9uIHByb2JsZW0uJnF1b3Q7IEdhbGF4aWVzIHJvdGF0ZSBhdCBzdWNoIHNwZWVkcyBhbmQgaW4gc3VjaCBhIHdheSB0aGF0IG9yZGluYXJ5IG1hdHRlciBhbG9uZSDigJQgdGhlIHN0dWZmIHdlIHNlZSDigJQgd291bGQgbm90IGJlIGFibGUgdG8gaG9sZCB0aGVtIHRvZ2V0aGVyLiBUaGUgYW1vdW50IG9mIG1hc3MgdGhhdCBpcyAmcXVvdDttaXNzaW5nJnF1b3Q7IHZpc2libHkgaXMgZGFyayBtYXR0ZXIsIHdoaWNoIGlzIHRob3VnaHQgdG8gbWFrZSB1cCBzb21lIDI3IHBlcmNlbnQgb2YgdGhlIHRvdGFsIGNvbnRlbnRzIG9mIHRoZSBVbml2ZXJzZSwgd2l0aCBkYXJrIGVuZXJneSBhbmQgbm9ybWFsIG1hdHRlciBtYWtpbmcgdXAgdGhlIHJlc3QuIFBHQyA1NTQ5MyBoYXMgYmVlbiBzdHVkaWVkIGluIGNvbm5lY3Rpb24gd2l0aCBhbiBlZmZlY3Qga25vd24gYXMgY29zbWljIHNoZWFyaW5nLiBUaGlzIGlzIGEgd2VhayBncmF2aXRhdGlvbmFsIGxlbnNpbmcgZWZmZWN0IHRoYXQgY3JlYXRlcyB0aW55IGRpc3RvcnRpb25zIGluIGltYWdlcyBvZiBkaXN0YW50IGdhbGF4aWVzLiAgIEV1cm9wZWFuIFNwYWNlIEFnZW5jeSBFU0EvSHViYmxlICZhbXA7IE5BU0EsIEFja25vd2xlZGdlbWVudDogSnVkeSBTY2htaWR0ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMTczL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMTczfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjE3My9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgU2VlcyBTdGFycyBhbmQgYSBTdHJpcGUgaW4gQ2VsZXN0aWFsIEZpcmV3b3JrcyIsInNwYWNlIiwibmFzYSIsInRlbGVzY29wZSIsImdhbGF4eSIsImdvZGRhcmQiLCJodWJibGUiLCJodWJibGVzcGFjZXRlbGVzY29wZSIsImdvZGRhcmRzcGFjZWZsaWdodGNlbnRlciJdLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIFN0YXJzIGFuZCBhIFN0cmlwZSBpbiBDZWxlc3RpYWwgRmlyZXdvcmtzIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMTczIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlJlbGVhc2UgZGF0ZTogSnVseSAxLCAyMDA4ICBTTiAxMDA2IFN1cGVybm92YSBSZW1uYW50IChIdWJibGUpICBBIGRlbGljYXRlIHJpYmJvbiBvZiBnYXMgZmxvYXRzIGVlcmlseSBpbiBvdXIgZ2FsYXh5LiBBIGNvbnRyYWlsIGZyb20gYW4gYWxpZW4gc3BhY2VzaGlwPyBBIGpldCBmcm9tIGEgYmxhY2staG9sZT8gQWN0dWFsbHkgdGhpcyBpbWFnZSwgdGFrZW4gYnkgTkFTQSdzIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUsIGlzIGEgdmVyeSB0aGluIHNlY3Rpb24gb2YgYSBzdXBlcm5vdmEgcmVtbmFudCBjYXVzZWQgYnkgYSBzdGVsbGFyIGV4cGxvc2lvbiB0aGF0IG9jY3VycmVkIG1vcmUgdGhhbiAxLDAwMCB5ZWFycyBhZ28uICBPbiBvciBhcm91bmQgTWF5IDEsIDEwMDYgQS5ELiwgb2JzZXJ2ZXJzIGZyb20gQWZyaWNhIHRvIEV1cm9wZSB0byB0aGUgRmFyIEVhc3Qgd2l0bmVzc2VkIGFuZCByZWNvcmRlZCB0aGUgYXJyaXZhbCBvZiBsaWdodCBmcm9tIHdoYXQgaXMgbm93IGNhbGxlZCBTTiAxMDA2LCBhIHRyZW1lbmRvdXMgc3VwZXJub3ZhIGV4cGxvc2lvbiBjYXVzZWQgYnkgdGhlIGZpbmFsIGRlYXRoIHRocm9lcyBvZiBhIHdoaXRlIGR3YXJmIHN0YXIgbmVhcmx5IDcsMDAwIGxpZ2h0LXllYXJzIGF3YXkuIFRoZSBzdXBlcm5vdmEgd2FzIHByb2JhYmx5IHRoZSBicmlnaHRlc3Qgc3RhciBldmVyIHNlZW4gYnkgaHVtYW5zLCBhbmQgc3VycGFzc2VkIFZlbnVzIGFzIHRoZSBicmlnaHRlc3Qgb2JqZWN0IGluIHRoZSBuaWdodCB0aW1lIHNreSwgb25seSB0byBiZSBzdXJwYXNzZWQgYnkgdGhlIG1vb24uIEl0IHdhcyB2aXNpYmxlIGV2ZW4gZHVyaW5nIHRoZSBkYXkgZm9yIHdlZWtzLCBhbmQgcmVtYWluZWQgdmlzaWJsZSB0byB0aGUgbmFrZWQgZXllIGZvciBhdCBsZWFzdCB0d28gYW5kIGEgaGFsZiB5ZWFycyBiZWZvcmUgZmFkaW5nIGF3YXkuICBJdCB3YXNuJ3QgdW50aWwgdGhlIG1pZC0xOTYwcyB0aGF0IHJhZGlvIGFzdHJvbm9tZXJzIGZpcnN0IGRldGVjdGVkIGEgbmVhcmx5IGNpcmN1bGFyIHJpbmcgb2YgbWF0ZXJpYWwgYXQgdGhlIHJlY29yZGVkIHBvc2l0aW9uIG9mIHRoZSBzdXBlcm5vdmEuIFRoZSByaW5nIHdhcyBhbG1vc3QgMzAgYXJjbWludXRlcyBhY3Jvc3MsIHRoZSBzYW1lIGFuZ3VsYXIgZGlhbWV0ZXIgYXMgdGhlIGZ1bGwgbW9vbi4gVGhlIHNpemUgb2YgdGhlIHJlbW5hbnQgaW1wbGllZCB0aGF0IHRoZSBibGFzdCB3YXZlIGZyb20gdGhlIHN1cGVybm92YSBoYWQgZXhwYW5kZWQgYXQgbmVhcmx5IDIwIG1pbGxpb24gbWlsZXMgcGVyIGhvdXIgb3ZlciB0aGUgbmVhcmx5IDEsMDAwIHllYXJzIHNpbmNlIHRoZSBleHBsb3Npb24gb2NjdXJyZWQuIEluIDE5NzYsIHRoZSBmaXJzdCBkZXRlY3Rpb24gb2YgZXhjZWVkaW5nbHkgZmFpbnQgb3B0aWNhbCBlbWlzc2lvbiBvZiB0aGUgc3VwZXJub3ZhIHJlbW5hbnQgd2FzIHJlcG9ydGVkLCBidXQgb25seSBmb3IgYSBmaWxhbWVudCBsb2NhdGVkIG9uIHRoZSBub3J0aHdlc3QgZWRnZSBvZiB0aGUgcmFkaW8gcmluZy4gQSB0aW55IHBvcnRpb24gb2YgdGhpcyBmaWxhbWVudCBpcyByZXZlYWxlZCBpbiBkZXRhaWwgYnkgdGhlIEh1YmJsZSBvYnNlcnZhdGlvbi4gVGhlIHR3aXN0aW5nIHJpYmJvbiBvZiBsaWdodCBzZWVuIGJ5IEh1YmJsZSBjb3JyZXNwb25kcyB0byBsb2NhdGlvbnMgd2hlcmUgdGhlIGV4cGFuZGluZyBibGFzdCB3YXZlIGZyb20gdGhlIHN1cGVybm92YSBpcyBub3cgc3dlZXBpbmcgaW50byB2ZXJ5IHRlbnVvdXMgc3Vycm91bmRpbmcgZ2FzLiAgVGhlIGh5ZHJvZ2VuIGdhcyBoZWF0ZWQgYnkgdGhpcyBmYXN0IHNob2NrIHdhdmUgZW1pdHMgcmFkaWF0aW9uIGluIHZpc2libGUgbGlnaHQuIEhlbmNlLCB0aGUgb3B0aWNhbCBlbWlzc2lvbiBwcm92aWRlcyBhc3Ryb25vbWVycyB3aXRoIGEgZGV0YWlsZWQgJnF1b3Q7c25hcHNob3QmcXVvdDsgb2YgdGhlIGFjdHVhbCBwb3NpdGlvbiBhbmQgZ2VvbWV0cnkgb2YgdGhlIHNob2NrIGZyb250IGF0IGFueSBnaXZlbiB0aW1lLiBCcmlnaHQgZWRnZXMgd2l0aGluIHRoZSByaWJib24gY29ycmVzcG9uZCB0byBwbGFjZXMgd2hlcmUgdGhlIHNob2NrIHdhdmUgaXMgc2VlbiBleGFjdGx5IGVkZ2Ugb24gdG8gb3VyIGxpbmUgb2Ygc2lnaHQuIFRvZGF5IHdlIGtub3cgdGhhdCBTTiAxMDA2IGhhcyBhIGRpYW1ldGVyIG9mIG5lYXJseSA2MCBsaWdodC15ZWFycywgYW5kIGl0IGlzIHN0aWxsIGV4cGFuZGluZyBhdCByb3VnaGx5IDYgbWlsbGlvbiBtaWxlcyBwZXIgaG91ci4gRXZlbiBhdCB0aGlzIHRyZW1lbmRvdXMgc3BlZWQsIGhvd2V2ZXIsIGl0IHRha2VzIG9ic2VydmF0aW9ucyB0eXBpY2FsbHkgc2VwYXJhdGVkIGJ5IHllYXJzIHRvIHNlZSBzaWduaWZpY2FudCBvdXR3YXJkIG1vdGlvbiBvZiB0aGUgc2hvY2sgd2F2ZSBhZ2FpbnN0IHRoZSBncmlkIG9mIGJhY2tncm91bmQgc3RhcnMuIEluIHRoZSBIdWJibGUgaW1hZ2UgYXMgZGlzcGxheWVkLCB0aGUgc3VwZXJub3ZhIHdvdWxkIGhhdmUgb2NjdXJyZWQgZmFyIG9mZiB0aGUgbG93ZXIgcmlnaHQgY29ybmVyIG9mIHRoZSBpbWFnZSwgYW5kIHRoZSBtb3Rpb24gd291bGQgYmUgdG93YXJkIHRoZSB1cHBlciBsZWZ0LiAgU04gMTAwNiByZXNpZGVzIHdpdGhpbiBvdXIgTWlsa3kgV2F5IEdhbGF4eS4gTG9jYXRlZCBtb3JlIHRoYW4gMTQgZGVncmVlcyBvZmYgdGhlIHBsYW5lIG9mIHRoZSBnYWxheHkncyBkaXNrLCB0aGVyZSBpcyByZWxhdGl2ZWx5IGxpdHRsZSBjb25mdXNpb24gd2l0aCBvdGhlciBmb3JlZ3JvdW5kIGFuZCBiYWNrZ3JvdW5kIG9iamVjdHMgaW4gdGhlIGZpZWxkIHdoZW4gdHJ5aW5nIHRvIHN0dWR5IHRoaXMgb2JqZWN0LiBJbiB0aGUgSHViYmxlIGltYWdlLCBtYW55IGJhY2tncm91bmQgZ2FsYXhpZXMgKG9yYW5nZSBleHRlbmRlZCBvYmplY3RzKSBmYXIgb2ZmIGluIHRoZSBkaXN0YW50IHVuaXZlcnNlIGNhbiBiZSBzZWVuIGRvdHRpbmcgdGhlIGltYWdlLiBNb3N0IG9mIHRoZSB3aGl0ZSBkb3RzIGFyZSBmb3JlZ3JvdW5kIG9yIGJhY2tncm91bmQgc3RhcnMgaW4gb3VyIE1pbGt5IFdheSBnYWxheHkuICBUaGlzIGltYWdlIGlzIGEgY29tcG9zaXRlIG9mIGh5ZHJvZ2VuLWxpZ2h0IG9ic2VydmF0aW9ucyB0YWtlbiB3aXRoIEh1YmJsZSdzIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cyBpbiBGZWJydWFyeSAyMDA2IGFuZCBXaWRlIEZpZWxkIFBsYW5ldGFyeSBDYW1lcmEgMiBvYnNlcnZhdGlvbnMgaW4gYmx1ZSwgeWVsbG93LWdyZWVuLCBhbmQgbmVhci1pbmZyYXJlZCBsaWdodCB0YWtlbiBpbiBBcHJpbCAyMDA4LiBUaGUgc3VwZXJub3ZhIHJlbW5hbnQsIHZpc2libGUgb25seSBpbiB0aGUgaHlkcm9nZW4tbGlnaHQgZmlsdGVyIHdhcyBhc3NpZ25lZCBhIHJlZCBodWUgaW4gdGhlIEhlcml0YWdlIGNvbG9yIGltYWdlLiAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpIEFja25vd2xlZGdtZW50OiBXLiBCbGFpciAoSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5KSAgVG8gbGVhcm4gbW9yZSBhYm91dCB0aGUgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBnbyBoZXJlOiAgPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvbWFpbi9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvbWFpbi9pbmRleC5odG1sPC9hPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gIDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gIDxiPkZpbmQgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly9pbnN0YWdyYW0uY29tL25hc2Fnb2RkYXJkP3ZtPWdyaWRcIiByZWw9XCJub2ZvbGxvd1wiPkluc3RhZ3JhbTwvYT48L2I+IiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDA1Mi9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDA1Mn50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAwNTIvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIENhdGNoZXMgYSBHYWxheHkgRHVvIGJ5IHRoZSBcIkhhcmVcIiIsImlyYXMwNjA3NjIxMzkiXSwidGl0bGUiOiJIdWJibGUgQ2F0Y2hlcyBhIEdhbGF4eSBEdW8gYnkgdGhlIFwiSGFyZVwiIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMDUyIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRoaXMgaW1hZ2UgZnJvbSB0aGUgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBzaG93cyB0aGUgdW51c3VhbCBnYWxheHkgSVJBUyAwNjA3Ni0yMTM5LCBmb3VuZCBpbiB0aGUgY29uc3RlbGxhdGlvbiBMZXB1cyAoVGhlIEhhcmUpLiBIdWJibGXigJlzIFdpZGUgRmllbGQgQ2FtZXJhIDMgKFdGQzMpIGFuZCBBZHZhbmNlZCBDYW1lcmEgZm9yIFN1cnZleXMgKEFDUykgaW5zdHJ1bWVudHMgb2JzZXJ2ZWQgdGhlIGdhbGF4eSBmcm9tIGEgZGlzdGFuY2Ugb2YgNTAwIG1pbGxpb24gbGlnaHQteWVhcnMuICBUaGlzIHBhcnRpY3VsYXIgb2JqZWN0IHN0YW5kcyBvdXQgZnJvbSB0aGUgY3Jvd2QgYnkgYWN0dWFsbHkgYmVpbmcgY29tcG9zZWQgb2YgdHdvIHNlcGFyYXRlIGdhbGF4aWVzIHJ1c2hpbmcgcGFzdCBlYWNoIG90aGVyIGF0IGFib3V0IDIgbWlsbGlvbiBraWxvbWV0ZXJzICgxLDI0MywwMDAgbWlsZXMpIHBlciBob3VyLiBUaGlzIHNwZWVkIGlzIG1vc3QgbGlrZWx5IHRvbyBmYXN0IGZvciB0aGVtIHRvIG1lcmdlIGFuZCBmb3JtIGEgc2luZ2xlIGdhbGF4eS4gSG93ZXZlciwgYmVjYXVzZSBvZiB0aGVpciBzbWFsbCBzZXBhcmF0aW9uIG9mIG9ubHkgYWJvdXQgMjAsMDAwIGxpZ2h0LXllYXJzLCB0aGUgZ2FsYXhpZXMgd2lsbCBkaXN0b3J0IG9uZSBhbm90aGVyIHRocm91Z2ggdGhlIGZvcmNlIG9mIGdyYXZpdHkgd2hpbGUgcGFzc2luZyBlYWNoIG90aGVyLCBjaGFuZ2luZyB0aGVpciBzdHJ1Y3R1cmVzIG9uIGEgZ3JhbmQgc2NhbGUuICBTdWNoIGdhbGFjdGljIGludGVyYWN0aW9ucyBhcmUgYSBjb21tb24gc2lnaHQgZm9yIEh1YmJsZSwgYW5kIGhhdmUgbG9uZyBiZWVuIGEgZmllbGQgb2Ygc3R1ZHkgZm9yIGFzdHJvbm9tZXJzLiBUaGUgaW50cmlndWluZyBiZWhhdmlvcnMgb2YgaW50ZXJhY3RpbmcgZ2FsYXhpZXMgdGFrZSBtYW55IGZvcm1zOyBnYWxhY3RpYyBjYW5uaWJhbGlzbSwgZ2FsYXh5IGhhcmFzc21lbnQgYW5kIGV2ZW4gZ2FsYXh5IGNvbGxpc2lvbnMuIFRoZSBNaWxreSBXYXkgaXRzZWxmIHdpbGwgZXZlbnR1YWxseSBmYWxsIHZpY3RpbSB0byB0aGUgbGF0dGVyLCBtZXJnaW5nIHdpdGggdGhlIEFuZHJvbWVkYSBHYWxheHkgaW4gYWJvdXQgNC41IGJpbGxpb24geWVhcnMuIFRoZSBmYXRlIG9mIG91ciBnYWxheHkgc2hvdWxkbuKAmXQgYmUgYWxhcm1pbmcgdGhvdWdoOiB3aGlsZSBnYWxheGllcyBhcmUgcG9wdWxhdGVkIGJ5IGJpbGxpb25zIG9mIHN0YXJzLCB0aGUgZGlzdGFuY2VzIGJldHdlZW4gaW5kaXZpZHVhbCBzdGFycyBhcmUgc28gbGFyZ2UgdGhhdCBoYXJkbHkgYW55IHN0ZWxsYXIgY29sbGlzaW9ucyB3aWxsIG9jY3VyLiAgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgPGI+Rm9sbG93IHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vdHdpdHRlci5jb20vTkFTQUdvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JpZC5tZS9uYXNhZ29kZGFyZC8/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4gICAiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTc5L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxOTc5fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTk3OS9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgU2VlcyBQaW53aGVlbCBvZiBTdGFyIEJpcnRoIiwiaHViYmxlIiwiaHN0IiwibmFzYSIsInVuaXZlcnNlIiwiZ2FsYXh5Iiwic3BpcmFsZ2FsYXh5Iiwic3BhY2UiLCJzdGFyIiwiZ29kZGFyZHNwYWNlZmxpZ2h0Y2VudGVyIl0sInRpdGxlIjoiSHViYmxlIFNlZXMgUGlud2hlZWwgb2YgU3RhciBCaXJ0aCIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTk3OSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJOQVNBIGltYWdlIHJlbGVhc2UgT2N0b2JlciAxOSwgMjAxMCAgVGhvdWdoIHRoZSB1bml2ZXJzZSBpcyBjaG9jayBmdWxsIG9mIHNwaXJhbC1zaGFwZWQgZ2FsYXhpZXMsIG5vIHR3byBsb29rIGV4YWN0bHkgdGhlIHNhbWUuIFRoaXMgZmFjZS1vbiBzcGlyYWwgZ2FsYXh5LCBjYWxsZWQgTkdDIDM5ODIsIGlzIHN0cmlraW5nIGZvciBpdHMgcmljaCB0YXBlc3RyeSBvZiBzdGFyIGJpcnRoLCBhbG9uZyB3aXRoIGl0cyB3aW5kaW5nIGFybXMuIFRoZSBhcm1zIGFyZSBsaW5lZCB3aXRoIHBpbmsgc3Rhci1mb3JtaW5nIHJlZ2lvbnMgb2YgZ2xvd2luZyBoeWRyb2dlbiwgbmV3Ym9ybiBibHVlIHN0YXIgY2x1c3RlcnMsIGFuZCBvYnNjdXJpbmcgZHVzdCBsYW5lcyB0aGF0IHByb3ZpZGUgdGhlIHJhdyBtYXRlcmlhbCBmb3IgZnV0dXJlIGdlbmVyYXRpb25zIG9mIHN0YXJzLiBUaGUgYnJpZ2h0IG51Y2xldXMgaXMgaG9tZSB0byBhbiBvbGRlciBwb3B1bGF0aW9uIG9mIHN0YXJzLCB3aGljaCBncm93IGV2ZXIgbW9yZSBkZW5zZWx5IHBhY2tlZCB0b3dhcmQgdGhlIGNlbnRlci4gIE5HQyAzOTgyIGlzIGxvY2F0ZWQgYWJvdXQgNjggbWlsbGlvbiBsaWdodC15ZWFycyBhd2F5IGluIHRoZSBjb25zdGVsbGF0aW9uIFVyc2EgTWFqb3IuIFRoZSBnYWxheHkgc3BhbnMgYWJvdXQgMzAsMDAwIGxpZ2h0LXllYXJzLCBvbmUtdGhpcmQgb2YgdGhlIHNpemUgb2Ygb3VyIE1pbGt5IFdheSBnYWxheHkuIFRoaXMgY29sb3IgaW1hZ2UgaXMgY29tcG9zZWQgb2YgZXhwb3N1cmVzIHRha2VuIGJ5IHRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlJ3MgV2lkZSBGaWVsZCBQbGFuZXRhcnkgQ2FtZXJhIDIgKFdGUEMyKSwgdGhlIEFkdmFuY2VkIENhbWVyYSBmb3IgU3VydmV5cyAoQUNTKSwgYW5kIHRoZSBXaWRlIEZpZWxkIENhbWVyYSAzIChXRkMzKS4gVGhlIG9ic2VydmF0aW9ucyB3ZXJlIHRha2VuIGJldHdlZW4gTWFyY2ggMjAwMCBhbmQgQXVndXN0IDIwMDkuIFRoZSByaWNoIGNvbG9yIHJhbmdlIGNvbWVzIGZyb20gdGhlIGZhY3QgdGhhdCB0aGUgZ2FsYXh5IHdhcyBwaG90b2dyYXBoZWQgaW52aXNpYmxlIGFuZCBuZWFyLWluZnJhcmVkIGxpZ2h0LiBBbHNvIHVzZWQgd2FzIGEgZmlsdGVyIHRoYXQgaXNvbGF0ZXMgaHlkcm9nZW4gZW1pc3Npb24gdGhhdCBlbWFuYXRlcyBmcm9tIGJyaWdodCBzdGFyLWZvcm1pbmcgcmVnaW9ucyBkb3R0aW5nIHRoZSBzcGlyYWwgYXJtcy4gIFRoZSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGlzIGEgcHJvamVjdCBvZiBpbnRlcm5hdGlvbmFsIGNvb3BlcmF0aW9uIGJldHdlZW4gTkFTQSBhbmQgdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeS4gTkFTQSdzIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciBtYW5hZ2VzIHRoZSB0ZWxlc2NvcGUuIFRoZSBTcGFjZSBUZWxlc2NvcGUgU2NpZW5jZSBJbnN0aXR1dGUgKFNUU2NJKSBjb25kdWN0cyBIdWJibGUgc2NpZW5jZSBvcGVyYXRpb25zLiBTVFNjSSBpcyBvcGVyYXRlZCBmb3IgTkFTQSBieSB0aGUgQXNzb2NpYXRpb24gb2YgVW5pdmVyc2l0aWVzIGZvciBSZXNlYXJjaCBpbiBBc3Ryb25vbXksIEluYy4gaW4gV2FzaGluZ3RvbiwgRC5DLiAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCB0aGUgSHViYmxlIEhlcml0YWdlIFRlYW0gKFNUU2NJL0FVUkEpIEFja25vd2xlZGdtZW50OiBBLiBSaWVzcyAoU1RTY0kpICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBX0dvZGRhcmRQaXhcIiByZWw9XCJub2ZvbGxvd1wiPlR3aXR0ZXI8L2E+PC9iPiAgPGI+Sm9pbiB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxNTQvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAxNTR+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMTU0L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImFsYnVtIjoiVGVzdCIsImtleXdvcmRzIjpbIkh1YmJsZSBTcG90bGlnaHQgb24gSXJyZWd1bGFyIEdhbGF4eSIsImljMzU4MyJdLCJ0aXRsZSI6Ikh1YmJsZSBTcG90bGlnaHQgb24gSXJyZWd1bGFyIEdhbGF4eSIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDE1NCIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGlzIGRlbGljYXRlIGJsdWUgZ3JvdXAgb2Ygc3RhcnMg4oCUIGFjdHVhbGx5IGFuIGlycmVndWxhciBnYWxheHkgbmFtZWQgSUMgMzU4MyDigJQgc2l0cyBzb21lIDMwIG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBpbiB0aGUgY29uc3RlbGxhdGlvbiBvZiBWaXJnbyAoVGhlIFZpcmdpbikuICBJdCBtYXkgc2VlbSB0byBoYXZlIG5vIGRpc2Nlcm5hYmxlIHN0cnVjdHVyZSwgYnV0IElDIDM1ODMgaGFzIGJlZW4gZm91bmQgdG8gaGF2ZSBhIGJhciBvZiBzdGFycyBydW5uaW5nIHRocm91Z2ggaXRzIGNlbnRlci4gVGhlc2Ugc3RydWN0dXJlcyBhcmUgY29tbW9uIHRocm91Z2hvdXQgdGhlIFVuaXZlcnNlLCBhbmQgYXJlIGZvdW5kIHdpdGhpbiB0aGUgbWFqb3JpdHkgb2Ygc3BpcmFsLCBtYW55IGlycmVndWxhciwgYW5kIHNvbWUgbGVudGljdWxhciBnYWxheGllcy4gVHdvIG9mIG91ciBjbG9zZXN0IGNvc21pYyBuZWlnaGJvcnMsIHRoZSBMYXJnZSBhbmQgU21hbGwgTWFnZWxsYW5pYyBDbG91ZHMsIGFyZSBiYXJyZWQsIGluZGljYXRpbmcgdGhhdCB0aGV5IG1heSBoYXZlIG9uY2UgYmVlbiBiYXJyZWQgc3BpcmFsIGdhbGF4aWVzIHRoYXQgd2VyZSBkaXNydXB0ZWQgb3IgdG9ybiBhcGFydCBieSB0aGUgZ3Jhdml0YXRpb25hbCBwdWxsIG9mIHRoZSBNaWxreSBXYXkuICBSZXNlYXJjaGVycyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBMZWljZXN0ZXIsIEVuZ2xhbmQgbm90ZSB0aGVyZSBhcmUgdHdvIHR5cGVzIG9mIGlycmVndWxhciBnYWxheHkuIFR5cGUgSSdzIGFyZSB1c3VhbGx5IHNpbmdsZSBnYWxheGllcyBvZiBwZWN1bGlhciBhcHBlYXJhbmNlLiBUaGV5IGNvbnRhaW4gYSBsYXJnZSBmcmFjdGlvbiBvZiB5b3VuZyBzdGFycywgYW5kIHNob3cgdGhlIGx1bWlub3VzIG5lYnVsYWUgdGhhdCBhcmUgYWxzbyB2aXNpYmxlIGluIHNwaXJhbCBnYWxheGllcy4gVHlwZSBJSSBpcnJlZ3VsYXJzIGluY2x1ZGUgdGhlIGdyb3VwIGtub3duIGFzIGludGVyYWN0aW5nIG9yIGRpc3J1cHRpbmcgZ2FsYXhpZXMsIGluIHdoaWNoIHRoZSBzdHJhbmdlIGFwcGVhcmFuY2UgaXMgZHVlIHRvIHR3byBvciBtb3JlIGdhbGF4aWVzIGNvbGxpZGluZywgbWVyZ2luZyBvciBvdGhlcndpc2UgaW50ZXJhY3RpbmcgZ3Jhdml0YXRpb25hbGx5LiAgU29tZXRoaW5nIHNpbWlsYXIgbWlnaHQgYmUgaGFwcGVuaW5nIHdpdGggSUMgMzU4My4gVGhpcyBzbWFsbCBnYWxheHkgaXMgdGhvdWdodCB0byBiZSBncmF2aXRhdGlvbmFsbHkgaW50ZXJhY3Rpbmcgd2l0aCBvbmUgb2YgaXRzIG5laWdoYm9ycywgdGhlIHNwaXJhbCBNZXNzaWVyIDkwLiBUb2dldGhlciwgdGhlIGR1byBmb3JtIGEgcGFpcmluZyBrbm93biBhcyBBcnAgNzYuIEl04oCZcyBzdGlsbCB1bmNsZWFyIHdoZXRoZXIgdGhlc2UgZmxpcnRhdGlvbnMgYXJlIHRoZSBjYXVzZSBvZiBJQyAzNTgz4oCZcyBpcnJlZ3VsYXIgYXBwZWFyYW5jZSDigJQgYnV0IHdoYXRldmVyIHRoZSBjYXVzZSwgdGhlIGdhbGF4eSBtYWtlcyBmb3IgYSBzdHJpa2luZ2x5IGRlbGljYXRlIHNpZ2h0IGluIHRoaXMgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSwgZ2xpbW1lcmluZyBpbiB0aGUgYmxhY2tuZXNzIG9mIHNwYWNlLiAgSW1hZ2UgQ3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uICA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmlkLm1lL25hc2Fnb2RkYXJkLz92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiAgIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI3NS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDI3NX50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDAyNzUvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3siYWxidW0iOiJUZXN0Iiwia2V5d29yZHMiOlsiSHViYmxlIEhvdGJlZCBvZiBWaWdvcm91cyBTdGFyIEZvcm1hdGlvbiIsIm5nYzE1NjkiXSwiZGVzY3JpcHRpb24iOiJUaGlzIGdhbGF4eSBpcyBjdXJyZW50bHkgYSBob3RiZWQgb2Ygdmlnb3JvdXMgc3RhciBmb3JtYXRpb24uIE5HQyAxNTY5IGlzIGEgc3RhcmJ1cnN0IGdhbGF4eSwgbWVhbmluZyB0aGF0IOKAlCBhcyB0aGUgbmFtZSBzdWdnZXN0cyDigJQgaXQgaXMgYnVyc3RpbmcgYXQgdGhlIHNlYW1zIHdpdGggc3RhcnMsIGFuZCBpcyBjdXJyZW50bHkgcHJvZHVjaW5nIHRoZW0gYXQgYSByYXRlIGZhciBoaWdoZXIgdGhhbiB0aGF0IG9ic2VydmVkIGluIG1vc3Qgb3RoZXIgZ2FsYXhpZXMuIEZvciBhbG1vc3QgMTAwIG1pbGxpb24geWVhcnMsIE5HQyAxNTY5IGhhcyBwdW1wZWQgb3V0IHN0YXJzIG1vcmUgdGhhbiAxMDAgdGltZXMgZmFzdGVyIHRoYW4gdGhlIE1pbGt5IFdheSEgIEFzIGEgcmVzdWx0LCB0aGlzIGdsaXR0ZXJpbmcgZ2FsYXh5IGlzIGhvbWUgdG8gc3VwZXIgc3RhciBjbHVzdGVycywgdGhyZWUgb2Ygd2hpY2ggYXJlIHZpc2libGUgaW4gdGhpcyBpbWFnZSDigJQgb25lIG9mIHRoZSB0d28gYnJpZ2h0IGNsdXN0ZXJzIGlzIGFjdHVhbGx5IHRoZSBzdXBlcnBvc2l0aW9uIG9mIHR3byBtYXNzaXZlIGNsdXN0ZXJzLiBFYWNoIGNvbnRhaW5pbmcgbW9yZSB0aGFuIGEgbWlsbGlvbiBzdGFycywgdGhlc2UgYnJpbGxpYW50IGJsdWUgY2x1c3RlcnMgcmVzaWRlIHdpdGhpbiBhIGxhcmdlIGNhdml0eSBvZiBnYXMgY2FydmVkIG91dCBieSBtdWx0aXBsZSBzdXBlcm5vdmFlLCB0aGUgZW5lcmdldGljIHJlbW5hbnRzIG9mIG1hc3NpdmUgc3RhcnMuICBJbiAyMDA4LCBIdWJibGUgb2JzZXJ2ZWQgdGhlIGdhbGF4eSdzIGNsdXR0ZXJlZCBjb3JlIGFuZCBzcGFyc2VseSBwb3B1bGF0ZWQgb3V0ZXIgZnJpbmdlcy4gQnkgcGlucG9pbnRpbmcgaW5kaXZpZHVhbCByZWQgZ2lhbnQgc3RhcnMsIEh1YmJsZeKAmXMgQWR2YW5jZWQgQ2FtZXJhIGZvciBTdXJ2ZXlzIGVuYWJsZWQgYXN0cm9ub21lcnMgdG8gY2FsY3VsYXRlIGEgbmV3IOKAlCBhbmQgbXVjaCBtb3JlIHByZWNpc2Ug4oCUIGVzdGltYXRlIGZvciBOR0MgMTU2OeKAmXMgZGlzdGFuY2UuIFRoaXMgcmV2ZWFsZWQgdGhhdCB0aGUgZ2FsYXh5IGlzIGFjdHVhbGx5IG9uZSBhbmQgYSBoYWxmIHRpbWVzIGZhcnRoZXIgYXdheSB0aGFuIHByZXZpb3VzbHkgdGhvdWdodCwgYW5kIGEgbWVtYmVyIG9mIHRoZSBJQyAzNDIgZ2FsYXh5IGdyb3VwLiAgQXN0cm9ub21lcnMgc3VzcGVjdCB0aGF0IHRoZSBJQyAzNDIgY29zbWljIGNvbmdyZWdhdGlvbiBpcyByZXNwb25zaWJsZSBmb3IgdGhlIHN0YXItZm9ybWluZyBmcmVuenkgb2JzZXJ2ZWQgaW4gTkdDIDE1NjkuIEdyYXZpdGF0aW9uYWwgaW50ZXJhY3Rpb25zIGJldHdlZW4gdGhpcyBnYWxhY3RpYyBncm91cCBhcmUgYmVsaWV2ZWQgdG8gYmUgY29tcHJlc3NpbmcgdGhlIGdhcyB3aXRoaW4gTkdDIDE1NjkuIEFzIGl0IGlzIGNvbXByZXNzZWQsIHRoZSBnYXMgY29sbGFwc2VzLCBoZWF0cyB1cCBhbmQgZm9ybXMgbmV3IHN0YXJzLiAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EsIEFsb2lzaSwgRm9yZDsgQWNrbm93bGVkZ2VtZW50OiBKdWR5IFNjaG1pZHQgIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwMjc1IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBIb3RiZWQgb2YgVmlnb3JvdXMgU3RhciBGb3JtYXRpb24iLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDkyL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNDkyfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDQ5Mi9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgVmlld3MgVHdvIEdhbGF4aWVzIE1lcmdpbmciLCJuZ2M2MDUyIl0sImRlc2NyaXB0aW9uIjoiVGhpcyBpbWFnZSwgdGFrZW4gd2l0aCB0aGUgV2lkZSBGaWVsZCBQbGFuZXRhcnkgQ2FtZXJhIDIgb24gYm9hcmQgdGhlIE5BU0EvRVNBIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUsIHNob3dzIHRoZSBnYWxheHkgTkdDIDYwNTIsIGxvY2F0ZWQgYXJvdW5kIDIzMCBtaWxsaW9uIGxpZ2h0LXllYXJzIGF3YXkgaW4gdGhlIGNvbnN0ZWxsYXRpb24gb2YgSGVyY3VsZXMuICBJdCB3b3VsZCBiZSByZWFzb25hYmxlIHRvIHRoaW5rIG9mIHRoaXMgYXMgYSBzaW5nbGUgYWJub3JtYWwgZ2FsYXh5LCBhbmQgaXQgd2FzIG9yaWdpbmFsbHkgY2xhc3NpZmllZCBhcyBzdWNoLiBIb3dldmVyLCBpdCBpcyBpbiBmYWN0IGEg4oCcbmV34oCdIGdhbGF4eSBpbiB0aGUgcHJvY2VzcyBvZiBmb3JtaW5nLiBUd28gc2VwYXJhdGUgZ2FsYXhpZXMgaGF2ZSBiZWVuIGdyYWR1YWxseSBkcmF3biB0b2dldGhlciwgYXR0cmFjdGVkIGJ5IGdyYXZpdHksIGFuZCBoYXZlIGNvbGxpZGVkLiBXZSBub3cgc2VlIHRoZW0gbWVyZ2luZyBpbnRvIGEgc2luZ2xlIHN0cnVjdHVyZS4gIEFzIHRoZSBtZXJnaW5nIHByb2Nlc3MgY29udGludWVzLCBpbmRpdmlkdWFsIHN0YXJzIGFyZSB0aHJvd24gb3V0IG9mIHRoZWlyIG9yaWdpbmFsIG9yYml0cyBhbmQgcGxhY2VkIG9udG8gZW50aXJlbHkgbmV3IHBhdGhzLCBzb21lIHZlcnkgZGlzdGFudCBmcm9tIHRoZSByZWdpb24gb2YgdGhlIGNvbGxpc2lvbiBpdHNlbGYuIFNpbmNlIHRoZSBzdGFycyBwcm9kdWNlIHRoZSBsaWdodCB3ZSBzZWUsIHRoZSDigJxnYWxheHnigJ0gbm93IGFwcGVhcnMgdG8gaGF2ZSBhIGhpZ2hseSBjaGFvdGljIHNoYXBlLiBFdmVudHVhbGx5LCB0aGlzIG5ldyBnYWxheHkgd2lsbCBzZXR0bGUgZG93biBpbnRvIGEgc3RhYmxlIHNoYXBlLCB3aGljaCBtYXkgbm90IHJlc2VtYmxlIGVpdGhlciBvZiB0aGUgdHdvIG9yaWdpbmFsIGdhbGF4aWVzLiAgSW1hZ2UgY3JlZGl0OiBFU0EvSHViYmxlICZhbXA7IE5BU0EsIEFja25vd2xlZGdlbWVudDogSnVkeSBTY2htaWR0ICIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDQ5MiIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgVmlld3MgVHdvIEdhbGF4aWVzIE1lcmdpbmciLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTQxL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwOTQxfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk0MS9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUncyBWaWV3IG9mIENvbWV0IFNpZGluZyBTcHJpbmciLCJtYXJzIiwic3BhY2UiLCJuYXNhIiwiaHViYmxlIiwibmFzYWdvZGRhcmQiLCJjb21ldHNpZGluZ3NwcmluZyJdLCJ0aXRsZSI6Ikh1YmJsZSdzIFZpZXcgb2YgQ29tZXQgU2lkaW5nIFNwcmluZyIsImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMDk0MSIsImRhdGVfY3JlYXRlZCI6IjIwMTctMTItMDhUMDA6MDA6MDBaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJNQVJDSCAyNywgMjAxNDogQ29tZXQgU2lkaW5nIFNwcmluZyBpcyBwbHVuZ2luZyB0b3dhcmQgdGhlIFN1biBhbG9uZyBhIHJvdWdobHkgMS1taWxsaW9uLXllYXIgb3JiaXQuIFRoZSBjb21ldCwgZGlzY292ZXJlZCBpbiAyMDEzLCB3YXMgd2l0aGluIHRoZSByYWRpdXMgb2YgSnVwaXRlcidzIG9yYml0IHdoZW4gdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgcGhvdG9ncmFwaGVkIGl0IG9uIE1hcmNoIDExLCAyMDE0LiBIdWJibGUgcmVzb2x2ZXMgdHdvIGpldHMgb2YgZHVzdCBjb21pbmcgZnJvbSB0aGUgc29saWQgaWN5IG51Y2xldXMuIFRoZXNlIHBlcnNpc3RlbnQgamV0cyB3ZXJlIGZpcnN0IHNlZW4gaW4gSHViYmxlIHBpY3R1cmVzIHRha2VuIG9uIE9jdC4gMjksIDIwMTMuIFRoZSBmZWF0dXJlIHNob3VsZCBhbGxvdyBhc3Ryb25vbWVycyB0byBtZWFzdXJlIHRoZSBkaXJlY3Rpb24gb2YgdGhlIG51Y2xldXMncyBwb2xlLCBhbmQgaGVuY2UsIHJvdGF0aW9uIGF4aXMuIFRoZSBjb21ldCB3aWxsIG1ha2UgaXRzIGNsb3Nlc3QgYXBwcm9hY2ggdG8gb3VyIFN1biBvbiBPY3QuIDI1LCAyMDE0LCBhdCBhIGRpc3RhbmNlIG9mIDEzMCBtaWxsaW9uIG1pbGVzLCB3ZWxsIG91dHNpZGUgRWFydGgncyBvcmJpdC4gT24gaXRzIGluYm91bmQgbGVnLCBDb21ldCBTaWRpbmcgU3ByaW5nIHdpbGwgcGFzcyB3aXRoaW4gODQsMDAwIG1pbGVzIG9mIE1hcnMgb24gT2N0LiAxOSwgMjAxNCwgd2hpY2ggaXMgbGVzcyB0aGFuIGhhbGYgdGhlIE1vb24ncyBkaXN0YW5jZSBmcm9tIEVhcnRoLiBUaGUgY29tZXQgaXMgbm90IGV4cGVjdGVkIHRvIGJlY29tZSBicmlnaHQgZW5vdWdoIHRvIGJlIHNlZW4gYnkgdGhlIG5ha2VkIGV5ZS4gIENyZWRpdDogTkFTQSwgRVNBLCBhbmQgSi4tWS4gTGkgKFBsYW5ldGFyeSBTY2llbmNlIEluc3RpdHV0ZSkgIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9jZW50ZXJzL2dvZGRhcmQvaG9tZS9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlcjwvYT48L2I+IGVuYWJsZXMgTkFTQeKAmXMgbWlzc2lvbiB0aHJvdWdoIGZvdXIgc2NpZW50aWZpYyBlbmRlYXZvcnM6IEVhcnRoIFNjaWVuY2UsIEhlbGlvcGh5c2ljcywgU29sYXIgU3lzdGVtIEV4cGxvcmF0aW9uLCBhbmQgQXN0cm9waHlzaWNzLiBHb2RkYXJkIHBsYXlzIGEgbGVhZGluZyByb2xlIGluIE5BU0HigJlzIGFjY29tcGxpc2htZW50cyBieSBjb250cmlidXRpbmcgY29tcGVsbGluZyBzY2llbnRpZmljIGtub3dsZWRnZSB0byBhZHZhbmNlIHRoZSBBZ2VuY3nigJlzIG1pc3Npb24uIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gPGI+TGlrZSB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vcGFnZXMvR3JlZW5iZWx0LU1EL05BU0EtR29kZGFyZC8zOTUwMTM4NDU4OTc/cmVmPXRzZFwiIHJlbD1cIm5vZm9sbG93XCI+RmFjZWJvb2s8L2E+PC9iPiA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3OTgvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3OTh+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAwNzk4L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBTcGllcyBhIExvb3B5IEdhbGF4eSJdLCJsb2NhdGlvbiI6IkdyZWVuYmVsdCwgTUQiLCJuYXNhX2lkIjoiR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDA3OTgiLCJkYXRlX2NyZWF0ZWQiOiIyMDE1LTAyLTAyVDE4OjM4OjEyWiIsIm1lZGlhX3R5cGUiOiJpbWFnZSIsInRpdGxlIjoiSHViYmxlIFNwaWVzIGEgTG9vcHkgR2FsYXh5IiwiZGVzY3JpcHRpb24iOiJUaGlzIE5BU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBwaG90byBvZiBOR0MgNzcxNCBwcmVzZW50cyBhbiBlc3BlY2lhbGx5IHN0cmlraW5nIHZpZXcgb2YgdGhlIGdhbGF4eSdzIHNtb2tlLXJpbmctbGlrZSBzdHJ1Y3R1cmUuIFRoZSBnb2xkZW4gbG9vcCBpcyBtYWRlIG9mIHN1bi1saWtlIHN0YXJzIHRoYXQgaGF2ZSBiZWVuIHB1bGxlZCBkZWVwIGludG8gc3BhY2UsIGZhciBmcm9tIHRoZSBnYWxheHkncyBjZW50ZXIuIFRoZSBnYWxheHkgaXMgbG9jYXRlZCBhcHByb3hpbWF0ZWx5IDEwMCBtaWxsaW9uIGxpZ2h0LXllYXJzIGZyb20gRWFydGggaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgY29uc3RlbGxhdGlvbiBQaXNjZXMuICBUaGUgdW5pdmVyc2UgaXMgZnVsbCBvZiBzdWNoIGdhbGF4aWVzIHRoYXQgYXJlIGdyYXZpdGF0aW9uYWxseSBzdHJldGNoZWQgYW5kIHB1bGxlZCBhbmQgb3RoZXJ3aXNlIGRpc3RvcnRlZCBpbiBncmF2aXRhdGlvbmFsIHR1Zy1vJy13YXJzIHdpdGggYnlwYXNzaW5nIGdhbGF4aWVzLiAgVGhlIGNvbXBhbmlvbiBnYWxheHkgZG9pbmcgdGhlICZxdW90O3RhZmZ5IHB1bGxpbmcmcXVvdDsgaW4gdGhpcyBjYXNlLCBOR0MgNzcxNSwgbGllcyBqdXN0IG91dCBvZiB0aGUgZmllbGQgb2YgdmlldyBpbiB0aGlzIGltYWdlLiBBIHZlcnkgZmFpbnQgYnJpZGdlIG9mIHN0YXJzIGV4dGVuZHMgdG8gdGhlIHVuc2VlbiBjb21wYW5pb24uIFRoZSBjbG9zZSBlbmNvdW50ZXIgaGFzIGNvbXByZXNzZWQgaW50ZXJzdGVsbGFyIGdhcyB0byB0cmlnZ2VyIGJ1cnN0cyBvZiBzdGFyIGZvcm1hdGlvbiBzZWVuIGluIGJyaWdodCBibHVlIGFyY3MgZXh0ZW5kaW5nIGFyb3VuZCBOR0MgNzcxNCdzIGNlbnRlci4gIFRoZSBncmF2aXRhdGlvbmFsIGRpc3J1cHRpb24gb2YgTkdDIDc3MTQgYmVnYW4gYmV0d2VlbiAxMDAgbWlsbGlvbiBhbmQgMjAwIG1pbGxpb24geWVhcnMgYWdvLCBhdCB0aGUgZXBvY2ggd2hlbiBkaW5vc2F1cnMgcnVsZWQgdGhlIEVhcnRoLiAgVGhlIGltYWdlIHdhcyB0YWtlbiB3aXRoIHRoZSBXaWRlIEZpZWxkIENhbWVyYSAzIGFuZCB0aGUgQWR2YW5jZWQgQ2FtZXJhIGZvciBTdXJ2ZXlzIGluIE9jdG9iZXIgMjAxMS4gIENyZWRpdDogTkFTQSBhbmQgRVNBLiBBY2tub3dsZWRnbWVudDogQS4gR2FsLVlhbSAoV2Vpem1hbm4gSW5zdGl0dXRlIG9mIFNjaWVuY2UpICA8Yj48YSBocmVmPVwiaHR0cDovL3d3dy5uYXNhLmdvdi9hdWRpZW5jZS9mb3JtZWRpYS9mZWF0dXJlcy9NUF9QaG90b19HdWlkZWxpbmVzLmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgaW1hZ2UgdXNlIHBvbGljeS48L2E+PC9iPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiA8Yj5Gb2xsb3cgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly90d2l0dGVyLmNvbS9OQVNBR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+IDxiPkxpa2UgdXMgb24gPGEgaHJlZj1cImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3BhZ2VzL0dyZWVuYmVsdC1NRC9OQVNBLUdvZGRhcmQvMzk1MDEzODQ1ODk3P3JlZj10c2RcIiByZWw9XCJub2ZvbGxvd1wiPkZhY2Vib29rPC9hPjwvYj4gPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMDM5L0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMDM5fnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMjAzOS9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJhbGJ1bSI6IlRlc3QiLCJrZXl3b3JkcyI6WyJIdWJibGUgQ2FwdHVyZXMgQnViYmxlcyBBbmQgQmFieSBTdGFycyIsInN0YXIiLCJzYXRlbGxpdGUiLCJuYXNhIiwibmVidWxhIiwiaHViYmxlIiwibGlnaHR5ZWFycyIsImh1YmJsZXNwYWNldGVsZXNjb3BlIiwibjExIiwiZ29kZGFyZHNwYWNlZmxpZ2h0Y2VudGVyIiwic3RhcmZvcm1hdGlvbiJdLCJ0aXRsZSI6Ikh1YmJsZSBDYXB0dXJlcyBCdWJibGVzIEFuZCBCYWJ5IFN0YXJzIiwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAyMDM5IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNy0xMi0wOFQwMDowMDowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IkltYWdlIHJlbGVhc2UgSnVuZSAyMiwgMjAxMCAgQSBzcGVjdGFjdWxhciBuZXcgTkFTQS9FU0EgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZSDigJQgb25lIG9mIHRoZSBsYXJnZXN0IGV2ZXIgcmVsZWFzZWQgb2YgYSBzdGFyLWZvcm1pbmcgcmVnaW9uIOKAlCBoaWdobGlnaHRzIE4xMSwgcGFydCBvZiBhIGNvbXBsZXggbmV0d29yayBvZiBnYXMgY2xvdWRzIGFuZCBzdGFyIGNsdXN0ZXJzIHdpdGhpbiBvdXIgbmVpZ2hib3VyaW5nIGdhbGF4eSwgdGhlIExhcmdlIE1hZ2VsbGFuaWMgQ2xvdWQuIFRoaXMgcmVnaW9uIG9mIGVuZXJnZXRpYyBzdGFyIGZvcm1hdGlvbiBpcyBvbmUgb2YgdGhlIG1vc3QgYWN0aXZlIGluIHRoZSBuZWFyYnkgVW5pdmVyc2UuICBUaGUgTGFyZ2UgTWFnZWxsYW5pYyBDbG91ZCBjb250YWlucyBtYW55IGJyaWdodCBidWJibGVzIG9mIGdsb3dpbmcgZ2FzLiBPbmUgb2YgdGhlIGxhcmdlc3QgYW5kIG1vc3Qgc3BlY3RhY3VsYXIgaGFzIHRoZSBuYW1lIExIQSAxMjAtTiAxMSwgZnJvbSBpdHMgbGlzdGluZyBpbiBhIGNhdGFsb2d1ZSBjb21waWxlZCBieSB0aGUgQW1lcmljYW4gYXN0cm9ub21lciBhbmQgYXN0cm9uYXV0IEthcmwgSGVuaXplIGluIDE5NTYsIGFuZCBpcyBpbmZvcm1hbGx5IGtub3duIGFzIE4xMS4gQ2xvc2UgdXAsIHRoZSBiaWxsb3dpbmcgcGluayBjbG91ZHMgb2YgZ2xvd2luZyBnYXMgbWFrZSBOMTEgcmVzZW1ibGUgYSBwdWZmeSBzd2lybCBvZiBmYWlyZ3JvdW5kIGNhbmR5IGZsb3NzLiBGcm9tIGZ1cnRoZXIgYXdheSwgaXRzIGRpc3RpbmN0aXZlIG92ZXJhbGwgc2hhcGUgbGVkIHNvbWUgb2JzZXJ2ZXJzIHRvIG5pY2tuYW1lIGl0IHRoZSBCZWFuIE5lYnVsYS4gVGhlIGRyYW1hdGljIGFuZCBjb2xvdXJmdWwgZmVhdHVyZXMgdmlzaWJsZSBpbiB0aGUgbmVidWxhIGFyZSB0aGUgdGVsbHRhbGUgc2lnbnMgb2Ygc3RhciBmb3JtYXRpb24uIE4xMSBpcyBhIHdlbGwtc3R1ZGllZCByZWdpb24gdGhhdCBleHRlbmRzIG92ZXIgMTAwMCBsaWdodC15ZWFycy4gSXQgaXMgdGhlIHNlY29uZCBsYXJnZXN0IHN0YXItZm9ybWluZyByZWdpb24gd2l0aGluIHRoZSBMYXJnZSBNYWdlbGxhbmljIENsb3VkIGFuZCBoYXMgcHJvZHVjZWQgc29tZSBvZiB0aGUgbW9zdCBtYXNzaXZlIHN0YXJzIGtub3duLiAgICBJdCBpcyB0aGUgcHJvY2VzcyBvZiBzdGFyIGZvcm1hdGlvbiB0aGF0IGdpdmVzIE4xMSBpdHMgZGlzdGluY3RpdmUgbG9vay4gVGhyZWUgc3VjY2Vzc2l2ZSBnZW5lcmF0aW9ucyBvZiBzdGFycywgZWFjaCBvZiB3aGljaCBmb3JtZWQgZnVydGhlciBhd2F5IGZyb20gdGhlIGNlbnRyZSBvZiB0aGUgbmVidWxhIHRoYW4gdGhlIGxhc3QsIGhhdmUgY3JlYXRlZCBzaGVsbHMgb2YgZ2FzIGFuZCBkdXN0LiBUaGVzZSBzaGVsbHMgd2VyZSBibG93biBhd2F5IGZyb20gdGhlIG5ld2Jvcm4gc3RhcnMgaW4gdGhlIHR1cm1vaWwgb2YgdGhlaXIgZW5lcmdldGljIGJpcnRoIGFuZCBlYXJseSBsaWZlLCBjcmVhdGluZyB0aGUgcmluZyBzaGFwZXMgc28gcHJvbWluZW50IGluIHRoaXMgaW1hZ2UuICBCZWFucyBhcmUgbm90IHRoZSBvbmx5IHRlcnJlc3RyaWFsIHNoYXBlcyB0byBiZSBmb3VuZCBpbiB0aGlzIHNwZWN0YWN1bGFyIGhpZ2ggcmVzb2x1dGlvbiBpbWFnZSBmcm9tIHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlLiBJbiB0aGUgdXBwZXIgbGVmdCBpcyB0aGUgcmVkIGJsb29tIG9mIG5lYnVsYSBMSEEgMTIwLU4gMTFBLiBJdHMgcm9zZS1saWtlIHBldGFscyBvZiBnYXMgYW5kIGR1c3QgYXJlIGlsbHVtaW5hdGVkIGZyb20gd2l0aGluLCB0aGFua3MgdG8gdGhlIHJhZGlhdGlvbiBmcm9tIHRoZSBtYXNzaXZlIGhvdCBzdGFycyBhdCBpdHMgY2VudHJlLiBOMTFBIGlzIHJlbGF0aXZlbHkgY29tcGFjdCBhbmQgZGVuc2UgYW5kIGlzIHRoZSBzaXRlIG9mIHRoZSBtb3N0IHJlY2VudCBidXJzdCBvZiBzdGFyIGRldmVsb3BtZW50IGluIHRoZSByZWdpb24uICBPdGhlciBzdGFyIGNsdXN0ZXJzIGFib3VuZCBpbiBOMTEsIGluY2x1ZGluZyBOR0MgMTc2MSBhdCB0aGUgYm90dG9tIG9mIHRoZSBpbWFnZSwgd2hpY2ggaXMgYSBncm91cCBvZiBtYXNzaXZlIGhvdCB5b3VuZyBzdGFycyBidXNpbHkgcG91cmluZyBpbnRlbnNlIHVsdHJhdmlvbGV0IHJhZGlhdGlvbiBvdXQgaW50byBzcGFjZS4gQWx0aG91Z2ggaXQgaXMgbXVjaCBzbWFsbGVyIHRoYW4gb3VyIG93biBnYWxheHksIHRoZSBMYXJnZSBNYWdlbGxhbmljIENsb3VkIGlzIGEgdmVyeSB2aWdvcm91cyByZWdpb24gb2Ygc3RhciBmb3JtYXRpb24uIFN0dWR5aW5nIHRoZXNlIHN0ZWxsYXIgbnVyc2VyaWVzIGhlbHBzIGFzdHJvbm9tZXJzIHVuZGVyc3RhbmQgYSBsb3QgbW9yZSBhYm91dCBob3cgc3RhcnMgYXJlIGJvcm4gYW5kIHRoZWlyIHVsdGltYXRlIGRldmVsb3BtZW50IGFuZCBsaWZlc3Bhbi4gIEJvdGggdGhlIExhcmdlIE1hZ2VsbGFuaWMgQ2xvdWQgYW5kIGl0cyBzbWFsbCBjb21wYW5pb24sIHRoZSBTbWFsbCBNYWdlbGxhbmljIENsb3VkLCBhcmUgZWFzaWx5IHNlZW4gd2l0aCB0aGUgdW5haWRlZCBleWUgYW5kIGhhdmUgYWx3YXlzIGJlZW4gZmFtaWxpYXIgdG8gcGVvcGxlIGxpdmluZyBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZS4gVGhlIGNyZWRpdCBmb3IgYnJpbmdpbmcgdGhlc2UgZ2FsYXhpZXMgdG8gdGhlIGF0dGVudGlvbiBvZiBFdXJvcGVhbnMgaXMgdXN1YWxseSBnaXZlbiB0byBQb3J0dWd1ZXNlIGV4cGxvcmVyIEZlcm5hbmRvIGRlIE1hZ2VsbGFuIGFuZCBoaXMgY3Jldywgd2hvIHZpZXdlZCBpdCBvbiB0aGVpciAxNTE5IHNlYSB2b3lhZ2UuIEhvd2V2ZXIsIHRoZSBQZXJzaWFuIGFzdHJvbm9tZXIgQWJkIEFsLVJhaG1hbiBBbCBTdWZpIGFuZCB0aGUgSXRhbGlhbiBleHBsb3JlciBBbWVyaWdvIFZlc3B1Y2NpIHJlY29yZGVkIHRoZSBMYXJnZSBNYWdlbGxhbmljIENsb3VkIGluIDk2NCBhbmQgMTUwMyByZXNwZWN0aXZlbHkuICBDcmVkaXQ6IE5BU0EsIEVTQSBhbmQgSmVzw7pzIE1hw616IEFwZWxsw6FuaXogKEluc3RpdHV0byBkZSBBc3Ryb2bDrXNpY2EgZGUgQW5kYWx1Y8OtYSwgU3BhaW4pICBUbyBsZWFybiBtb3JlIGFib3V0IEh1YmJsZSBnbyB0bzogPGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvbWFpbi9pbmRleC5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj53d3cubmFzYS5nb3YvbWlzc2lvbl9wYWdlcy9odWJibGUvbWFpbi9pbmRleC5odG1sPC9hPiAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiAgaXMgaG9tZSB0byB0aGUgbmF0aW9uJ3MgbGFyZ2VzdCBvcmdhbml6YXRpb24gb2YgY29tYmluZWQgc2NpZW50aXN0cywgZW5naW5lZXJzIGFuZCB0ZWNobm9sb2dpc3RzIHRoYXQgYnVpbGQgc3BhY2VjcmFmdCwgaW5zdHJ1bWVudHMgYW5kIG5ldyB0ZWNobm9sb2d5IHRvIHN0dWR5IHRoZSBFYXJ0aCwgdGhlIHN1biwgb3VyIHNvbGFyIHN5c3RlbSwgYW5kIHRoZSB1bml2ZXJzZS4iLCJjZW50ZXIiOiJHU0ZDIn1dfSx7ImxpbmtzIjpbeyJyZWwiOiJwcmV2aWV3IiwicmVuZGVyIjoiaW1hZ2UiLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMjYwL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMjYwfnRodW1iLmpwZyJ9XSwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTI2MC9jb2xsZWN0aW9uLmpzb24iLCJkYXRhIjpbeyJrZXl3b3JkcyI6WyJIdWJibGUgU2VlcyBhIFN0YXIgU2V0IHRvIEV4cGxvZGUiXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMjYwIiwiZGF0ZV9jcmVhdGVkIjoiMjAxNC0wMS0xMFQxNzowMjowMFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJ0aXRsZSI6Ikh1YmJsZSBTZWVzIGEgU3RhciBTZXQgdG8gRXhwbG9kZSIsImRlc2NyaXB0aW9uIjoiRmxvYXRpbmcgYXQgdGhlIGNlbnRlciBvZiB0aGlzIG5ldyBIdWJibGUgaW1hZ2UgaXMgYSBsaWRsZXNzIHB1cnBsZSBleWUsIHN0YXJpbmcgYmFjayBhdCB1cyB0aHJvdWdoIHNwYWNlLiBUaGlzIGV0aGVyZWFsIG9iamVjdCwga25vd24gb2ZmaWNpYWxseSBhcyBbU0JXMjAwN10gMSBidXQgc29tZXRpbWVzIG5pY2tuYW1lZCBTQlcxLCBpcyBhIG5lYnVsYSB3aXRoIGEgZ2lhbnQgc3RhciBhdCBpdHMgY2VudGVyLiBUaGUgc3RhciB3YXMgb3JpZ2luYWxseSB0d2VudHkgdGltZXMgbW9yZSBtYXNzaXZlIHRoYW4gb3VyIHN1biwgYW5kIGlzIG5vdyBlbmNhc2VkIGluIGEgc3dpcmxpbmcgcmluZyBvZiBwdXJwbGUgZ2FzLCB0aGUgcmVtYWlucyBvZiB0aGUgZGlzdGFudCBlcmEgd2hlbiBpdCBjYXN0IG9mZiBpdHMgb3V0ZXIgbGF5ZXJzIHZpYSB2aW9sZW50IHB1bHNhdGlvbnMgYW5kIHdpbmRzLiBCdXQgdGhlIHN0YXIgaXMgbm90IGp1c3QgYW55IHN0YXI7IHNjaWVudGlzdHMgc2F5IHRoYXQgaXQgaXMgZGVzdGluZWQgdG8gZ28gc3VwZXJub3ZhLiBUd2VudHktc2l4IHllYXJzIGFnbywgYW5vdGhlciBzdGFyIHdpdGggc3RyaWtpbmcgc2ltaWxhcml0aWVzIHdlbnQgc3VwZXJub3ZhIOKAlCBTTiAxOTg3QS4gRWFybHkgSHViYmxlIGltYWdlcyBvZiBTTiAxOTg3QSBzaG93IGVlcmllIHNpbWlsYXJpdGllcyB0byBTQlcxLiBCb3RoIHN0YXJzIGhhZCBpZGVudGljYWwgcmluZ3Mgb2YgdGhlIHNhbWUgc2l6ZSBhbmQgYWdlLCB3aGljaCB3ZXJlIHRyYXZlbGxpbmcgYXQgc2ltaWxhciBzcGVlZHM7IGJvdGggd2VyZSBsb2NhdGVkIGluIHNpbWlsYXIgSElJIHJlZ2lvbnM7IGFuZCB0aGV5IGhhZCB0aGUgc2FtZSBicmlnaHRuZXNzLiBJbiB0aGlzIHdheSBTQlcxIGlzIGEgc25hcHNob3Qgb2YgU04xOTg3YSdzIGFwcGVhcmFuY2UgYmVmb3JlIGl0IGV4cGxvZGVkLCBhbmQgdW5zdXJwcmlzaW5nbHksIGFzdHJvbm9tZXJzIGxvdmUgc3R1ZHlpbmcgdGhlbSB0b2dldGhlci4gQXQgYSBkaXN0YW5jZSBvZiBtb3JlIHRoYW4gMjAgMDAwIGxpZ2h0LXllYXJzIGl0IHdpbGwgYmUgc2FmZSB0byB3YXRjaCB3aGVuIHRoZSBzdXBlcm5vdmEgZ29lcyBvZmYuIElmIHdlIGFyZSB2ZXJ5IGx1Y2t5IGl0IG1heSBoYXBwZW4gaW4gb3VyIG93biBsaWZldGltZXMuICBDcmVkaXQ6IEVTQS9OQVNBLCBhY2tub3dsZWRnZW1lbnQ6IE5pY2sgUm9zZSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FfR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEyOTIvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDEyOTJ+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMjkyL2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBTZWVzIGEgQml6YXJyZSBDb3NtaWMgUmFyaXR5Il0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTI5MiIsImRhdGVfY3JlYXRlZCI6IjIwMTMtMTItMDZUMjA6NTU6NTRaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwidGl0bGUiOiJIdWJibGUgU2VlcyBhIEJpemFycmUgQ29zbWljIFJhcml0eSIsImRlc2NyaXB0aW9uIjoiVGhpcyBuZXcgSHViYmxlIGltYWdlIHNob3dzIGEgcGVjdWxpYXIgZ2FsYXh5IGtub3duIGFzIE5HQyA2NjAsIGxvY2F0ZWQgYXJvdW5kIDQ1IG1pbGxpb24gbGlnaHQteWVhcnMgYXdheSBmcm9tIHVzLiAgTkdDIDY2MCBpcyBjbGFzc2lmaWVkIGFzIGEgJnF1b3Q7cG9sYXIgcmluZyBnYWxheHksJnF1b3Q7IG1lYW5pbmcgdGhhdCBpdCBoYXMgYSBiZWx0IG9mIGdhcyBhbmQgc3RhcnMgYXJvdW5kIGl0cyBjZW50ZXIgdGhhdCBpdCByaXBwZWQgZnJvbSBhIG5lYXIgbmVpZ2hib3IgZHVyaW5nIGEgY2xhc2ggYWJvdXQgb25lIGJpbGxpb24geWVhcnMgYWdvLlRoZSBmaXJzdCBwb2xhciByaW5nIGdhbGF4eSB3YXMgb2JzZXJ2ZWQgaW4gMTk3OCBhbmQgb25seSBhcm91bmQgYSBkb3plbiBtb3JlIGhhdmUgYmVlbiBkaXNjb3ZlcmVkIHNpbmNlIHRoZW4sIG1ha2luZyB0aGVtIHNvbWV0aGluZyBvZiBhIGNvc21pYyByYXJpdHkuICBVbmZvcnR1bmF0ZWx5LCBOR0MgNjYw4oCZcyBwb2xhciByaW5nIGNhbm5vdCBiZSBzZWVuIGluIHRoaXMgaW1hZ2UsIGJ1dCB0aGUgaW1hZ2UgaGFzIHBsZW50eSBvZiBvdGhlciBmZWF0dXJlcyB0aGF0IG1ha2UgaXQgb2YgaW50ZXJlc3QgdG8gYXN0cm9ub21lcnMg4oCTIGl0cyBjZW50cmFsIGJ1bGdlIGlzIHN0cmFuZ2VseSBvZmYta2lsdGVyIGFuZCwgcGVyaGFwcyBtb3JlIGludHJpZ3VpbmdseSwgaXQgaXMgdGhvdWdodCB0byBoYXJib3IgZXhjZXB0aW9uYWxseSBsYXJnZSBhbW91bnRzIG9mIGRhcmsgbWF0dGVyLiBJbiBhZGRpdGlvbiwgaW4gbGF0ZSAyMDEyIGFzdHJvbm9tZXJzIG9ic2VydmVkIGEgbWFzc2l2ZSBvdXRidXJzdCBlbWFuYXRpbmcgZnJvbSBOR0MgNjYwIHRoYXQgd2FzIGFyb3VuZCB0ZW4gdGltZXMgYXMgYnJpZ2h0IGFzIGEgc3VwZXJub3ZhIGV4cGxvc2lvbi4gVGhpcyBidXJzdCB3YXMgdGhvdWdodCB0byBiZSBjYXVzZWQgYnkgYSBtYXNzaXZlIGpldCBzaG9vdGluZyBvdXQgb2YgdGhlIHN1cGVybWFzc2l2ZSBibGFjayBob2xlIGF0IHRoZSBjZW50ZXIgb2YgdGhlIGdhbGF4eS4gICBDcmVkaXQ6IEh1YmJsZS9OQVNBL0V1cm9wZWFuIFNwYWNlIEFnZW5jeSAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvYXVkaWVuY2UvZm9ybWVkaWEvZmVhdHVyZXMvTVBfUGhvdG9fR3VpZGVsaW5lcy5odG1sXCIgcmVsPVwibm9mb2xsb3dcIj5OQVNBIGltYWdlIHVzZSBwb2xpY3kuPC9hPjwvYj4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2NlbnRlcnMvZ29kZGFyZC9ob21lL2luZGV4Lmh0bWxcIiByZWw9XCJub2ZvbGxvd1wiPk5BU0EgR29kZGFyZCBTcGFjZSBGbGlnaHQgQ2VudGVyPC9hPjwvYj4gZW5hYmxlcyBOQVNB4oCZcyBtaXNzaW9uIHRocm91Z2ggZm91ciBzY2llbnRpZmljIGVuZGVhdm9yczogRWFydGggU2NpZW5jZSwgSGVsaW9waHlzaWNzLCBTb2xhciBTeXN0ZW0gRXhwbG9yYXRpb24sIGFuZCBBc3Ryb3BoeXNpY3MuIEdvZGRhcmQgcGxheXMgYSBsZWFkaW5nIHJvbGUgaW4gTkFTQeKAmXMgYWNjb21wbGlzaG1lbnRzIGJ5IGNvbnRyaWJ1dGluZyBjb21wZWxsaW5nIHNjaWVudGlmaWMga25vd2xlZGdlIHRvIGFkdmFuY2UgdGhlIEFnZW5jeeKAmXMgbWlzc2lvbi4gIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FfR29kZGFyZFBpeFwiIHJlbD1cIm5vZm9sbG93XCI+VHdpdHRlcjwvYT48L2I+ICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICA8Yj5GaW5kIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vaW5zdGFncmFtLmNvbS9uYXNhZ29kZGFyZD92bT1ncmlkXCIgcmVsPVwibm9mb2xsb3dcIj5JbnN0YWdyYW08L2E+PC9iPiIsImNlbnRlciI6IkdTRkMifV19LHsibGlua3MiOlt7InJlbCI6InByZXZpZXciLCJyZW5kZXIiOiJpbWFnZSIsImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDExNjUvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDExNjV+dGh1bWIuanBnIn1dLCJocmVmIjoiaHR0cHM6Ly9pbWFnZXMtYXNzZXRzLm5hc2EuZ292L2ltYWdlL0dTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMTY1L2NvbGxlY3Rpb24uanNvbiIsImRhdGEiOlt7ImtleXdvcmRzIjpbIkh1YmJsZSBXaXRuZXNzZXMgYW4gQXN0ZXJvaWQgTXlzdGVyaW91c2x5IERpc2ludGVncmF0aW5nIl0sImxvY2F0aW9uIjoiR3JlZW5iZWx0LCBNRCIsIm5hc2FfaWQiOiJHU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTE2NSIsImRhdGVfY3JlYXRlZCI6IjIwMTQtMDMtMDZUMTc6MDE6MDhaIiwibWVkaWFfdHlwZSI6ImltYWdlIiwiZGVzY3JpcHRpb24iOiJUaGlzIHNlcmllcyBvZiBpbWFnZXMgc2hvd3MgdGhlIGFzdGVyb2lkIFAvMjAxMyBSMyBicmVha2luZyBhcGFydCwgYXMgdmlld2VkIGJ5IHRoZSBOQVNBL0VTQSBIdWJibGUgU3BhY2UgVGVsZXNjb3BlIGluIDIwMTMuIFRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgdGhhdCBzdWNoIGEgYm9keSBoYXMgYmVlbiBzZWVuIHRvIHVuZGVyZ28gdGhpcyBraW5kIG9mIGJyZWFrLXVwLiAgVGhlIEh1YmJsZSBvYnNlcnZhdGlvbnMgc2hvd2VkIHRoYXQgdGhlcmUgYXJlIHRlbiBkaXN0aW5jdCBvYmplY3RzLCBlYWNoIHdpdGggY29tZXQtbGlrZSBkdXN0IHRhaWxzLCBlbWJlZGRlZCB3aXRoaW4gdGhlIGFzdGVyb2lkJ3MgZHVzdHkgZW52ZWxvcGUuIFRoZSBmb3VyIGxhcmdlc3Qgcm9ja3kgZnJhZ21lbnRzIGFyZSB1cCB0byAyMDAgbWV0cmVzIGluIHJhZGl1cywgYWJvdXQgdHdpY2UgdGhlIGxlbmd0aCBvZiBhIGZvb3RiYWxsIHBpdGNoLiAgVGhlIGRhdGUgaW5jcmVhc2VzIGZyb20gbGVmdCB0byByaWdodCwgd2l0aCBmcmFtZXMgZnJvbSAyOSBPY3RvYmVyIDIwMTMsIDE1IE5vdmVtYmVyIDIwMTMsIDEzIERlY2VtYmVyIDIwMTMsIGFuZCAxNCBKYW51YXJ5IDIwMTQgcmVzcGVjdGl2ZWx5LCBzaG93aW5nIGhvdyB0aGUgY2x1bXBzIG9mIGRlYnJpcyBtYXRlcmlhbCBtb3ZlIGFyb3VuZC4gVGhlIDE0IEphbnVhcnkgMjAxNCBmcmFtZSB3YXMgbm90IGluY2x1ZGVkIGluIHRoZSBzY2llbmNlIHBhcGVyIGFuZCBpcyBhZGRpdGlvbmFsIGRhdGEuICBDcmVkaXQ6IE5BU0EsIEVTQSwgRC4gSmV3aXR0IChVQ0xBKSAgUmVhZCBtb3JlOiA8YSBocmVmPVwiaHR0cDovLzEudXNhLmdvdi8xaWcyRTB4XCIgcmVsPVwibm9mb2xsb3dcIj4xLnVzYS5nb3YvMWlnMkUweDwvYT4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJ0aXRsZSI6Ikh1YmJsZSBXaXRuZXNzZXMgYW4gQXN0ZXJvaWQgTXlzdGVyaW91c2x5IERpc2ludGVncmF0aW5nIiwiY2VudGVyIjoiR1NGQyJ9XX0seyJsaW5rcyI6W3sicmVsIjoicHJldmlldyIsInJlbmRlciI6ImltYWdlIiwiaHJlZiI6Imh0dHBzOi8vaW1hZ2VzLWFzc2V0cy5uYXNhLmdvdi9pbWFnZS9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTE2Ni9HU0ZDXzIwMTcxMjA4X0FyY2hpdmVfZTAwMTE2Nn50aHVtYi5qcGcifV0sImhyZWYiOiJodHRwczovL2ltYWdlcy1hc3NldHMubmFzYS5nb3YvaW1hZ2UvR1NGQ18yMDE3MTIwOF9BcmNoaXZlX2UwMDExNjYvY29sbGVjdGlvbi5qc29uIiwiZGF0YSI6W3sia2V5d29yZHMiOlsiSHViYmxlIFdpdG5lc3NlcyBhbiBBc3Rlcm9pZCBNeXN0ZXJpb3VzbHkgRGlzaW50ZWdyYXRpbmciXSwibG9jYXRpb24iOiJHcmVlbmJlbHQsIE1EIiwibmFzYV9pZCI6IkdTRkNfMjAxNzEyMDhfQXJjaGl2ZV9lMDAxMTY2IiwiZGF0ZV9jcmVhdGVkIjoiMjAxNC0wMy0wNlQxNzowMTowOFoiLCJtZWRpYV90eXBlIjoiaW1hZ2UiLCJkZXNjcmlwdGlvbiI6IlRob3VnaCBmcmFnaWxlIGNvbWV0IG51Y2xlaSBoYXZlIGJlZW4gc2VlbiBmYWxsaW5nIGFwYXJ0IGFzIHRoZXkgbmVhciB0aGUgU3VuLCBub3RoaW5nIGxpa2UgdGhlIHNsb3cgYnJlYWt1cCBvZiBhbiBhc3Rlcm9pZCBoYXMgZXZlciBiZWZvcmUgYmVlbiBvYnNlcnZlZCBpbiB0aGUgYXN0ZXJvaWQgYmVsdC4gQSBzZXJpZXMgb2YgSHViYmxlIFNwYWNlIFRlbGVzY29wZSBpbWFnZXMgc2hvd3MgdGhhdCB0aGUgZnJhZ21lbnRzIGFyZSBkcmlmdGluZyBhd2F5IGZyb20gZWFjaCBvdGhlciBhdCBhIGxlaXN1cmVseSBvbmUgbWlsZSBwZXIgaG91ci4gVGhpcyBtYWtlcyBpdCB1bmxpa2VseSB0aGF0IHRoZSBhc3Rlcm9pZCBpcyBkaXNpbnRlZ3JhdGluZyBiZWNhdXNlIG9mIGEgY29sbGlzaW9uIHdpdGggYW5vdGhlciBhc3Rlcm9pZC4gQSBwbGF1c2libGUgZXhwbGFuYXRpb24gaXMgdGhhdCB0aGUgYXN0ZXJvaWQgaXMgY3J1bWJsaW5nIGR1ZSB0byBhIHN1YnRsZSBlZmZlY3Qgb2Ygc3VubGlnaHQuIFRoaXMgY2F1c2VzIHRoZSByb3RhdGlvbiByYXRlIHRvIHNsb3dseSBpbmNyZWFzZSB1bnRpbCBjZW50cmlmdWdhbCBmb3JjZSBwdWxscyB0aGUgYXN0ZXJvaWQgYXBhcnQuIFRoZSBhc3Rlcm9pZCdzIHJlbW5hbnQgZGVicmlzLCB3ZWlnaGluZyBpbiBhdCAyMDAsMDAwIHRvbnMsIHdpbGwgaW4gdGhlIGZ1dHVyZSBwcm92aWRlIGEgcmljaCBzb3VyY2Ugb2YgbWV0ZW9yb2lkcy4gIEh1YmJsZSBPYnNlcnZhdGlvbiBvZiBQLzIwMTMgUjMgLSBOb3ZlbWJlciAxNSwgMjAxMyAgQ3JlZGl0OiBOQVNBLCBFU0EsIGFuZCBELiBKZXdpdHQgKFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSwgTG9zIEFuZ2VsZXMpICAgUmVhZCBtb3JlOiA8YSBocmVmPVwiaHR0cDovLzEudXNhLmdvdi8xaWcyRTB4XCIgcmVsPVwibm9mb2xsb3dcIj4xLnVzYS5nb3YvMWlnMkUweDwvYT4gIDxiPjxhIGhyZWY9XCJodHRwOi8vd3d3Lm5hc2EuZ292L2F1ZGllbmNlL2Zvcm1lZGlhL2ZlYXR1cmVzL01QX1Bob3RvX0d1aWRlbGluZXMuaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBpbWFnZSB1c2UgcG9saWN5LjwvYT48L2I+ICAgPGI+PGEgaHJlZj1cImh0dHA6Ly93d3cubmFzYS5nb3YvY2VudGVycy9nb2RkYXJkL2hvbWUvaW5kZXguaHRtbFwiIHJlbD1cIm5vZm9sbG93XCI+TkFTQSBHb2RkYXJkIFNwYWNlIEZsaWdodCBDZW50ZXI8L2E+PC9iPiBlbmFibGVzIE5BU0HigJlzIG1pc3Npb24gdGhyb3VnaCBmb3VyIHNjaWVudGlmaWMgZW5kZWF2b3JzOiBFYXJ0aCBTY2llbmNlLCBIZWxpb3BoeXNpY3MsIFNvbGFyIFN5c3RlbSBFeHBsb3JhdGlvbiwgYW5kIEFzdHJvcGh5c2ljcy4gR29kZGFyZCBwbGF5cyBhIGxlYWRpbmcgcm9sZSBpbiBOQVNB4oCZcyBhY2NvbXBsaXNobWVudHMgYnkgY29udHJpYnV0aW5nIGNvbXBlbGxpbmcgc2NpZW50aWZpYyBrbm93bGVkZ2UgdG8gYWR2YW5jZSB0aGUgQWdlbmN54oCZcyBtaXNzaW9uLiAgIDxiPkZvbGxvdyB1cyBvbiA8YSBocmVmPVwiaHR0cDovL3R3aXR0ZXIuY29tL05BU0FHb2RkYXJkUGl4XCIgcmVsPVwibm9mb2xsb3dcIj5Ud2l0dGVyPC9hPjwvYj4gICA8Yj5MaWtlIHVzIG9uIDxhIGhyZWY9XCJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9wYWdlcy9HcmVlbmJlbHQtTUQvTkFTQS1Hb2RkYXJkLzM5NTAxMzg0NTg5Nz9yZWY9dHNkXCIgcmVsPVwibm9mb2xsb3dcIj5GYWNlYm9vazwvYT48L2I+ICAgPGI+RmluZCB1cyBvbiA8YSBocmVmPVwiaHR0cDovL2luc3RhZ3JhbS5jb20vbmFzYWdvZGRhcmQ/dm09Z3JpZFwiIHJlbD1cIm5vZm9sbG93XCI+SW5zdGFncmFtPC9hPjwvYj4iLCJ0aXRsZSI6Ikh1YmJsZSBXaXRuZXNzZXMgYW4gQXN0ZXJvaWQgTXlzdGVyaW91c2x5IERpc2ludGVncmF0aW5nIiwiY2VudGVyIjoiR1NGQyJ9XX1dfX0=
    http_version: 
  recorded_at: Wed, 27 Feb 2019 04:52:26 GMT
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '275228'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Wed, 27 Feb 2019 04:52:26 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 02400e961e7094d2c4fff83bc2205fc3.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - MixnzegniiR1dUrueKnffgT-9d6khulDGZstJef0p4hOsE08SdH0bA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 27 Feb 2019 04:52:26 GMT
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '275228'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Wed, 27 Feb 2019 04:52:27 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4f207e8e6ea0b2fb26ac9c498a6c522c.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - m7pKkSDVb3MaAJCS2uRVGr7-Lg71Bjnbxr9m4BelfqEze6hBsgxxtQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 27 Feb 2019 04:52:27 GMT
recorded_with: VCR 4.0.0
