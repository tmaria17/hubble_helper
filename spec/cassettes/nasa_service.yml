---
http_interactions:
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '276432'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Tue, 26 Feb 2019 00:29:29 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9106b78e193d93c4369ca72b57d1f212.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - 8bPvWPu2N6IdsCXIbMb_1qFRzA0FQG2f6-_XyOwTHUjUgX4fEdWNuQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"collection":{"metadata":{"total_hits":436},"items":[{"data":[{"description":"The smudge of stars at the center of this NASA/ESA Hubble Space Telescope image is a galaxy known as UGC 5797. UGC 5797 is an emission line galaxy, meaning that it is currently undergoing active star formation. The result is a stellar population that is constantly being refurbished as massive bright blue stars form. Galaxies with prolific star formation are not only veiled in a blue tint, but are key to the continuation of a stellar cycle.  In this image UGC 5797 appears in front of a background of spiral galaxies. Spiral galaxies have copious amounts of dust and gas — the main ingredient for stars — and therefore often also belong to the class of emission line galaxies.  Spiral galaxies have disk-like shapes that drastically vary in appearance depending on the angle at which they are observed. The collection of spiral galaxies in this frame exhibits this attribute acutely: Some are viewed face-on, revealing the structure of the spiral arms, while the two in the bottom left are seen edge-on, appearing as plain streaks in the sky. There are many spiral galaxies, with varying colors and at different angles, sprinkled across this image — just take a look.   Credit: ESA/Hubble & NASA, Acknowledgement: Luca Limatola","nasa_id":"hubble-eyes-galactic-refurbishment_17322896925_o","keywords":["Hubble","galaxy","UGC 5797."],"title":"Hubble Eyes Galactic Refurbishment","media_type":"image","center":"GSFC","date_created":"2015-04-30T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-eyes-galactic-refurbishment_17322896925_o/hubble-eyes-galactic-refurbishment_17322896925_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-eyes-galactic-refurbishment_17322896925_o/collection.json"},{"data":[{"description":"Astronomers using NASA’s Hubble Space Telescope have uncovered surprising new clues about a hefty, rapidly aging star whose behavior has never been seen before in our Milky Way galaxy. In fact, the star is so weird that astronomers have nicknamed it “Nasty 1,” a play on its catalog name of NaSt1. The star may represent a brief transitory stage in the evolution of extremely massive stars.  First discovered several decades ago, Nasty 1 was identified as a Wolf-Rayet star, a rapidly evolving star that is much more massive than our sun. The star loses its hydrogen-filled outer layers quickly, exposing its super-hot and extremely bright helium-burning core.  But Nasty 1 doesn’t look like a typical Wolf-Rayet star. The astronomers using Hubble had expected to see twin lobes of gas flowing from opposite sides of the star, perhaps similar to those emanating from the massive star Eta Carinae, which is a Wolf-Rayet candidate.   Instead, Hubble revealed a pancake-shaped disk of gas encircling the star. The vast disk is nearly 2 trillion miles wide, and may have formed from an unseen companion star that snacked on the outer envelope of the newly formed Wolf-Rayet.  Based on current estimates, the nebula surrounding the stars is just a few thousand years old, and as close as 3,000 light-years from Earth.  Credits: NASA/Hubble","nasa_id":"hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o","keywords":["Hubble","Milky Way","star"],"title":"Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’","media_type":"image","center":"GSFC","date_created":"2015-03-21T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o/collection.json"},{"data":[{"title":"Hubble 25","nasa_id":"GSFC_20171208_Archive_e000741","keywords":["Hubble 25"],"description":"If you love Hubble as much as we do you will LOVE this video.  Sit back and enjoy 25 mesmerizing years of Hubble images!  #Hubble25  You can view all of these images on Flickr here: <a href=\"https://www.flickr.com/photos/40523828@N07/sets/72157649692430461\">www.flickr.com/photos/40523828@N07/sets/72157649692430461</a>  Credit NASA Goddard","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-04-23T21:06:59Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000741/GSFC_20171208_Archive_e000741~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000741/collection.json"},{"data":[{"description":"Astronomers are using the NASA/ESA Hubble Space Telescope to study auroras — stunning light shows in a planet’s atmosphere — on the poles of the largest planet in the solar system, Jupiter. This observation program is supported by measurements made by NASA’s Juno spacecraft, currently on its way to Jupiter.  Jupiter, the largest planet in the solar system, is best known for its colorful storms, the most famous being the Great Red Spot. Now astronomers have focused on another beautiful feature of the planet, using Hubble's ultraviolet capabilities.  The extraordinary vivid glows shown in the new observations are known as auroras. They are created when high-energy particles enter a planet’s atmosphere near its magnetic poles and collide with atoms of gas. As well as producing beautiful images, this program aims to determine how various components of Jupiter’s auroras respond to different conditions in the solar wind, a stream of charged particles ejected from the sun.  This observation program is perfectly timed as NASA’s Juno spacecraft is currently in the solar wind near Jupiter and will enter the orbit of the planet in early July 2016. While Hubble is observing and measuring the auroras on Jupiter, Juno is measuring the properties of the solar wind itself; a perfect collaboration between a telescope and a space probe.  “These auroras are very dramatic and among the most active I have ever seen”, said Jonathan Nichols from the University of Leicester, U.K., and principal investigator of the study. “It almost seems as if Jupiter is throwing a firework party for the imminent arrival of Juno.”   Credits: NASA, ESA, and J. Nichols (University of Leicester)","nasa_id":"hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o","keywords":["Hubble","Jupiter","Aurora","Auroras"],"title":"Hubble Captures Vivid Auroras in Jupiter’s Atmosphere","media_type":"image","center":"GSFC","date_created":"2016-06-30T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o/collection.json"},{"data":[{"description":"Hubble’s Spirograph  In this classic Hubble image from 2000, the planetary nebula IC 418 glows like a multifaceted jewel with enigmatic patterns. IC 418 lies about 2,000 light-years from Earth in the direction of the constellation Lepus.   A planetary nebula represents the final stage in the evolution of a star similar to our sun. The star at the center of IC 418 was a red giant a few thousand years ago, but then ejected its outer layers into space to form the nebula, which has now expanded to a diameter of about 0.1 light-year. The stellar remnant at the center is the hot core of the red giant, from which ultraviolet radiation floods out into the surrounding gas, causing it to fluoresce. Over the next several thousand years, the nebula will gradually disperse into space, and then the star will cool and fade away for billions of years as a white dwarf. Our own sun is expected to undergo a similar fate, but fortunately, this will not occur until some 5 billion years from now.  The Hubble image of IC 418 is shown with colors added to represent the different camera filters used that isolate light from various chemical elements. Red shows emission from ionized nitrogen (the coolest gas in the nebula, located furthest from the hot nucleus), green shows emission from hydrogen and blue traces the emission from ionized oxygen (the hottest gas, closest to the central star). The remarkable textures seen in the nebula are newly revealed by the Hubble Space Telescope, and their origin is still uncertain.   Read more: <a href=\"https://go.nasa.gov/2roofKS\" rel=\"nofollow\">go.nasa.gov/2roofKS</a>  Credit: NASA and The Hubble Heritage Team (STScI/AURA);  Acknowledgment: Dr. Raghvendra Sahai (JPL) and Dr. Arsen R. Hajian (USNO)","nasa_id":"GSFC_20171208_Archive_e000034","keywords":["Hubble’s Spirograph"],"title":"Hubble’s Spirograph","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000034/GSFC_20171208_Archive_e000034~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000034/collection.json"},{"data":[{"description":"Using NASA’s Hubble Space Telescope, astronomers have captured for the first time snapshots of fledging white dwarf stars beginning their slow-paced, 40-million-year migration from the crowded center of an ancient star cluster to the less populated suburbs.  White dwarfs are the burned-out relics of stars that rapidly lose mass, cool down and shut off their nuclear furnaces. As these glowing carcasses age and shed weight, their orbits begin to expand outward from the star cluster’s packed downtown. This migration is caused by a gravitational tussle among stars inside the cluster. Globular star clusters sort out stars according to their mass, governed by a gravitational billiard ball game where lower mass stars rob momentum from more massive stars. The result is that heavier stars slow down and sink to the cluster's core, while lighter stars pick up speed and move across the cluster to the edge. This process is known as \"mass segregation.\" Until these Hubble observations, astronomers had never definitively seen the dynamical conveyor belt in action.  Astronomers used Hubble to watch the white-dwarf exodus in the globular star cluster 47 Tucanae, a dense swarm of hundreds of thousands of stars in our Milky Way galaxy. The cluster resides 16,700 light-years away in the southern constellation Tucana.  Credits: NASA, ESA, and H. Richer and J. Heyl (University of British Columbia, Vancouver, Canada); acknowledgement: J. Mack (STScI) and G. Piotto (University of Padova, Italy)","nasa_id":"hubble-catches-stellar-exodus-in-action_17644845341_o","keywords":["Hubble","space","star","dwarf stars","dwarf star","Globular star"],"title":"Hubble Catches Stellar Exodus in Action","media_type":"image","center":"GSFC","date_created":"2015-05-14T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-catches-stellar-exodus-in-action_17644845341_o/hubble-catches-stellar-exodus-in-action_17644845341_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-catches-stellar-exodus-in-action_17644845341_o/collection.json"},{"data":[{"description":"Image released 11 Aug 2011.  The &quot;Necklace Nebula&quot; is located 15,000 light-years away in the constellation Sagitta (the Arrow). In this composite image, taken on July 2, 2011, Hubble's Wide Field Camera 3 captured the glow of hydrogen (blue), oxygen (green), and nitrogen (red).  The object, aptly named the Necklace Nebula, is a recently discovered planetary nebula, the glowing remains of an ordinary, Sun-like star. The nebula consists of a bright ring, measuring 12 trillion miles wide, dotted with dense, bright knots of gas that resemble diamonds in a necklace.  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/necklace-nebula.html\" target=\"_blank\" rel=\"nofollow\"></a>  <b>Credit:</b> NASA, ESA, and the Hubble Heritage Team (STScI/AURA)  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://web.stagram.com/n/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001840","keywords":["Hubble's Necklace","nasa","goddard","hubble"],"title":"Hubble's Necklace","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001840/GSFC_20171208_Archive_e001840~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001840/collection.json"},{"data":[{"description":"Fireworks shows are not just confined to Earth’s skies. NASA’s Hubble Space Telescope has captured a spectacular fireworks display in a small, nearby galaxy, which resembles a July 4th skyrocket.  A firestorm of star birth is lighting up one end of the diminutive galaxy Kiso 5639. The dwarf galaxy is shaped like a flattened pancake, but because it is tilted edge-on, it resembles a skyrocket, with a brilliant blazing head and a long, star-studded tail.  Kiso 5639 is a rare, nearby example of elongated galaxies that occur in abundance at larger distances, where we observe the universe during earlier epochs. Astronomers suggest that the frenzied star birth is sparked by intergalactic gas raining on one end of the galaxy as it drifts through space.  “I think Kiso 5639 is a beautiful, up-close example of what must have been common long ago,” said lead researcher Debra Elmegreen of Vassar College, in Poughkeepsie, New York. “The current thinking is that galaxies in the early universe grow from accreting gas from the surrounding neighborhood. It’s a stage that galaxies, including our Milky Way, must go through as they are growing up.”  Observations of the early universe, such as Hubble’s Ultra-Deep Field, reveal that about 10 percent of all galaxies have these elongated shapes, and are collectively called “tadpoles.” But studies of the nearby universe have turned up only a few of these unusual galaxies, including Kiso 5639. The development of the nearby star-making tadpole galaxies, however, has lagged behind that of their peers, which have spent billions of years building themselves up into many of the spiral galaxies seen today.  Elmegreen used Hubble’s Wide Field Camera 3 to conduct a detailed imaging study of Kiso 5639. The images in different filters reveal information about an object by dissecting its light into its component colors. Hubble’s crisp resolution helped Elmegreen and her team analyze the giant star-forming clumps in Kiso 5639 and determine the masses and ages of the star clusters.  The international team of researchers selected Kiso 5639 from a spectroscopic survey of 10 nearby tadpole galaxies, observed with the Grand Canary Telescope in La Palma, Spain, by Jorge Sanchez Almeida and collaborators at the Instituto de Astrofisica de Canarias. The observations revealed that in most of those galaxies, including Kiso 5639, the gas composition is not uniform.  The bright gas in the galaxy’s head contains fewer heavier elements (collectively called “metals”), such as carbon and oxygen, than the rest of the galaxy. Stars consist mainly of hydrogen and helium, but cook up other “heavier” elements. When the stars die, they release their heavy elements and enrich the surrounding gas.  “The metallicity suggests that there has to be rather pure gas, composed mostly of hydrogen, coming into the star-forming part of the galaxy, because intergalactic space contains more pristine hydrogen-rich gas,” Elmegreen explained. “Otherwise, the starburst region should be as rich in heavy elements as the rest of the galaxy.”  Hubble offers a detailed view of the galaxy’s star-making frenzy. The telescope uncovered several dozen clusters of stars in the galaxy’s star-forming head, which spans 2,700 light-years across. These clusters have an average age of less than 1 million years and masses that are three to six times larger than those in the rest of the galaxy. Other star formation is taking place throughout the galaxy but on a much smaller scale. Star clusters in the rest of the galaxy are between several million to a few billion years old.  “There is much more star formation going on in the head than what you would expect in such a tiny galaxy,” said team member Bruce Elmegreen of IBM’s Thomas J. Watson’s Research Center, in Yorktown Heights, New York. “And we think the star formation is triggered by the ongoing accretion of metal-poor gas onto a part of an otherwise quiescent dwarf galaxy.”  Hubble also revealed giant holes peppered throughout the galaxy’s starburst head. These cavities give the galaxy’s head a Swiss-cheese appearance because numerous supernova detonations – like firework aerial bursts – have carved out holes of rarified superheated gas.  The galaxy, located 82 million light-years away, has taken billions of years to develop because it has been drifting through an isolated “desert” in the universe, devoid of much gas.  What triggered the starburst in such a backwater galaxy? Based on simulations by Daniel Ceverino of the Center for Astronomy at Heidelberg University in Germany, and other team members, the observations suggest that less than 1 million years ago, Kiso 5639’s leading edge encountered a filament of gas. The filament dropped a large clump of matter onto the galaxy, stoking the vigorous star birth.  Debra Elmegreen expects that in the future other parts of the galaxy will join in the star-making fireworks show. “Galaxies rotate, and as Kiso 5639 continues to spin, another part of the galaxy may receive an infusion of new gas from this filament, instigating another round of star birth,” she said.  The team’s results have been accepted for publication in The Astrophysical Journal.  Other team members include Casiana Munoz-Tunon and Mercedes Filho (Instituto de Astrofísica de Canarias, Canary Islands), Jairo Mendez-Abreu (University of St. Andrews, United Kingdom), John Gallagher (University of Wisconsin-Madison), and Marc Rafelski (NASA's Goddard Space Flight Center, Greenbelt, Maryland).  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.","nasa_id":"hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o","keywords":["Hubble","Galaxy","Kiso 5639"],"title":"Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","media_type":"image","center":"GSFC","date_created":"2016-06-29T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o/collection.json"},{"data":[{"description":"In the center of this image, taken with the NASA/ESA Hubble Space Telescope, is the galaxy cluster SDSS J1038+4849 — and it seems to be smiling.  You can make out its two orange eyes and white button nose. In the case of this “happy face”, the two eyes are very bright galaxies and the misleading smile lines are actually arcs caused by an effect known as strong gravitational lensing.  Galaxy clusters are the most massive structures in the Universe and exert such a powerful gravitational pull that they warp the spacetime around them and act as cosmic lenses which can magnify, distort and bend the light behind them. This phenomenon, crucial to many of Hubble’s discoveries, can be explained by Einstein’s theory of general relativity.  In this special case of gravitational lensing, a ring — known as an Einstein Ring — is produced from this bending of light, a consequence of the exact and symmetrical alignment of the source, lens and observer and resulting in the ring-like structure we see here.  Hubble has provided astronomers with the tools to probe these massive galaxies and model their lensing effects, allowing us to peer further into the early Universe than ever before. This object was studied by Hubble’s Wide Field and Planetary Camera 2 (WFPC2) and Wide Field Camera 3 (WFC3) as part of a survey of strong lenses.  A version of this image was entered into the Hubble’s Hidden Treasures image processing competition by contestant Judy Schmidt.  Image Credit: NASA/ESA ","nasa_id":"GSFC_20171208_Archive_e000791","keywords":["Hubble Sees A Smiling Lens"],"title":"Hubble Sees A Smiling Lens","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-02-10T16:40:13Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000791/GSFC_20171208_Archive_e000791~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000791/collection.json"},{"data":[{"description":"This shot from the NASA/ESA Hubble Space Telescope shows a maelstrom of glowing gas and dark dust within one of the Milky Way’s satellite galaxies, the Large Magellanic Cloud (LMC).  This stormy scene shows a stellar nursery known as N159, an HII region over 150 light-years across. N159 contains many hot young stars. These stars are emitting intense ultraviolet light, which causes nearby hydrogen gas to glow, and torrential stellar winds, which are carving out ridges, arcs, and filaments from the surrounding material.  At the heart of this cosmic cloud lies the Papillon Nebula, a butterfly-shaped region of nebulosity. This small, dense object is classified as a High-Excitation Blob, and is thought to be tightly linked to the early stages of massive star formation.  N159 is located over 160,000 light-years away. It resides just south of the Tarantula Nebula (heic1402), another massive star-forming complex within the LMC.  This image comes from Hubble’s Advanced Camera for Surveys.  The region was previously imaged by Hubble’s Wide Field Planetary Camera 2, which also resolved the Papillon Nebula for the first time.   Credit: ESA/Hubble &amp; NASA","nasa_id":"GSFC_20171208_Archive_e000226","keywords":["Hubble Peers into the Storm","lha120n159"],"title":"Hubble Peers into the Storm","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000226/GSFC_20171208_Archive_e000226~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000226/collection.json"},{"data":[{"title":"Hubble's Cosmic Atlas","nasa_id":"GSFC_20171208_Archive_e000013","keywords":["Hubble's Cosmic Atlas","ngc4248"],"description":"Morphologies, masses, and structures - oh, my!   This beautiful clump of glowing gas, dark dust and glittering stars is the spiral galaxy NGC 4248, located about 24 million light-years away in the constellation of Canes Venatici (The Hunting Dogs).  This image was produced by the NASA/ESA Hubble Space Telescope as it embarked upon compiling the first Hubble ultraviolet “atlas,” for which the telescope targeted 50 nearby star-forming galaxies. The collection spans all kinds of different morphologies, masses, and structures. Studying this sample can help us to piece together the star-formation history of the Universe.  By exploring how massive stars form and evolve within such galaxies, astronomers can learn more about how, when, and where star formation occurs, how star clusters change over time, and how the process of forming new stars is related to the properties of both the host galaxy and the surrounding interstellar medium (the gas and dust that fills the space between individual stars).  This galaxy was imaged with observations from Hubble’s Wide Field Camera 3.  Image credit: ESA/Hubble &amp; NASA  ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000013/GSFC_20171208_Archive_e000013~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000013/collection.json"},{"data":[{"title":"Hubble Space Telescope","nasa_id":"GSFC_20171208_Archive_e002151","keywords":["Hubble Space Telescope","shiny","space","nasa","telescope","galaxy","spaceshuttle","goddard","hubble","hst","sm4","hubblespacetelescope","spaceshuttleatlantis","goddardspaceflightcenter","sts125"],"description":"The Hubble Space Telescope in a picture snapped by a Servicing Mission 4 crewmember just after the Space Shuttle Atlantis captured Hubble with its robotic arm on May 13, 2009, beginning the mission to upgrade and repair the telescope.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute conducts Hubble science operations.  Goddard is responsible for HST project management, including mission and science operations, servicing missions, and all associated development activities.  To learn more about the Hubble Space Telescope go here:  <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002151/GSFC_20171208_Archive_e002151~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002151/collection.json"},{"data":[{"title":"Hubble's Megamaser Galaxy","nasa_id":"GSFC_20171208_Archive_e000001","keywords":["Hubble's Megamaser Galaxy","mcg0138004","mcg0138005"],"description":"Feast your eyes on Hubble's Megamaser galaxy!   Phenomena across the Universe emit radiation spanning the entire electromagnetic spectrum — from high-energy gamma rays, which stream out from the most energetic events in the cosmos, to lower-energy microwaves and radio waves.  Microwaves, the very same radiation that can heat up your dinner, are produced by a multitude of astrophysical sources, including strong emitters known as masers (microwave lasers), even stronger emitters with the somewhat villainous name of megamasers and the centers of some galaxies. Especially intense and luminous galactic centers are known as active galactic nuclei. They are in turn thought to be driven by the presence of supermassive black holes, which drag surrounding material inwards and spit out bright jets and radiation as they do so.  The two galaxies shown here, imaged by the NASA/ESA Hubble Space Telescope, are named MCG+01-38-004 (the upper, red-tinted one) and MCG+01-38-005 (the lower, blue-tinted one). MCG+01-38-005 (also known as NGC 5765B) is a special kind of megamaser; the galaxy’s active galactic nucleus pumps out huge amounts of energy, which stimulates clouds of surrounding water. Water’s constituent atoms of hydrogen and oxygen are able to absorb some of this energy and re-emit it at specific wavelengths, one of which falls within the microwave regime, invisible to Hubble but detectable by microwave telescopes. MCG+01-38-005 is thus known as a water megamaser!  Astronomers can use such objects to probe the fundamental properties of the Universe. The microwave emissions from MCG+01-38-005 were used to calculate a refined value for the Hubble constant, a measure of how fast the Universe is expanding. This constant is named after the astronomer whose observations were responsible for the discovery of the expanding Universe and after whom the Hubble Space Telescope was named, Edwin Hubble.  ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000001/GSFC_20171208_Archive_e000001~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000001/collection.json"},{"data":[{"description":"This still image of the Hubble Space Telescope was captured by an STS-125 crew member as the two spacecraft continue their relative separation.  During the week five spacewalks were performed to complete the final servicing mission for the orbital observatory.  Photo credit: NASA May 19, 2009","nasa_id":"GSFC_20171208_Archive_e002219","keywords":["Hubble On Its Way"],"title":"Hubble On Its Way","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2009-05-21T02:44:31Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002219/GSFC_20171208_Archive_e002219~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002219/collection.json"},{"data":[{"description":"This stunning image, captured by the NASA/ESA Hubble Space Telescope’s Advanced Camera for Surveys (ACS), shows part of the sky in the constellation of Sagittarius (The Archer). The region is rendered in exquisite detail — deep red and bright blue stars are scattered across the frame, set against a background of thousands of more distant stars and galaxies. Two features are particularly striking: the colors of the stars, and the dramatic crosses that burst from the centers of the brightest bodies.  While some of the colors in this frame have been enhanced and tweaked during the process of creating the image from the observational data, different stars do indeed glow in different colors. Stars differ in color according to their surface temperature: very hot stars are blue or white, while cooler stars are redder. They may be cooler because they are smaller, or because they are very old and have entered the red giant phase, when an old star expands and cools dramatically as its core collapses.  The crosses are nothing to do with the stars themselves, and, because Hubble orbits above Earth’s atmosphere, nor are they due to any kind of atmospheric disturbance. They are actually known as diffraction spikes, and are caused by the structure of the telescope itself.  Like all big modern telescopes, Hubble uses mirrors to capture light and form images. Its secondary mirror is supported by struts, called telescope spiders, arranged in a cross formation, and they diffract the incoming light. Diffraction is the slight bending of light as it passes near the edge of an object. Every cross in this image is due to a single set of struts within Hubble itself! Whilst the spikes are technically an inaccuracy, many astrophotographers choose to emphasize and celebrate them as a beautiful feature of their images.  Image credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000137","keywords":["Hubble's Slice of Sagittarius"],"title":"Hubble's Slice of Sagittarius","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000137/GSFC_20171208_Archive_e000137~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000137/collection.json"},{"data":[{"description":"Peering deep into the early universe, this picturesque parallel field observation from the NASA/ESA Hubble Space Telescope reveals thousands of colorful galaxies swimming in the inky blackness of space. A few foreground stars from our own galaxy, the Milky Way, are also visible.  In October 2013 Hubble’s Wide Field Camera 3 (WFC3) and Advanced Camera for Surveys (ACS) began observing this portion of sky as part of the Frontier Fields program. This spectacular skyscape was captured during the study of the giant galaxy cluster Abell 2744, otherwise known as Pandora’s Box. While one of Hubble’s cameras concentrated on Abell 2744, the other camera viewed this adjacent patch of sky near to the cluster.  Containing countless galaxies of various ages, shapes and sizes, this parallel field observation is nearly as deep as the Hubble Ultra-Deep Field. In addition to showcasing the stunning beauty of the deep universe in incredible detail, this parallel field — when compared to other deep fields — will help astronomers understand how similar the universe looks in different directions.  Image credit: NASA, ESA and the HST Frontier Fields team (STScI),   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000394","keywords":["Hubble Sees a Legion of Galaxies","space","nasa","hubble","nasagoddard","abell2744"],"title":"Hubble Sees a Legion of Galaxies","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000394/GSFC_20171208_Archive_e000394~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000394/collection.json"},{"data":[{"title":"Hubble Spies a UFO","nasa_id":"GSFC_20171208_Archive_e001757","keywords":["Hubble Spies a UFO","space","nasa","galaxy","hubble","hst","ufogalaxy"],"description":"The Hubble Space Telescope has spotted a UFO — well, the UFO Galaxy, to be precise. NGC 2683 is a spiral galaxy seen almost edge-on, giving it the shape of a classic science fiction spaceship. This is why the astronomers at the Astronaut Memorial Planetarium and Observatory gave it this attention-grabbing nickname. While a bird’s eye view lets us see the detailed structure of a galaxy (such as this Hubble image of a barred spiral), a side-on view has its own perks. In particular, it gives astronomers a great opportunity to see the delicate dusty lanes of the spiral arms silhouetted against the golden haze of the galaxy’s core. In addition, brilliant clusters of young blue stars shine scattered throughout the disc, mapping the galaxy’s star-forming regions. Perhaps surprisingly, side-on views of galaxies like this one do not prevent astronomers from deducing their structures. Studies of the properties of the light coming from NGC 2683 suggest that this is a barred spiral galaxy, even though the angle we see it at does not let us see this directly. NGC 2683, discovered on 5 February 1788 by the famous astronomer William Herschel, lies in the Northern constellation of Lynx. A constellation named not because of its resemblance to the feline animal, but because it is fairly faint, requiring the “sensitive eyes of a cat” to discern it. And when you manage to get a look at it, you’ll find treasures like this, making it well worth the effort. This image is produced from two adjacent fields observed in visible and infrared light by Hubble’s Advanced Camera for Surveys. A narrow strip which appears slightly blurred and crosses most the image horizontally is a result of a gap between Hubble’s detectors. This strip has been patched using images from observations of the galaxy made by ground-based telescopes, which show significantly less detail. The field of view is approximately 6.5 by 3.3 arcminutes.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001757/GSFC_20171208_Archive_e001757~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001757/collection.json"},{"data":[{"description":"Far beyond the stars in the constellation of Leo (The Lion) is irregular galaxy IC 559.  IC 559 is not your everyday galaxy. With its irregular shape and bright blue spattering of stars, it is a fascinating galactic anomaly. It may look like sparse cloud, but it is in fact full of gas and dust which is spawning new stars.  Discovered in 1893, IC 559 lacks the symmetrical spiral appearance of some of its galactic peers and not does not conform to a regular shape. It is actually classified as a “type Sm” galaxy — an irregular galaxy with some evidence for a spiral structure.  Irregular galaxies make up about a quarter of all known galaxies and do not fall into any of the regular classes of the Hubble sequence. Most of these uniquely shaped galaxies were not always so — IC 559 may have once been a conventional spiral galaxy that was then distorted and twisted by the gravity of a nearby cosmic companion.  This image, captured by the NASA/ESA Hubble Space Telescope’s Wide Field Camera 3, combines a wide range of wavelengths spanning the ultraviolet, optical, and infrared parts of the spectrum.  Image credit: ESA/Hubble, NASA, D. Calzetti (UMass) and the LEGUS Team  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000990","keywords":["Hubble Paints a Spattering of Blue"],"title":"Hubble Paints a Spattering of Blue","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-09-12T15:45:08Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000990/GSFC_20171208_Archive_e000990~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000990/collection.json"},{"data":[{"description":" A large blue bubble with a bright star in the center on a black background filled with stars  Sparkling at the center of this beautiful NASA/ESA Hubble Space Telescope image is a Wolf–Rayet star known as WR 31a, located about 30,000 light-years away in the constellation of Carina (The Keel).  The distinctive blue bubble appearing to encircle WR 31a is a Wolf–Rayet nebula — an interstellar cloud of dust, hydrogen, helium and other gases. Created when speedy stellar winds interact with the outer layers of hydrogen ejected by Wolf–Rayet stars, these nebulae are frequently ring-shaped or spherical. The bubble — estimated to have formed around 20,000 years ago — is expanding at a rate of around 220,000 kilometers (136,700 miles) per hour!  Unfortunately, the lifecycle of a Wolf–Rayet star is only a few hundred thousand years — the blink of an eye in cosmic terms. Despite beginning life with a mass at least 20 times that of the sun, Wolf–Rayet stars typically lose half their mass in less than 100,000 years. And WR 31a is no exception to this case. It will, therefore, eventually end its life as a spectacular supernova, and the stellar material expelled from its explosion will later nourish a new generation of stars and planets.  Image credi: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt","nasa_id":"GSFC_20171208_Archive_e000409","keywords":["Hubble's Blue Bubble","wr31a"],"title":"Hubble's Blue Bubble","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000409/GSFC_20171208_Archive_e000409~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000409/collection.json"},{"data":[{"description":"This new Hubble image showcases a remarkable variety of objects at different distances from us, extending back over halfway to the edge of the observable Universe. The galaxies in this image mostly lie about five billion light-years from Earth but the field also contains other objects, both significantly closer and far more distant.  Studies of this region of the sky have shown that many of the objects that appear to lie close together may actually be billions of light-years apart. This is because several groups of galaxies lie along our line of sight, creating something of an optical illusion. Hubble’s cross-section of the Universe is completed by distorted images of galaxies in the very distant background.  These objects are sometimes distorted due to a process called gravitational lensing, an extremely valuable technique in astronomy for studying very distant objects [1]. This lensing is caused by the bending of the space-time continuum by massive galaxies lying close to our line of sight to distant objects.  One of the lens systems visible here is called CLASS B1608+656, which appears as a small loop in the centre of the image. It features two foreground galaxies distorting and amplifying the light of a distant quasar the known as QSO-160913+653228. The light from this bright disc of matter, which is currently falling into a black hole, has taken nine billion years to reach us — two thirds of the age of the Universe.  As well as CLASS B1608+656, astronomers have identified two other gravitational lenses within this image. Two galaxies, dubbed Fred and Ginger by the researchers who studied them, contain enough mass to visibly distort the light from objects behind them. Fred, also known more prosaically as [FMK2006] ACS J160919+6532, lies near the lens galaxies in CLASS B1608+656, while Ginger ([FMK2006] ACS J160910+6532) is markedly closer to us. Despite their different distances from us, both can be seen near to CLASS B1608+656 in the central region of this Hubble image.  To capture distant and dim objects like these, Hubble required a long exposure. The image is made up of visible and infrared observations with a total exposure time of 14 hours.  More info: <a href=\"http://www.spacetelescope.org/news/heic1408/\" rel=\"nofollow\">www.spacetelescope.org/news/heic1408/</a>  Credit: NASA/ESA/Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001152","keywords":["Hubble’s cross-section of the cosmos"],"title":"Hubble’s cross-section of the cosmos","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-04-17T14:19:38Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001152/GSFC_20171208_Archive_e001152~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001152/collection.json"},{"data":[{"description":"NASA image release September 16, 2010  Enjoying a frozen treat on a hot summer day can leave a sticky mess as it melts in the Sun and deforms. In the cold vacuum of space, there is no edible ice cream, but there is radiation from massive stars that is carving away at cold molecular clouds, creating bizarre, fantasy-like structures.  These one-light-year-tall pillars of cold hydrogen and dust, imaged by the Hubble Space Telescope, are located in the Carina Nebula. Violent stellar winds and powerful radiation from massive stars are sculpting the surrounding nebula. Inside the dense structures, new stars may be born.  This image of dust pillars in the Carina Nebula is a composite of 2005 observations taken of the region in hydrogen light (light emitted by hydrogen atoms) along with 2010 observations taken in oxygen light (light emitted by oxygen atoms), both times with Hubble's Advanced Camera for Surveys. The immense Carina Nebula is an estimated 7,500 light-years away in the southern constellation Carina.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc. in Washington, D.C.  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","nasa_id":"GSFC_20171208_Archive_e001963","keywords":["Hubble Captures Cosmic Ice Sculptures","space","nasa","hubble"],"title":"Hubble Captures Cosmic Ice Sculptures","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001963/GSFC_20171208_Archive_e001963~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001963/collection.json"},{"data":[{"description":"The gravitational field surrounding this massive cluster of galaxies, Abell 68, acts as a natural lens in space to brighten and magnify the light coming from very distant background galaxies.  Like a fun house mirror, lensing creates a fantasy landscape of arc-like images and mirror images of background galaxies. The foreground cluster is 2 billion light-years away, and the lensed images come from galaxies far behind it.  In this photo, the image of a spiral galaxy at upper left has been stretched and mirrored into a shape similar to that of a simulated alien from the classic 1970s computer game &quot;Space Invaders!&quot; A second, less distorted image of the same galaxy appears to the left of the large, bright elliptical galaxy.  In the upper right of the photo is another striking feature of the image that is unrelated to gravitational lensing. What appears to be purple liquid dripping from a galaxy is a phenomenon called ram-pressure stripping. The gas clouds within the galaxy are being stripped out and heated up as the galaxy passes through a region of denser intergalactic gas.  This image was taken in infrared light by Hubble’s Wide Field Camera 3, and combined with near-infrared observations from Hubble’s Advanced Camera for Surveys.  The image is based in part on data spotted by Nick Rose in the Hubble’s Hidden Treasures image processing competition.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Md., manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Md., conducts Hubble science operations. STScI is operated by the Association of Universities for Research in Astronomy, Inc., in Washington.  To read more go to: <a href=\"http://1.usa.gov/Z6uDUp\" rel=\"nofollow\">1.usa.gov/Z6uDUp</a>  Credit: NASA and ESA Acknowledgement: N. Rose  For image files and more information about Abell 68, visit:  <a href=\"http://hubblesite.org/news/2013/09\" rel=\"nofollow\">hubblesite.org/news/2013/09</a> <a href=\"http://www.spacetelescope.org/news/heic04\" rel=\"nofollow\">www.spacetelescope.org/news/heic04</a> <a href=\"http://heritage.stsci.edu/2013/09\" rel=\"nofollow\">heritage.stsci.edu/2013/09</a> <a href=\"http://www.spacetelescope.org/projects/hiddentreasures/\" rel=\"nofollow\">www.spacetelescope.org/projects/hiddentreasures/</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001538","keywords":["Hubble Nabs Space Invaders?","space","spaceinvaders","nasa","hubble"],"title":"Hubble Nabs Space Invaders?","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001538/GSFC_20171208_Archive_e001538~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001538/collection.json"},{"data":[{"title":"Hubble Nabs Space Invaders?","nasa_id":"GSFC_20171208_Archive_e001539","keywords":["Hubble Nabs Space Invaders?","space","spaceinvaders","nasa","hubble"],"description":"The gravitational field surrounding this massive cluster of galaxies, Abell 68, acts as a natural lens in space to brighten and magnify the light coming from very distant background galaxies.  Like a fun house mirror, lensing creates a fantasy landscape of arc-like images and mirror images of background galaxies. The foreground cluster is 2 billion light-years away, and the lensed images come from galaxies far behind it.  In this photo, the image of a spiral galaxy at upper left has been stretched and mirrored into a shape similar to that of a simulated alien from the classic 1970s computer game &quot;Space Invaders!&quot; A second, less distorted image of the same galaxy appears to the left of the large, bright elliptical galaxy.  In the upper right of the photo is another striking feature of the image that is unrelated to gravitational lensing. What appears to be purple liquid dripping from a galaxy is a phenomenon called ram-pressure stripping. The gas clouds within the galaxy are being stripped out and heated up as the galaxy passes through a region of denser intergalactic gas.  This image was taken in infrared light by Hubble’s Wide Field Camera 3, and combined with near-infrared observations from Hubble’s Advanced Camera for Surveys.  The image is based in part on data spotted by Nick Rose in the Hubble’s Hidden Treasures image processing competition.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Md., manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Md., conducts Hubble science operations. STScI is operated by the Association of Universities for Research in Astronomy, Inc., in Washington.  Credit: NASA and ESA Acknowledgement: N. Rose  For image files and more information about Abell 68, visit:  <a href=\"http://hubblesite.org/news/2013/09\" rel=\"nofollow\">hubblesite.org/news/2013/09</a> <a href=\"http://www.spacetelescope.org/news/heic04\" rel=\"nofollow\">www.spacetelescope.org/news/heic04</a> <a href=\"http://heritage.stsci.edu/2013/09\" rel=\"nofollow\">heritage.stsci.edu/2013/09</a> <a href=\"http://www.spacetelescope.org/projects/hiddentreasures/\" rel=\"nofollow\">www.spacetelescope.org/projects/hiddentreasures/</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001539/GSFC_20171208_Archive_e001539~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001539/collection.json"},{"data":[{"description":"NASA image release December 14, 2010  A delicate sphere of gas, photographed by NASA's Hubble Space Telescope, floats serenely in the depths of space. The pristine shell, or bubble, is the result of gas that is being shocked by the expanding blast wave from a supernova. Called SNR 0509-67.5 (or SNR 0509 for short), the bubble is the visible remnant of a powerful stellar explosion in the Large Magellanic Cloud (LMC), a small galaxy about 160,000 light-years from Earth.  Ripples in the shell's surface may be caused by either subtle variations in the density of the ambient interstellar gas, or possibly driven from the interior by pieces of the ejecta. The bubble-shaped shroud of gas is 23 light-years across and is expanding at more than 11 million miles per hour (5,000 kilometers per second).  Astronomers have concluded that the explosion was one of an especially energetic and bright variety of supernovae. Known as Type Ia, such supernova events are thought to result from a white dwarf star in a binary system that robs its partner of material, takes on much more mass than it is able to handle, and eventually explodes.  Hubble's Advanced Camera for Surveys observed the supernova remnant on Oct. 28, 2006 with a filter that isolates light from glowing hydrogen seen in the expanding shell. These observations were then combined with visible-light images of the surrounding star field that were imaged with Hubble's Wide Field Camera 3 on Nov. 4, 2010.  With an age of about 400 years as seen from Earth, the supernova might have been visible to southern hemisphere observers around the year 1600, however, there are no known records of a &quot;new star&quot; in the direction of the LMC near that time. A more recent supernova in the LMC, SN 1987A, did catch the eye of Earth viewers and continues to be studied with ground- and space-based telescopes, including Hubble.  For images and more information about SNR 0509, visit:  <a href=\"http://hubblesite.org/news/2010/27\" rel=\"nofollow\">hubblesite.org/news/2010/27</a> <a href=\"http://heritage.stsci.edu/2010/27\" rel=\"nofollow\">heritage.stsci.edu/2010/27</a> <a href=\"http://www.nasa.gov/hubble\" rel=\"nofollow\">www.nasa.gov/hubble</a>  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc., in Washington, D.C.  <b>Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: J. Hughes (Rutgers University)</b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","nasa_id":"GSFC_20171208_Archive_e001934","keywords":["Hubble Supernova Bubble Resembles Holiday Ornament","nasa","hubble","holidayornament","goddardspaceflightcenter"],"title":"Hubble Supernova Bubble Resembles Holiday Ornament","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001934/GSFC_20171208_Archive_e001934~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001934/collection.json"},{"data":[{"description":"This image from the NASA/ESA Hubble Space Telescope shows the galaxy cluster MACSJ0717.5+3745. This is one of six being studied by the Hubble Frontier Fields programme, which together have produced the deepest images of gravitational lensing ever made. Due to the huge mass of the cluster it is bending the light of background objects, acting as a magnifying lens. It is one of the most massive galaxy clusters known, and it is also the largest known gravitational lens. Of all of the galaxy clusters known and measured, MACS J0717 lenses the largest area of the sky.","nasa_id":"hubble-spies-big-bang-frontiers_22202541749_o","keywords":["MACSJ0717.5+3745"],"title":"Hubble Frontier Fields view of MACSJ0717.5+3745","media_type":"image","center":"GSFC","date_created":"2015-10-22T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-spies-big-bang-frontiers_22202541749_o/hubble-spies-big-bang-frontiers_22202541749_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-spies-big-bang-frontiers_22202541749_o/collection.json"},{"data":[{"title":"NASA's Hubble Universe in 3-D","nasa_id":"GSFC_20171208_Archive_e002105","keywords":["NASA's Hubble Universe in 3-D","nasa","goddard","hubble","hst","orionnebula","gsfc","goddardspaceflightcenter","hubble3d"],"description":"This image depicts a vast canyon of dust and gas in the Orion Nebula from a 3-D computer model based on observations by NASA's Hubble Space Telescope and created by science visualization specialists at the Space Telescope Science Institute (STScI) in Baltimore, Md. A 3-D visualization of this model takes viewers on an amazing four-minute voyage through the 15-light-year-wide canyon.  Credit: NASA, G. Bacon, L. Frattare, Z. Levay, and F. Summers (STScI/AURA)  Go here to learn more about Hubble 3D:  <a href=\"http://www.nasa.gov/topics/universe/features/hubble_imax_premiere.html\" rel=\"nofollow\">www.nasa.gov/topics/universe/features/hubble_imax_premier...</a>  or  <a href=\"http://www.imax.com/hubble/\" rel=\"nofollow\">www.imax.com/hubble/</a>  Take an exhilarating ride through the Orion Nebula, a vast star-making factory 1,500 light-years away. Swoop through Orion's giant canyon of gas and dust. Fly past behemoth stars whose brilliant light illuminates and energizes the entire cloudy region. Zoom by dusty tadpole-shaped objects that are fledgling solar systems.  This virtual space journey isn't the latest video game but one of several groundbreaking astronomy visualizations created by specialists at the Space Telescope Science Institute (STScI) in Baltimore, the science operations center for NASA's Hubble Space Telescope. The cinematic space odysseys are part of the new Imax film &quot;Hubble 3D,&quot; which opens today at select Imax theaters worldwide.  The 43-minute movie chronicles the 20-year life of Hubble and includes highlights from the May 2009 servicing mission to the Earth-orbiting observatory, with footage taken by the astronauts.  The giant-screen film showcases some of Hubble's breathtaking iconic pictures, such as the Eagle Nebula's &quot;Pillars of Creation,&quot; as well as stunning views taken by the newly installed Wide Field Camera 3.  While Hubble pictures of celestial objects are awe-inspiring, they are flat 2-D photographs. For this film, those 2-D images have been converted into 3-D environments, giving the audience the impression they are space travelers taking a tour of Hubble's most popular targets.  &quot;A large-format movie is a truly immersive experience,&quot; says Frank Summers, an STScI astronomer and science visualization specialist who led the team that developed the movie visualizations. The team labored for nine months, working on four visualization sequences that comprise about 12 minutes of the movie.  &quot;Seeing these Hubble images in 3-D, you feel like you are flying through space and not just looking at picture postcards,&quot; Summers continued. &quot;The spacescapes are all based on Hubble images and data, though some artistic license is necessary to produce the full depth of field needed for 3-D.&quot;  The most ambitious sequence is a four-minute voyage through the Orion Nebula's gas-and-dust canyon, about 15 light-years across. During the ride, viewers will see bright and dark, gaseous clouds; thousands of stars, including a grouping of bright, hefty stars called the Trapezium; and embryonic planetary systems. The tour ends with a detailed look at a young circumstellar disk, which is much like the structure from which our solar system formed 4.5 billion years ago.  Based on a Hubble image of Orion released in 2006, the visualization was a collaborative effort between science visualization specialists at STScI, including Greg Bacon, who sculpted the Orion Nebula digital model, with input from STScI astronomer Massimo Roberto; the National Center for Supercomputing Applications at the University of Illinois at Urbana-Champaign; and the Spitzer Science Center at the California Institute of Technology in Pasadena.  For some of the sequences, STScI imaging specialists developed new techniques for transforming the 2-D Hubble images into 3-D. STScI image processing specialists Lisa Frattare and Zolt Levay, for example, created methods of splitting a giant gaseous pillar in the Carina Nebula into multiple layers to produce a 3-D effect, giving the structure depth. The Carina Nebula is a nursery for baby stars.  Frattare painstakingly removed the thousands of stars in the image so that Levay could separate the gaseous layers on the isolated Carina pillar. Frattare then replaced the stars into both foreground and background layers to complete the 3-D model. For added effect, the same separation was done for both visible and infrared Hubble images, allowing the film to cross-fade between wavelength views in 3-D.  In another sequence viewers fly into a field of 170,000 stars in the giant star cluster Omega Centauri. STScI astronomer Jay Anderson used his stellar database to create a synthetic star field in 3-D that matches recent razor-sharp Hubble photos.  The film's final four-minute sequence takes viewers on a voyage from our Milky Way Galaxy past many of Hubble's best galaxy shots and deep into space. Some 15,000 galaxies from Hubble's deepest surveys stretch billions of light-years across the universe in a 3-D sequence created by STScI astronomers and visualizers. The view dissolves into a cobweb that traces the universe's large-scale structure, the backbone from which galaxies were born.  In addition to creating visualizations, STScI's education group also provided guidance on the &quot;Hubble 3D&quot; Educator Guide, which includes standards-based lesson plans and activities about Hubble and its mission. Students will use the guide before or after seeing the movie.  &quot;The guide will enhance the movie experience for students and extend the movie into classrooms,&quot; says Bonnie Eisenhamer, STScI's Hubble Formal Education manager.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency (ESA) and is managed by NASA’s Goddard Space Flight Center (GSFC) in Greenbelt, Md. The Space Telescope Science Institute (STScI) conducts Hubble science operations. The institute is operated for NASA by the Association of Universities for Research in Astronomy, Inc., Washington, D.C.","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002105/GSFC_20171208_Archive_e002105~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002105/collection.json"},{"data":[{"title":"Hubble's Glittering Frisbee Galaxy","nasa_id":"GSFC_20171208_Archive_e000117","keywords":["Hubble's Glittering Frisbee Galaxy","ngc1448"],"description":"This image from Hubble’s Wide Field Camera 3 (WFC3) shows a section of NGC 1448, a spiral galaxy located about 50 million light-years from Earth in the little-known constellation of Horologium (The Pendulum Clock). We tend to think of spiral galaxies as massive and roughly circular celestial bodies, so this glittering oval does not immediately appear to fit the visual bill. What’s going on?  Imagine a spiral galaxy as a circular frisbee spinning gently in space. When we see it face on, our observations reveal a spectacular amount of detail and structure — a great example from Hubble is the telescope’s view of Messier 51, otherwise known as the Whirlpool Galaxy. However, the NGC 1448 frisbee is very nearly edge-on with respect to Earth, giving it an appearance that is more oval than circular. The spiral arms, which curve out from NGC 1448’s dense core, can just about be seen.  Although spiral galaxies might appear static with their picturesque shapes frozen in space, this is very far from the truth. The stars in these dramatic spiral configurations are constantly moving as they orbit around the galaxy’s core, with those on the inside making the orbit faster than those sitting further out.  This makes the formation and continued existence of a spiral galaxy’s arms something of a cosmic puzzle, because the arms wrapped around the spinning core should become wound tighter and tighter as time goes on — but this is not what we see. This is known as the winding problem.  Credit: ESA/Hubble &amp; NASA #nasagoddard #space #science #Hubble #star   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000117/GSFC_20171208_Archive_e000117~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000117/collection.json"},{"data":[{"title":"Hubble Spotlights a Celestial Sidekick","nasa_id":"GSFC_20171208_Archive_e000129","keywords":["Hubble Spotlights a Celestial Sidekick","fieldstars"],"description":"This image was captured by the NASA/ESA Hubble Space Telescope’s Advanced Camera for Surveys (ACS), a highly efficient wide-field camera covering the optical and near-infrared parts of the spectrum. While this lovely image contains hundreds of distant stars and galaxies, one vital thing is missing — the object Hubble was actually studying at the time!  This is not because the target has disappeared. The ACS actually uses two detectors: the first captures the object being studied — in this case an open star cluster known as NGC 299 — while the other detector images the patch of space just ‘beneath’ it. This is what can be seen here.  Technically, this picture is merely a sidekick of the actual object of interest — but space is bursting with activity, and this field of bright celestial bodies offers plenty of interest on its own. It may initially seem to show just stars, but a closer look reveals many of these tiny objects to be galaxies. The spiral galaxies have arms curving out from a bright center. The fuzzier, less clearly shaped galaxies might be ellipticals. Some of these galaxies contain millions or even billions of stars, but are so distant that all of their starry residents are contained within just a small pinprick of light that appears to be the same size as a single star!  The bright blue dots are very hot stars, sometimes distorted into crosses by the struts supporting Hubble’s secondary mirror. The redder dots are cooler stars, possibly in the red giant phase when a dying star cools and expands.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000129/GSFC_20171208_Archive_e000129~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000129/collection.json"},{"data":[{"description":"Despite its unassuming appearance, the edge-on spiral galaxy captured in the left half of this NASA/ESA Hubble Space Telescope image is actually quite remarkable.  Located about one billion light-years away in the constellation of Eridanus, this striking galaxy — known as LO95 0313-192 — has a spiral shape similar to that of the Milky Way. It has a large central bulge, and arms speckled with brightly glowing gas mottled by thick lanes of dark dust. Its companion, sitting in the right of the frame, is known rather unpoetically as [LOY2001] J031549.8-190623.  Jets, outbursts of superheated gas moving at close to the speed of light, have long been associated with the cores of giant elliptical galaxies, and galaxies in the process of merging. However, in an unexpected discovery, astronomers found LO95 0313-192, even though it is a spiral galaxy, to have intense radio jets spewing out from its center. The galaxy appears to have two more regions that are also strongly emitting in the radio part of the spectrum, making it even rarer still.  The discovery of these giant jets in 2003 — not visible in this image, but indicated in this earlier Hubble composite — has been followed by the unearthing of a further three spiral galaxies containing radio-emitting jets in recent years. This growing class of unusual spirals continues to raise significant questions about how jets are produced within galaxies, and how they are thrown out into the cosmos.  Image credit: ESA/Hubble &amp; NASA; acknowledgement, Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000423","keywords":["Hubble Finds Misbehaving Spiral"],"title":"Hubble Finds Misbehaving Spiral","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2016-01-29T14:54:28Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000423/GSFC_20171208_Archive_e000423~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000423/collection.json"},{"data":[{"description":"Bursts of pink and red, dark lanes of mottled cosmic dust, and a bright scattering of stars — this NASA/ESA Hubble Space Telescope image shows part of a messy barred spiral galaxy known as NGC 428. It lies approximately 48 million light-years away from Earth in the constellation of Cetus (The Sea Monster).  Although a spiral shape is still just about visible in this close-up shot, overall NGC 428’s spiral structure appears to be quite distorted and warped, thought to be a result of a collision between two galaxies. There also appears to be a substantial amount of star formation occurring within NGC 428 — another telltale sign of a merger. When galaxies collide their clouds of gas can merge, creating intense shocks and hot pockets of gas, and often triggering new waves of star formation.  NGC 428 was discovered by William Herschel in December 1786. More recently a type of supernova designated SN2013ct was discovered within the galaxy by Stuart Parker of the BOSS (Backyard Observatory Supernova Search) project in Australia and New Zealand, although it is unfortunately not visible in this image.  This image was captured by Hubble’s Advanced Camera for Surveys (ACS) and Wide Field and Planetary Camera 2 (WFPC2).    Image credit: ESA/Hubble and NASA and S. Smartt (Queen's University Belfast), Acknowledgements: Nick Rose and Flickr user pennine cloud  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000648","keywords":["Hubble Sees a \"Mess of Stars\""],"title":"Hubble Sees a \"Mess of Stars\"","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-08-14T18:24:03Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000648/GSFC_20171208_Archive_e000648~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000648/collection.json"},{"data":[{"title":"Hubble reveals heart of Lagoon Nebula","nasa_id":"GSFC_20171208_Archive_e001955","keywords":["Hubble reveals heart of Lagoon Nebula"],"description":"Image release date September 22, 2010  To view a video of this image go here: <a href=\"http://www.flickr.com/photos/gsfc/5014452203\">www.flickr.com/photos/gsfc/5014452203</a>  Caption: A spectacular new NASA/ESA Hubble Space Telescope image reveals the heart of the Lagoon Nebula. Seen as a massive cloud of glowing dust and gas, bombarded by the energetic radiation of new stars, this placid name hides a dramatic reality.  The Advanced Camera for Surveys (ACS) on the NASA/ESA Hubble Space Telescope has captured a dramatic view of gas and dust sculpted by intense radiation from hot young stars deep in the heart of the Lagoon Nebula (Messier 8). This spectacular object is named after the wide, lagoon-shaped dust lane that crosses the glowing gas of the nebula.  This structure is prominent in wide-field images, but cannot be seen in this close-up. However the strange billowing shapes and sandy texture visible in this image make the Lagoon Nebula’s watery name eerily appropriate from this viewpoint too.  Located four to five thousand light-years away, in the constellation of Sagittarius (the Archer), Messier 8 is a huge region of star birth that stretches across one hundred light-years. Clouds of hydrogen gas are slowly collapsing to form new stars, whose bright ultraviolet rays then light up the surrounding gas in a distinctive shade of red.  The wispy tendrils and beach-like features of the nebula are not caused by the ebb and flow of tides, but rather by ultraviolet radiation’s ability to erode and disperse the gas and dust into the distinctive shapes that we see.  In recent years astronomers probing the secrets of the Lagoon Nebula have found the first unambiguous proof that star formation by accretion of matter from the gas cloud is ongoing in this region.  Young stars that are still surrounded by an accretion disc occasionally shoot out long tendrils of matter from their poles. Several examples of these jets, known as Herbig-Haro objects, have been found in this nebula in the last five years, providing strong support for astronomers’ theories about star formation in such hydrogen-rich regions.  The Lagoon Nebula is faintly visible to the naked eye on dark nights as a small patch of grey in the heart of the Milky Way. Without a telescope, the nebula looks underwhelming because human eyes are unable to distinguish clearly between colours at low light levels. Charles Messier, the 18th century French astronomer, observed the nebula and included it in his famous astronomical catalogue, from which the nebula’s alternative name comes. But his relatively small refracting telescope would only have hinted at the dramatic structures and colours now visible thanks to Hubble.  The Hubble Space Telescope is a project of international cooperation between ESA and NASA.  Image credit: NASA, ESA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>  To learn more about the Hubble Space Telescope go here: <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2010-09-22T15:18:34Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001955/GSFC_20171208_Archive_e001955~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001955/collection.json"},{"data":[{"title":"Hubble Sees a Galactic Sunflower","nasa_id":"GSFC_20171208_Archive_e000615","keywords":["Hubble Sees a Galactic Sunflower","messier63"],"description":"The arrangement of the spiral arms in the galaxy Messier 63, seen here in an image from the NASA/ESA Hubble Space Telescope, recall the pattern at the center of a sunflower. So the nickname for this cosmic object — the Sunflower Galaxy — is no coincidence.  Discovered by Pierre Mechain in 1779, the galaxy later made it as the 63rd entry into fellow French astronomer Charles Messier’s famous catalogue, published in 1781. The two astronomers spotted the Sunflower Galaxy’s glow in the small, northern constellation Canes Venatici (the Hunting Dogs). We now know this galaxy is about 27 million light-years away and belongs to the M51 Group — a group of galaxies, named after its brightest member, Messier 51, another spiral-shaped galaxy dubbed the Whirlpool Galaxy.  Galactic arms, sunflowers and whirlpools are only a few examples of nature’s apparent preference for spirals. For galaxies like Messier 63 the winding arms shine bright because of the presence of recently formed, blue–white giant stars and clusters, readily seen in this Hubble image.  Image credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000615/GSFC_20171208_Archive_e000615~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000615/collection.json"},{"data":[{"description":"Spiral galaxy NGC 3274 is a relatively faint galaxy located over 20 million light-years away in the constellation of Leo (The Lion).  This NASA/ESA Hubble Space Telescope image comes courtesy of Hubble's Wide Field Camera 3 (WFC3), whose multi-color vision allows astronomers to study a wide range of targets, from nearby star formation to galaxies in the most remote regions of the cosmos.    This image combines observations gathered in five different filters, bringing together ultraviolet, visible and infrared light to show off NGC 3274 in all its glory.  NGC 3274 was discovered by Wilhelm Herschel in 1783. The galaxy PGC 213714 is also visible on the upper right of the frame, located much farther away from Earth.  Image Credit: ESA/Hubble &amp; NASA, D. Calzetti  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","nasa_id":"GSFC_20171208_Archive_e000158","keywords":["Hubble Spies Spiral Galaxy","ngc3274"],"title":"Hubble Spies Spiral Galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000158/GSFC_20171208_Archive_e000158~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000158/collection.json"},{"data":[{"title":"Hubble Hones In on a Hypergiant's Home","nasa_id":"GSFC_20171208_Archive_e000123","keywords":["Hubble Hones In on a Hypergiant's Home","westerlund1"],"description":"This beautiful Hubble image reveals a young super star cluster known as Westerlund 1, only 15,000 light-years away in our Milky Way neighborhood, yet home to one of the largest stars ever discovered.  Stars are classified according to their spectral type, surface temperature, and luminosity. While studying and classifying the cluster’s constituent stars, astronomers discovered that Westerlund 1 is home to an enormous star.  Originally named Westerlund 1-26, this monster star is a red supergiant (although sometimes classified as a hypergiant) with a radius over 1,500 times that of our sun. If Westerlund 1-26 were placed where our sun is in our solar system, it would extend out beyond the orbit of Jupiter.  Most of Westerlund 1’s stars are thought to have formed in the same burst of activity, meaning that they have similar ages and compositions. The cluster is relatively young in astronomical terms —at around three million years old it is a baby compared to our own sun, which is some 4.6 billion years old.  Credit: ESA/Hubble &amp; NASA","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000123/GSFC_20171208_Archive_e000123~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000123/collection.json"},{"data":[{"title":"Hubble’s Hunting Dog Galaxy","nasa_id":"GSFC_20171208_Archive_e000017","keywords":["Hubble’s Hunting Dog Galaxy","ngc4242"],"description":"Tucked away in the small northern constellation of Canes Venatici (The Hunting Dogs) is the galaxy NGC 4242, shown here as seen by the NASA/ESA Hubble Space Telescope. The galaxy lies some 30 million light-years from us. At this distance from Earth, actually not all that far on a cosmic scale, NGC 4242 is visible to anyone armed with even a basic telescope, as British astronomer William Herschel found when he discovered the galaxy in 1788.  This image shows the galaxy’s bright center and the surrounding dimmer and more diffuse “fuzz.” Despite appearing to be relatively bright in this image, studies have found that NGC 4242 is actually relatively dim (it has a moderate-to-low surface brightness and low luminosity) and also supports a low rate of star formation. The galaxy also seems to have a weak bar of stars cutting through its asymmetric center, and a very faint and poorly-defined spiral structure throughout its disk. But if NGC 4242 is not all that remarkable, as with much of the Universe, it is still a beautiful and ethereal sight.  Credit: ESA/Hubble &amp; NASA","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000017/GSFC_20171208_Archive_e000017~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000017/collection.json"},{"data":[{"title":"Hubble Sees a Star ‘Inflating’ a Giant Bubble","nasa_id":"GSFC_20171208_Archive_e000382","keywords":["Hubble Sees a Star ‘Inflating’ a Giant Bubble","star","space","nasa","hubble","nasagoddard"],"description":"For the 26th birthday of NASA’s Hubble Space Telescope, astronomers are highlighting a Hubble image of an enormous bubble being blown into space by a super-hot, massive star. The Hubble image of the Bubble Nebula, or NGC 7635, was chosen to mark the 26th anniversary of the launch of Hubble into Earth orbit by the STS-31 space shuttle crew on April 24, 1990  “As Hubble makes its 26th revolution around our home star, the sun, we celebrate the event with a spectacular image of a dynamic and exciting interaction of a young star with its environment. The view of the Bubble Nebula, crafted from WFC-3 images, reminds us that Hubble gives us a front row seat to the awe inspiring universe we live in,” said John Grunsfeld, Hubble astronaut and associate administrator of NASA’s Science Mission Directorate at NASA Headquarters, in Washington, D.C.    The Bubble Nebula is seven light-years across—about one-and-a-half times the distance from our sun to its nearest stellar neighbor, Alpha Centauri, and resides 7,100 light-years from Earth in the constellation Cassiopeia.  The seething star forming this nebula is 45 times more massive than our sun. Gas on the star gets so hot that it escapes away into space as a “stellar wind” moving at over four million miles per hour. This outflow sweeps up the cold, interstellar gas in front of it, forming the outer edge of the bubble much like a snowplow piles up snow in front of it as it moves forward.  As the surface of the bubble's shell expands outward, it slams into dense regions of cold gas on one side of the bubble. This asymmetry makes the star appear dramatically off-center from the bubble, with its location in the 10 o’clock position in the Hubble view.  Dense pillars of cool hydrogen gas laced with dust appear at the upper left of the picture, and more “fingers” can be seen nearly face-on, behind the translucent bubble.  The gases heated to varying temperatures emit different colors: oxygen is hot enough to emit blue light in the bubble near the star, while the cooler pillars are yellow from the combined light of hydrogen and nitrogen. The pillars are similar to the iconic columns in the “Pillars of Creation” Eagle Nebula. As seen with the structures in the Eagle Nebula, the Bubble Nebula pillars are being illuminated by the strong ultraviolet radiation from the brilliant star inside the bubble.  The Bubble Nebula was discovered in 1787 by William Herschel, a prominent British astronomer. It is being formed by a proto-typical Wolf-Rayet star, BD +60º2522, an extremely bright, massive, and short-lived star that has lost most of its outer hydrogen and is now fusing helium into heavier elements. The star is about four million years old, and in 10 million to 20 million years, it will likely detonate as a supernova.  Hubble’s Wide Field Camera-3 imaged the nebula in visible light with unprecedented clarity in February 2016. The colors correspond to blue for oxygen, green for hydrogen, and red for nitrogen. This information will help astronomers understand the geometry and dynamics of this complex system.  The Bubble Nebula is one of only a handful of astronomical objects that have been observed with several different instruments onboard Hubble. Hubble also imaged it with the Wide Field Planetary Camera (WFPC) in September 1992, and with Wide Field Planetary Camera-2 (WFPC2) in April 1999.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000382/GSFC_20171208_Archive_e000382~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000382/collection.json"},{"data":[{"description":"For the 26th birthday of NASA’s Hubble Space Telescope, astronomers are highlighting a Hubble image of an enormous bubble being blown into space by a super-hot, massive star. The Hubble image of the Bubble Nebula, or NGC 7635, was chosen to mark the 26th anniversary of the launch of Hubble into Earth orbit by the STS-31 space shuttle crew on April 24, 1990  “As Hubble makes its 26th revolution around our home star, the sun, we celebrate the event with a spectacular image of a dynamic and exciting interaction of a young star with its environment. The view of the Bubble Nebula, crafted from WFC-3 images, reminds us that Hubble gives us a front row seat to the awe inspiring universe we live in,” said John Grunsfeld, Hubble astronaut and associate administrator of NASA’s Science Mission Directorate at NASA Headquarters, in Washington, D.C.    The Bubble Nebula is seven light-years across—about one-and-a-half times the distance from our sun to its nearest stellar neighbor, Alpha Centauri, and resides 7,100 light-years from Earth in the constellation Cassiopeia.  The seething star forming this nebula is 45 times more massive than our sun. Gas on the star gets so hot that it escapes away into space as a “stellar wind” moving at over four million miles per hour. This outflow sweeps up the cold, interstellar gas in front of it, forming the outer edge of the bubble much like a snowplow piles up snow in front of it as it moves forward.  As the surface of the bubble's shell expands outward, it slams into dense regions of cold gas on one side of the bubble. This asymmetry makes the star appear dramatically off-center from the bubble, with its location in the 10 o’clock position in the Hubble view.  Dense pillars of cool hydrogen gas laced with dust appear at the upper left of the picture, and more “fingers” can be seen nearly face-on, behind the translucent bubble.  The gases heated to varying temperatures emit different colors: oxygen is hot enough to emit blue light in the bubble near the star, while the cooler pillars are yellow from the combined light of hydrogen and nitrogen. The pillars are similar to the iconic columns in the “Pillars of Creation” Eagle Nebula. As seen with the structures in the Eagle Nebula, the Bubble Nebula pillars are being illuminated by the strong ultraviolet radiation from the brilliant star inside the bubble.  The Bubble Nebula was discovered in 1787 by William Herschel, a prominent British astronomer. It is being formed by a proto-typical Wolf-Rayet star, BD +60º2522, an extremely bright, massive, and short-lived star that has lost most of its outer hydrogen and is now fusing helium into heavier elements. The star is about four million years old, and in 10 million to 20 million years, it will likely detonate as a supernova.  Hubble’s Wide Field Camera-3 imaged the nebula in visible light with unprecedented clarity in February 2016. The colors correspond to blue for oxygen, green for hydrogen, and red for nitrogen. This information will help astronomers understand the geometry and dynamics of this complex system.  The Bubble Nebula is one of only a handful of astronomical objects that have been observed with several different instruments onboard Hubble. Hubble also imaged it with the Wide Field Planetary Camera (WFPC) in September 1992, and with Wide Field Planetary Camera-2 (WFPC2) in April 1999.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)","nasa_id":"GSFC_20171208_Archive_e000383","keywords":["Hubble Sees a Star ‘Inflating’ a Giant Bubble","star","space","nasa","hubble","nasagoddard"],"title":"Hubble Sees a Star ‘Inflating’ a Giant Bubble","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000383/GSFC_20171208_Archive_e000383~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000383/collection.json"},{"data":[{"title":"Hubble Views a Dwarf Galaxy","nasa_id":"GSFC_20171208_Archive_e001569","keywords":["Hubble Views a Dwarf Galaxy","space","nasa","galaxy","hubble","hst","ngc5477"],"description":"The constellation of Ursa Major (The Great Bear) is home to Messier 101, the Pinwheel Galaxy. Messier 101 is one of the biggest and brightest spiral galaxies in the night sky. Like the Milky Way, Messier 101 is not alone, with smaller dwarf galaxies in its neighborhood.  NGC 5477, one of these dwarf galaxies in the Messier 101 group, is the subject of this image from the NASA/ESA Hubble Space Telescope. Without obvious structure, but with visible signs of ongoing star birth, NGC 5477 looks much like an typical dwarf irregular galaxy. The bright nebulae that extend across much of the galaxy are clouds of glowing hydrogen gas in which new stars are forming. These glow pinkish red in real life, although the selection of green and infrared filters through which this image was taken makes them appear almost white.  The observations were taken as part of a project to measure accurate distances to a range of galaxies within about 30 million light-years from Earth, by studying the brightness of red giant stars.  In addition to NGC 5477, the image includes numerous galaxies in the background, including some that are visible right through NGC 5477. This serves as a reminder that galaxies, far from being solid, opaque objects, are actually largely made up of the empty space between their stars.  This image is a combination of exposures taken through green and infrared filters using Hubble's Advanced Camera for Surveys. The field of view is approximately 3.3 by 3.3 arcminutes.     ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001569/GSFC_20171208_Archive_e001569~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001569/collection.json"},{"data":[{"title":"Hubble Catches Stellar Exodus in Action","nasa_id":"GSFC_20171208_Archive_e000722","keywords":["Hubble Catches Stellar Exodus in Action"],"description":"Using NASA’s Hubble Space Telescope, astronomers have captured for the first time snapshots of fledging white dwarf stars beginning their slow-paced, 40-million-year migration from the crowded center of an ancient star cluster to the less populated suburbs.  White dwarfs are the burned-out relics of stars that rapidly lose mass, cool down and shut off their nuclear furnaces. As these glowing carcasses age and shed weight, their orbits begin to expand outward from the star cluster’s packed downtown. This migration is caused by a gravitational tussle among stars inside the cluster. Globular star clusters sort out stars according to their mass, governed by a gravitational billiard ball game where lower mass stars rob momentum from more massive stars. The result is that heavier stars slow down and sink to the cluster's core, while lighter stars pick up speed and move across the cluster to the edge. This process is known as &quot;mass segregation.&quot; Until these Hubble observations, astronomers had never definitively seen the dynamical conveyor belt in action.  Astronomers used Hubble to watch the white-dwarf exodus in the globular star cluster 47 Tucanae, a dense swarm of hundreds of thousands of stars in our Milky Way galaxy. The cluster resides 16,700 light-years away in the southern constellation Tucana.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-catches-stellar-exodus-in-action\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-catches-stellar-exodu...</a>  Credits: NASA, ESA, and H. Richer and J. Heyl (University of British Columbia, Vancouver, Canada); acknowledgement: J. Mack (STScI) and G. Piotto (University of Padova, Italy)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-05-14T17:17:21Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000722/GSFC_20171208_Archive_e000722~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000722/collection.json"},{"data":[{"description":"This Hubble Space Telescope Wide Field Camera 3 image of Uranus, taken in November 2018, reveals a vast, bright stormy cloud cap across the planet's north pole.  Credits: NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","nasa_id":"stsci-h-p1906c-f-514x514.a","keywords":["Uranus","Neptune"],"title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","media_type":"image","center":"GSFC","photographer":"NASA Hubble","date_created":"2019-02-11T00:00:00Z","location":"NASA Goddard"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/stsci-h-p1906c-f-514x514.a/stsci-h-p1906c-f-514x514.a~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/stsci-h-p1906c-f-514x514.a/collection.json"},{"data":[{"description":"This Hubble Space Telescope Wide Field Camera 3 image of Neptune, taken in September and November 2018, shows a new dark storm (top center).  Credits: NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","nasa_id":"stsci-h-p1906d-f-514x514.a","media_type":"image","keywords":["Uranus","Neptune"],"title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","photographer":"NASA Hubble","center":"GSFC","secondary_creator":"Space Telescope Science Institute Office","date_created":"2019-02-11T00:00:00Z","location":"NASA Goddard"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/stsci-h-p1906d-f-514x514.a/stsci-h-p1906d-f-514x514.a~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/stsci-h-p1906d-f-514x514.a/collection.json"},{"data":[{"title":"A Cosmic Holiday Ornament, Hubble-Style","nasa_id":"GSFC_20171208_Archive_e001578","keywords":["A Cosmic Holiday Ornament, Hubble-Style","nasa","hubble","hst"],"description":"'Tis the season for holiday decorating and tree-trimming. Not to be left out, astronomers using NASA's Hubble Space Telescope have photographed a festive-looking nearby planetary nebula called NGC 5189. The intricate structure of this bright gaseous nebula resembles a glass-blown holiday ornament with a glowing ribbon entwined.  Planetary nebulae represent the final brief stage in the life of a medium-sized star like our sun. While consuming the last of the fuel in its core, the dying star expels a large portion of its outer envelope. This material then becomes heated by the radiation from the stellar remnant and radiates, producing glowing clouds of gas that can show complex structures, as the ejection of mass from the star is uneven in both time and direction. To read more go to: <a href=\"http://www.nasa.gov/mission_pages/hubble/science/ngc5189.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/ngc5189.html</a>  Credit: NASA, ESA, and G. Bacon (STScI)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001578/GSFC_20171208_Archive_e001578~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001578/collection.json"},{"data":[{"description":"Hubble rocks out with heavy metal stars!  This 10.5-billion-year-old globular cluster, NGC 6496, is home to heavy-metal stars of a celestial kind! The stars comprising this spectacular spherical cluster are enriched with much higher proportions of metals — elements heavier than hydrogen and helium are curiously known as metals in astronomy — than stars found in similar clusters.  A handful of these high-metallicity stars are also variable stars, meaning that their brightness fluctuates over time. NGC 6496 hosts a selection of long-period variables — giant pulsating stars whose brightness can take up to, and even over, a thousand days to change — and short-period eclipsing binaries, which dim when eclipsed by a stellar companion.  The nature of the variability of these stars can reveal important information about their mass, radius, luminosity, temperature, composition, and evolution, providing astronomers with measurements that would be difficult or even impossible to obtain through other methods.  NGC 6496 was discovered in 1826 by Scottish astronomer James Dunlop. The cluster resides at about 35,000 light-years away in the southern constellation of Scorpius (The Scorpion).  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt Text credit: European Space Agency  Read more: <a href=\"http://go.nasa.gov/1U2wqGW\" rel=\"nofollow\">go.nasa.gov/1U2wqGW</a>","nasa_id":"GSFC_20171208_Archive_e000282","keywords":["Hubble Friday - Heavy Metal Stars","metal","star","cluster","hubble","ngc6496"],"title":"Hubble Friday - Heavy Metal Stars","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000282/GSFC_20171208_Archive_e000282~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000282/collection.json"},{"data":[{"description":"Preston Burch at the Hubble 25th Anniversary event for employees at Goddard Space Flight Center   ","nasa_id":"GSFC_20150723_2015-13352_015","keywords":["Preston Burch at the Hubble 25th Anniversary event for employees"],"title":"Preston Burch at the Hubble 25th Anniversary event for employees","photographer":"NASA/GSFC/Bill Hrybyk","center":"GSFC","media_type":"image","date_created":"2015-07-23T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20150723_2015-13352_015/GSFC_20150723_2015-13352_015~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20150723_2015-13352_015/collection.json"},{"data":[{"description":"The smudge of stars at the center of this NASA/ESA Hubble Space Telescope image is a galaxy known as UGC 5797. UGC 5797 is an emission line galaxy, meaning that it is currently undergoing active star formation. The result is a stellar population that is constantly being refurbished as massive bright blue stars form. Galaxies with prolific star formation are not only veiled in a blue tint, but are key to the continuation of a stellar cycle.  In this image UGC 5797 appears in front of a background of spiral galaxies. Spiral galaxies have copious amounts of dust and gas — the main ingredient for stars — and therefore often also belong to the class of emission line galaxies.  Spiral galaxies have disk-like shapes that drastically vary in appearance depending on the angle at which they are observed. The collection of spiral galaxies in this frame exhibits this attribute acutely: Some are viewed face-on, revealing the structure of the spiral arms, while the two in the bottom left are seen edge-on, appearing as plain streaks in the sky. There are many spiral galaxies, with varying colors and at different angles, sprinkled across this image — just take a look.   Credit: ESA/Hubble &amp; NASA, Acknowledgement: Luca Limatola  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000733","keywords":["Hubble Eyes Galactic Refurbishment"],"title":"Hubble Eyes Galactic Refurbishment","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-04-30T15:58:57Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000733/GSFC_20171208_Archive_e000733~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000733/collection.json"},{"data":[{"title":"Hubble’s Hidden Galaxy","nasa_id":"GSFC_20171208_Archive_e000022","keywords":["Hubble’s Hidden Galaxy","ic342"],"description":"IC 342 is a challenging cosmic target. Although it is bright, the galaxy sits near the equator of the Milky Way’s galactic disk, where the sky is thick with glowing cosmic gas, bright stars, and dark, obscuring dust. In order for astronomers to see the intricate spiral structure of IC 342, they must gaze through a large amount of material contained within our own galaxy — no easy feat! As a result IC 342 is relatively difficult to spot and image, giving rise to its intriguing nickname: the “Hidden Galaxy.”  Located very close (in astronomical terms) to the Milky Way, this sweeping spiral galaxy would be among the brightest in the sky were it not for its dust-obscured location. The galaxy is very active, as indicated by the range of colors visible in this NASA/ESA Hubble Space Telescope image, depicting the very central region of the galaxy. A beautiful mixture of hot, blue star-forming regions, redder, cooler regions of gas, and dark lanes of opaque dust can be seen, all swirling together around a bright core. In 2003, astronomers confirmed this core to be a specific type of central region known as an HII nucleus — a name that indicates the presence of ionized hydrogen — that is likely to be creating many hot new stars.  Credit: ESA/Hubble &amp; NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000022/GSFC_20171208_Archive_e000022~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000022/collection.json"},{"data":[{"title":"Hubble Eyes a Powerful Galaxy","nasa_id":"GSFC_20171208_Archive_e000025","keywords":["Hubble Eyes a Powerful Galaxy"],"description":"Not all galaxies have the luxury of possessing a simple moniker or quirky nickname.   This impressive galaxy imaged by the NASA/ESA Hubble Space Telescope is one of the unlucky ones, and goes by a name that looks more like a password for a computer:  2XMM J143450.5+033843.  Such a name may seem like a random jumble of numbers and letters, but like all galactic epithets it has a distinct meaning. This galaxy, for example, was detected and observed as part of the second X-ray sky survey performed by ESA’s XMM-Newton Observatory. Its celestial coordinates form the rest of the bulky name, following the “J”: a right ascension value of 14h (hours) 34m (minutes) 50.5s (seconds). This can be likened to terrestrial longitude. It also has a declination of +03d (degrees) 38m (minutes) 43s (seconds). Declination can be likened to terrestrial latitude. The other fuzzy object in the frame was named in the same way — it is a bright galaxy named 2XMM J143448.3+033749.  2XMM J143450.5+033843 lies nearly 400 million light-years away from Earth. It is a Seyfert galaxy that is dominated by something known as an Active Galactic Nucleus — its core is thought to contain a supermassive black hole that is emitting huge amounts of radiation, pouring energetic X-rays out into the Universe.  Photo credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-06-30T17:03:34Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000025/GSFC_20171208_Archive_e000025~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000025/collection.json"},{"data":[{"description":"This little-known galaxy, officially named J04542829-6625280, but most often referred to as LEDA 89996, is a classic example of a spiral galaxy. The galaxy is much like our own galaxy, the Milky Way. The disk-shaped galaxy is seen face on, revealing the winding structure of the spiral arms. Dark patches in these spiral arms are in fact dust and gas — the raw materials for new stars. The many young stars that form in these regions make the spiral arms appear bright and bluish.  The galaxy sits in a vibrant area of the night sky within the constellation of Dorado (The Swordfish), and appears very close to the Large Magellanic Cloud  — one of the satellite galaxies of the Milky Way.  The observations were carried out with the high resolution channel of Hubble’s Advanced Camera for Surveys.   Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Flickr user C. Claude  <b><a href=\"http://go.nasa.gov/1Tqugil\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://go.nasa.gov/1Tqugin\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://go.nasa.gov/1Tqugir\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://go.nasa.gov/1TqujdP\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://go.nasa.gov/1TqujdT\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000687","keywords":["Hubble peeks at a spiral galaxy"],"title":"Hubble peeks at a spiral galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-07-10T18:26:01Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000687/GSFC_20171208_Archive_e000687~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000687/collection.json"},{"data":[{"description":"Galaxies can take many shapes and be oriented any way relative to us in the sky. This can make it hard to figure out their actual morphology, as a galaxy can look very different from different viewpoints. A special case is when we are lucky enough to observe a spiral galaxy directly from its edge, providing us with a spectacular view like the one seen in this picture of the week.  This is NGC 7814, also known as the “Little Sombrero.” Its larger namesake, the Sombrero Galaxy, is another stunning example of an edge-on galaxy — in fact, the “Little Sombrero” is about the same size as its bright namesake at about 60,000 light-years across, but as it lies farther away, and so appears smaller in the sky.  NGC 7814 has a bright central bulge and a bright halo of glowing gas extending outwards into space. The dusty spiral arms appear as dark streaks. They consist of dusty material that absorbs and blocks light from the galactic center behind it. The field of view of this NASA/ESA Hubble Space Telescope image would be very impressive even without NGC 7814 in front; nearly all the objects seen in this image are galaxies as well.  Credit: ESA/Hubble &amp; NASA Acknowledgement: Josh Barrington  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000794","keywords":["Hubble's Little Sombrero"],"title":"Hubble's Little Sombrero","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-02-06T17:12:07Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000794/GSFC_20171208_Archive_e000794~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000794/collection.json"},{"data":[{"description":"Showcased at the center of this NASA/ESA Hubble Space Telescope image is an emission-line star known as IRAS 12196-6300.  Located just under 2,300 light-years from Earth, this star displays prominent emission lines, meaning that the star’s light, dispersed into a spectrum, shows up as a rainbow of colors marked with a characteristic pattern of dark and bright lines. The characteristics of these lines, when compared to the “fingerprints” left by particular atoms and molecules, can be used to reveal IRAS 12196-6300’s chemical composition.  Under 10 million years old and not yet burning hydrogen at its core, unlike the sun, this star is still in its infancy. Further evidence of IRAS 12196-6300’s youth is provided by the presence of reflection nebulae. These hazy clouds, pictured floating above and below IRAS 12196-6300, are created when light from a star reflects off a high concentration of nearby dust, such as the dusty material still remaining from IRAS 12196-6300’s formation.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","nasa_id":"GSFC_20171208_Archive_e000401","keywords":["Hubble and a Stellar Fingerprint"],"title":"Hubble and a Stellar Fingerprint","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2016-03-04T14:33:23Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000401/GSFC_20171208_Archive_e000401~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000401/collection.json"},{"data":[{"description":"NASA’s Hubble Space Telescope has unveiled in stunning detail a small section of the expanding remains of a massive star that exploded about 8,000 years ago.  Called the Veil Nebula, the debris is one of the best-known supernova remnants, deriving its name from its delicate, draped filamentary structures. The entire nebula is 110 light-years across, covering six full moons on the sky as seen from Earth, and resides about 2,100 light-years away in the constellation Cygnus, the Swan.   This 3-D visualization flies across a small portion of the Veil Nebula as photographed by the Hubble Space Telescope.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-zooms-in-on-shrapnel-from-an-exploded-star\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-zooms-in-on-shrapnel-...</a>  Credit: NASA, ESA, and F. Summers, G. Bacon, Z. Levay, and L. Frattare (Viz 3D Team, STScI)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000607","keywords":["Hubble Zooms in on Shrapnel from an Exploded Star","nasa","nebula","hubble","nasagoddard"],"title":"Hubble Zooms in on Shrapnel from an Exploded Star","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000607/GSFC_20171208_Archive_e000607~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000607/collection.json"},{"data":[{"title":"NASA's Hubble Celebrates 21st Anniversary with \"Rose\" of Galaxies","nasa_id":"GSFC_20171208_Archive_e001885","keywords":["NASA's Hubble Celebrates 21st Anniversary with \"Rose\" of Galaxies","21","space","nasa","telescope","galaxy","hubble","hst","anniversay","goddardspaceflightcenter","arp273","ugc1810","ugc1813"],"description":"NASA image release April 20, 2011  To see a video of this image go here: <a href=\"http://www.flickr.com/photos/gsfc/5637796622\">www.flickr.com/photos/gsfc/5637796622</a>  To celebrate the 21st anniversary of the Hubble Space Telescope's deployment into space, astronomers at the Space Telescope Science Institute in Baltimore, Md., pointed Hubble's eye at an especially photogenic pair of interacting galaxies called Arp 273. The larger of the spiral galaxies, known as UGC 1810, has a disk that is distorted into a rose-like shape by the gravitational tidal pull of the companion galaxy below it, known as UGC 1813. This image is a composite of Hubble Wide Field Camera 3 data taken on December 17, 2010, with three separate filters that allow a broad range of wavelengths covering the ultraviolet, blue, and red portions of the spectrum.  Hubble was launched April 24, 1990, aboard Discovery's STS-31 mission. Hubble discoveries   revolutionized nearly all areas of current astronomical research from planetary science to cosmology.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)  To read more about this image go here: <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble-rose.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble-rose.html</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001885/GSFC_20171208_Archive_e001885~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001885/collection.json"},{"data":[{"description":"Astronomers using NASA’s Hubble Space Telescope have discovered an immense cloud of hydrogen dubbed “The Behemoth” bleeding from a planet orbiting a nearby star. The enormous, comet-like feature is about 50 times the size of the parent star. The hydrogen is evaporating from a warm, Neptune-sized planet, due to extreme radiation from the star.  This phenomenon has never been seen around an exoplanet so small. It may offer clues to how other planets with hydrogen-enveloped atmospheres could have their outer layers evaporated by their parent star, leaving behind solid, rocky cores. Hot, rocky planets such as these that roughly the size of Earth are known as Hot-Super Earths.  “This cloud is very spectacular, though the evaporation rate does not threaten the planet right now,” explains the study’s leader, David Ehrenreich of the Observatory of the University of Geneva in Switzerland. “But we know that in the past, the star, which is a faint red dwarf, was more active. This means that the planet evaporated faster during its first billion years of existence because of the strong radiation from the young star. Overall, we estimate that it may have lost up to 10 percent of its atmosphere over the past several billion years.”  Caption: This artist's concept shows \"The Behemoth,\" an enormous comet-like cloud of hydrogen bleeding off of a warm, Neptune-sized planet just 30 light-years from Earth. Also depicted is the parent star, which is a faint red dwarf named GJ 436. The hydrogen is evaporating from the planet due to extreme radiation from the star. A phenomenon this large has never before been seen around any exoplanet.  Credits: NASA, ESA, and G. Bacon (STScI)","nasa_id":"hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o","keywords":["Hubble","HST","exoplanet"],"title":"Hubble Sees a “Behemoth” Bleeding Atmosphere Around a Warm Exoplanet","media_type":"image","center":"GSFC","date_created":"2015-06-24T00:00:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o/collection.json"},{"data":[{"description":"NASA image release July 12, 2011  Neptune: 23:09 UT (June 25, 2011)  Today, Neptune has arrived at the same location in space where it was discovered nearly 165 years ago. To commemorate the event, NASA's Hubble Space Telescope has taken these &quot;anniversary pictures&quot; of the blue-green giant planet.  Neptune is the most distant major planet in our solar system. German astronomer Johann Galle discovered the planet on September 23, 1846. At the time, the discovery doubled the size of the known solar system. The planet is 2.8 billion miles (4.5 billion kilometers) from the Sun, 30 times farther than Earth. Under the Sun's weak pull at that distance, Neptune plods along in its huge orbit, slowly completing one revolution approximately every 165 years.  <b>To read more go <a href=\"http://www.nasa.gov/mission_pages/hubble/science/neptune-circuit.html\" rel=\"nofollow\"> here</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://web.stagram.com/n/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e001824","keywords":["Hubble's Neptune Anniversary Pictures","nasa","neptune","hubble","hst","goddardspaceflightcenter","165years"],"title":"Hubble's Neptune Anniversary Pictures","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001824/GSFC_20171208_Archive_e001824~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001824/collection.json"},{"data":[{"description":"Here we see the spectacular cosmic pairing of the star Hen 2-427 — more commonly known as WR 124 — and the nebula M1-67 which surrounds it. Both objects, captured here by the NASA/ESA Hubble Space Telescope are found in the constellation of Sagittarius and lie 15,000 light-years away.  The star Hen 2-427 shines brightly at the very center of this explosive image and around the hot clumps of surrounding gas that are being ejected into space at over 93,210 miles (150,000 km) per hour.  Hen 2-427 is a Wolf–Rayet star, named after the astronomers Charles Wolf and Georges Rayet. Wolf–Rayet are super-hot stars characterized by a fierce ejection of mass.  The nebula M1-67 is estimated to be no more than 10,000 years old — just a baby in astronomical terms — but what a beautiful and magnificent sight it makes.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000640","keywords":["A Hubble Cosmic Couple","star","space","nasa","hubble","m167","nasagoddard","wr124"],"title":"A Hubble Cosmic Couple","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000640/GSFC_20171208_Archive_e000640~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000640/collection.json"},{"data":[{"title":"Hubble Peers into the Mouth of Leo A","nasa_id":"GSFC_20171208_Archive_e000384","keywords":["Hubble Peers into the Mouth of Leo A","space","nasa","hubble","leoa","hubblespacetelescope","nasagoddard"],"description":"At first glance, this NASA/ESA Hubble Space Telescope image seems to show an array of different cosmic objects, but the speckling of stars shown here actually forms a single body — a nearby dwarf galaxy known as Leo A. Its few million stars are so sparsely distributed that some distant background galaxies are visible through it. Leo A itself is at a distance of about 2.5 million light-years from Earth and a member of the Local Group of galaxies; a group that includes the Milky Way and the well-known Andromeda galaxy.  Astronomers study dwarf galaxies because they are very numerous and are simpler in structure than their giant cousins. However, their small size makes them difficult to study at great distances. As a result, the dwarf galaxies of the Local Group are of particular interest, as they are close enough to study in detail.  As it turns out, Leo A is a rather unusual galaxy. It is one of the most isolated galaxies in the Local Group, has no obvious structural features beyond being a roughly spherical mass of stars, and shows no evidence for recent interactions with any of its few neighbors. However, the galaxy’s contents are overwhelmingly dominated by relatively young stars, something that would normally be the result of a recent interaction with another galaxy. Around 90% of the stars in Leo A are less than eight billion years old — young in cosmic terms! This raises a number of intriguing questions about why star formation in Leo A did not take place on the “usual” timescale, but instead waited until it was good and ready.  Image credit: ESA/Hubble &amp; NASA; Acknowledgment: Judy Schmidt","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000384/GSFC_20171208_Archive_e000384~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000384/collection.json"},{"data":[{"description":"Caption: In this composite image, visible-light observations by NASA’s Hubble Space Telescope are combined with infrared data from the ground-based Large Binocular Telescope in Arizona to assemble a dramatic view of the well-known Ring Nebula.   Credit: NASA, ESA, C.R. Robert O’Dell (Vanderbilt University), G.J. Ferland (University of Kentucky), W.J. Henney and M. Peimbert (National Autonomous University of Mexico) Credit for Large Binocular Telescope data: David Thompson (University of Arizona)   ----  The Ring Nebula's distinctive shape makes it a popular illustration for astronomy books. But new observations by NASA's Hubble Space Telescope of the glowing gas shroud around an old, dying, sun-like star reveal a new twist.  &quot;The nebula is not like a bagel, but rather, it's like a jelly doughnut, because it's filled with material in the middle,&quot; said C. Robert O'Dell of Vanderbilt University in Nashville, Tenn. He leads a research team that used Hubble and several ground-based telescopes to obtain the best view yet of the iconic nebula. The images show a more complex structure than astronomers once thought and have allowed them to construct the most precise 3-D model of the nebula.  &quot;With Hubble's detail, we see a completely different shape than what's been thought about historically for this classic nebula,&quot; O'Dell said. &quot;The new Hubble observations show the nebula in much clearer detail, and we see things are not as simple as we previously thought.&quot;   The Ring Nebula is about 2,000 light-years from Earth and measures roughly 1 light-year across. Located in the constellation Lyra, the nebula is a popular target for amateur astronomers. Read more: <a href=\"http://1.usa.gov/14VAOMk\" rel=\"nofollow\">1.usa.gov/14VAOMk</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001464","keywords":["Hubble reveals the Ring Nebula’s true shape","nasa","nebula","hubble","hubblespacetelescope"],"title":"Hubble reveals the Ring Nebula’s true shape","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001464/GSFC_20171208_Archive_e001464~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001464/collection.json"},{"data":[{"description":"This galaxy has a far more exciting and futuristic classification than most — it hosts a megamaser. Megamasers are intensely bright, around 100 million times brighter than the masers found in galaxies like the Milky Way. The entire galaxy essentially acts as an astronomical laser that beams out microwave emission rather than visible light (hence the ‘m’ replacing the ‘l’).  A megamaser is a process that involves some components within the galaxy (like gas) that is in the right physical condition to cause the amplification of light (in this case, microwaves).  But there are other parts of the galaxy (like stars for example) that aren’t part of the maser process.  This megamaser galaxy is named IRAS 16399-0937 and is located over 370 million light-years from Earth. This NASA/ESA Hubble Space Telescope image belies the galaxy’s energetic nature, instead painting it as a beautiful and serene cosmic rosebud. The image comprises observations captured across various wavelengths by two of Hubble’s instruments: the Advanced Camera for Surveys (ACS), and the Near Infrared Camera and Multi-Object Spectrometer (NICMOS).  NICMOS’s superb sensitivity, resolution, and field of view gave astronomers the unique opportunity to observe the structure of IRAS 16399-0937 in detail. They found it hosts a double nucleus — the galaxy’s core is thought to be formed of two separate cores in the process of merging. The two components, named IRAS 16399N and IRAS 16399S for the northern and southern parts respectively, sit over 11,000 light-years apart. However, they are both buried deep within the same swirl of cosmic gas and dust and are interacting, giving the galaxy its peculiar structure.  The nuclei are very different. IRAS 16399S appears to be a starburst region, where new stars are forming at an incredible rate. IRAS 16399N, however, is something known as a LINER nucleus (Low Ionization Nuclear Emission Region), which is a region whose emission mostly stems from weakly-ionized or neutral atoms of particular gases. The northern nucleus also hosts a black hole with some 100 million times the mass of the sun!  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt (geckzilla)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>    ","nasa_id":"GSFC_20171208_Archive_e000144","keywords":["Hubble Gazes at a Cosmic Megamaser"],"title":"Hubble Gazes at a Cosmic Megamaser","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000144/GSFC_20171208_Archive_e000144~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000144/collection.json"},{"data":[{"title":"Hubble Views a Cosmic Skyrocket","nasa_id":"GSFC_20171208_Archive_e001708","keywords":["Hubble Views a Cosmic Skyrocket"],"description":"NASA image release July 3, 2012  Caption: Resembling a Fourth of July skyrocket, Herbig-Haro 110 is a geyser of hot gas from a newborn star that splashes up against and ricochets off the dense core of a cloud of molecular hydrogen. Although the plumes of gas look like whiffs of smoke, they are actually billions of times less dense than the smoke from a July 4 firework. This Hubble Space Telescope photo shows the integrated light from plumes, which are light-years across.  -- Herbig-Haro (HH) objects come in a wide array of shapes, but the basic configuration stays the same. Twin jets of heated gas, ejected in opposite directions away from a forming star, stream through interstellar space. Astronomers suspect that these outflows are fueled by gas accreting onto a young star surrounded by a disk of dust and gas. The disk is the &quot;fuel tank,&quot; the star is the gravitational engine, and the jets are the exhaust.  When these energetic jets slam into colder gas, the collision plays out like a traffic jam on the interstate. Gas within the shock front slows to a crawl, but more gas continues to pile up as the jet keeps slamming into the shock from behind. Temperatures climb sharply, and this curving, flared region starts to glow. These &quot;bow shocks&quot; are so named because they resemble the waves that form at the front of a boat.  In the case of the single HH 110 jet, astronomers observe a spectacular and unusual permutation on this basic model. Careful study has repeatedly failed to find the source star driving HH 110, and there may be good reason for this: perhaps the HH 110 outflow is itself generated by another jet.  Astronomers now believe that the nearby HH 270 jet grazes an immovable obstacle - a much denser, colder cloud core - and gets diverted off at about a 60-degree angle. The jet goes dark and then reemerges, having reinvented itself as HH 110.  The jet shows that these energetic flows are like the erratic outbursts from a Roman candle. As fast-moving blobs of gas catch up and collide with slower blobs, new shocks arise along the jet's interior. The light emitted from excited gas in these hot blue ridges marks the boundaries of these interior collisions. By measuring the current velocity and positions of different blobs and hot ridges along the chain within the jet, astronomers can effectively &quot;rewind&quot; the outflow, extrapolating the blobs back to the moment when they were emitted. This technique can be used to gain insight into the source star's history of mass accretion.  This image is a composite of data taken with Hubble's Advanced Camera for Surveys in 2004 and 2005 and the Wide Field Camera 3 in April 2011.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001708/GSFC_20171208_Archive_e001708~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001708/collection.json"},{"data":[{"description":"During its routine yearly monitoring of the weather on our solar system's outer planets, NASA's Hubble Space Telescope has uncovered a new mysterious dark storm on Neptune (right) and provided a fresh look at a long-lived storm circling around the north polar region on Uranus (left).","nasa_id":"stsci-h-p1906a-f-1028x543","media_type":"image","keywords":["Uranus","Neptune","Hubble","NASA Goddard"],"title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","photographer":"NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","center":"GSFC","secondary_creator":"Space Telescope Science Institute Office of Public Outreach","date_created":"2019-02-11T00:00:00Z","location":"NASA Goddard"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/stsci-h-p1906a-f-1028x543/stsci-h-p1906a-f-1028x543~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/stsci-h-p1906a-f-1028x543/collection.json"},{"data":[{"description":"This picture, spanning 50 light-years across, is a mosaic stitched from nine separate images from Hubble’s Wide Field Camera 3. The center of the Milky Way is located 27,000 light-years away. The “snowstorm” of stars in the image is just the tip of the iceberg: Astronomers estimate that about 10 million stars in this cluster are too faint to be captured in this image.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/2016/hubble-s-journey-to-the-center-of-our-galaxy\" rel=\"nofollow\">www.nasa.gov/feature/goddard/2016/hubble-s-journey-to-the...</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000390","keywords":["Hubble’s Journey to the Center of our Galaxy"],"title":"Hubble’s Journey to the Center of our Galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000390/GSFC_20171208_Archive_e000390~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000390/collection.json"},{"data":[{"description":"This NASA/ESA Hubble Space Telescope image shows a planetary nebula named NGC 6153, located about 4,000 light-years away in the southern constellation of Scorpius (The Scorpion). The faint blue haze across the frame shows what remains of a star like the sun after it has depleted most of its fuel. When this happens, the outer layers of the star are ejected, and get excited and ionized by the energetic ultraviolet light emitted by the bright hot core of the star, forming the nebula.  NGC 6153 is a planetary nebula that is elliptical in shape, with an extremely rich network of loops and filaments, shown clearly in this Hubble image. However, this is not what makes this planetary nebula so interesting for astronomers.  Measurements show that NGC 6153 contains large amounts of neon, argon, oxygen, carbon and chlorine — up to three times more than can be found in the solar system. The nebula contains a whopping five times more nitrogen than our sun! Although it may be that the star developed higher levels of these elements as it grew and evolved, it is more likely that the star originally formed from a cloud of material that already contained a lot more of these elements.  Text credit: European Space Agency Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Matej Novak  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000699","keywords":["Hubble View of a Nitrogen-Rich Nebula"],"title":"Hubble View of a Nitrogen-Rich Nebula","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-06-26T15:34:26Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000699/GSFC_20171208_Archive_e000699~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000699/collection.json"},{"data":[{"description":"This new Hubble image shows NGC 1566, a beautiful galaxy located approximately 40 million light-years away in the constellation of Dorado (The Dolphinfish). NGC 1566 is an intermediate spiral galaxy, meaning that while it does not have a well-defined bar-shaped region of stars at its center — like barred spirals — it is not quite an unbarred spiral either.  The small but extremely bright nucleus of NGC 1566 is clearly visible in this image, a telltale sign of its membership of the Seyfert class of galaxies. The centers of such galaxies are very active and luminous, emitting strong bursts of radiation and potentially harboring supermassive black holes that are many millions of times the mass of the sun.  NGC 1566 is not just any Seyfert galaxy; it is the second brightest Seyfert galaxy known. It is also the brightest and most dominant member of the Dorado Group, a loose concentration of galaxies that together comprise one of the richest galaxy groups of the southern hemisphere. This image highlights the beauty and awe-inspiring nature of this unique galaxy group, with NGC 1566 glittering and glowing, its bright nucleus framed by swirling and symmetrical lavender arms.  This image was taken by Hubble’s Wide Field Camera 3 (WFC3) in the near-infrared part of the spectrum.    European Space Agency Credit:  ESA/Hubble &amp; NASA, Acknowledgement: Flickr user Det58  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001059","keywords":["Grand Swirls from NASA's Hubble"],"title":"Grand Swirls from NASA's Hubble","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-06-06T14:35:47Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001059/GSFC_20171208_Archive_e001059~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001059/collection.json"},{"data":[{"description":"NASA image release April 22, 2010  This is a NASA Hubble Space Telescope near-infrared-light image of a three-light-year-tall pillar of gas and dust that is being eaten away by the brilliant light from nearby stars in the tempestuous stellar nursery called the Carina Nebula, located 7,500 light-years away in the southern constellation Carina. The image marks the 20th anniversary of Hubble's launch and deployment into an orbit around Earth. The image reveals a plethora of stars behind the gaseous veil of the nebula's wall of hydrogen, laced with dust. The foreground pillar becomes semi-transparent because infrared light from background stars penetrates through much of the dust. A few stars inside the pillar also become visible. The false colors are assigned to three different infrared wavelength ranges. Hubble's Wide Field Camera 3 observed the pillar in February and March 2010. Object Names: HH 901, HH 902 Image Type: Astronomical  Credit: NASA, ESA, and M. Livio and the Hubble 20th Anniversary Team (STScI)  To read learn more about this image go to:  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble20th-img.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble20th-img....</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","nasa_id":"GSFC_20171208_Archive_e002058","keywords":["Hubble's Wide View of 'Mystic Mountain' in Infrared"],"title":"Hubble's Wide View of 'Mystic Mountain' in Infrared","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2010-04-23T13:33:42Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002058/GSFC_20171208_Archive_e002058~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002058/collection.json"},{"data":[{"title":"Hubble Feathers the Peacock","nasa_id":"GSFC_20171208_Archive_e000982","keywords":["Hubble Feathers the Peacock"],"description":"This picture, taken by the NASA/ESA Hubble Space Telescope’s Wide Field Planetary Camera 2 (WFPC2), shows a galaxy known as NGC 6872 in the constellation of Pavo (The Peacock). Its unusual shape is caused by its interactions with the smaller galaxy that can be seen just above NGC 6872, called IC 4970. They both lie roughly 300 million light-years away from Earth.  From tip to tip, NGC 6872 measures over 500,000 light-years across, making it the second largest spiral galaxy discovered to date. In terms of size it is beaten only by NGC 262, a galaxy that measures a mind-boggling 1.3 million light-years in diameter! To put that into perspective, our own galaxy, the Milky Way, measures between 100,000 and 120,000 light-years across, making NGC 6872 about five times its size.  The upper left spiral arm of NGC 6872 is visibly distorted and is populated by star-forming regions, which appear blue on this image. This may have been be caused by IC 4970 recently passing through this arm — although here, recent means 130 million years ago! Astronomers have noted that NGC 6872 seems to be relatively sparse in terms of free hydrogen, which is the basis material for new stars, meaning that if it weren’t for its interactions with IC 4970, NGC 6872 might not have been able to produce new bursts of star formation.  Credit: Image credit: ESA/Hubble &amp; NASA / Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-09-19T14:34:49Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000982/GSFC_20171208_Archive_e000982~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000982/collection.json"},{"data":[{"description":"This colorful bubble is a planetary nebula called NGC 6818, also known as the Little Gem Nebula. It is located in the constellation of Sagittarius (The Archer), roughly 6,000 light-years away from us. The rich glow of the cloud is just over half a light-year across — humongous compared to its tiny central star — but still a little gem on a cosmic scale.  When stars like the sun enter &quot;retirement,&quot; they shed their outer layers into space to create glowing clouds of gas called planetary nebulae. This ejection of mass is uneven, and planetary nebulae can have very complex shapes. NGC 6818 shows knotty filament-like structures and distinct layers of material, with a bright and enclosed central bubble surrounded by a larger, more diffuse cloud.  Scientists believe that the stellar wind from the central star propels the outflowing material, sculpting the elongated shape of NGC 6818. As this fast wind smashes through the slower-moving cloud it creates particularly bright blowouts at the bubble’s outer layers.  Hubble previously imaged this nebula back in 1997 with its Wide Field Planetary Camera 2, using a mix of filters that highlighted emission from ionized oxygen and hydrogen. This image, while from the same camera, uses different filters to reveal a different view of the nebula.    Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000657","keywords":["Hubble Finds a Little Gem"],"title":"Hubble Finds a Little Gem","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-08-07T13:31:43Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000657/GSFC_20171208_Archive_e000657~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000657/collection.json"},{"data":[{"description":"Panta rhei is a simplified version of the famous Greek philosopher Heraclitus' teachings. It basically means, everything flows. And everything in the Universe is indeed continually on the move, spiraling and shifting through space.  Some cosmic objects move a little further than others — take the subject of this NASA/ESA Hubble Space Telescope image, a globular cluster of stars known as Palomar 12. Although it currently lies on the outskirts of the Milky Way’s halo, Palomar 12 was not born here. When astronomers first studied this cluster, they were puzzled by its strangely young age when compared to the other clusters in the galaxy. It appeared to be around 30 percent younger than other Milky Way globulars. Surely if it had been born within our galaxy, it would have sprung to life at a similar time to its cluster companions?  A bit more digging revealed that Palomar 12 was actually ripped from its initial home, the Sagittarius Dwarf Elliptical galaxy, around 1.7 billion years ago via tidal interactions between its former home and our galaxy. The dwarf galaxy that Palomar 12 once called home is a satellite galaxy to ours, and closely orbits around us — even occasionally passing through the plane of our galaxy. In fact, it is being slowly torn apart and consumed by the Milky Way.  The sparkling stars in this picture were imaged by Hubble’s Advanced Camera for Surveys.  Credit: ESA/NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000767","keywords":["Panta rhei as Seen by Hubble"],"title":"Panta rhei as Seen by Hubble","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-02-20T20:05:54Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000767/GSFC_20171208_Archive_e000767~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000767/collection.json"},{"data":[{"description":"NASA image release January 10, 2011  In this image by NASA's Hubble Space Telescope, an unusual, ghostly green blob of gas appears to float near a normal-looking spiral galaxy.  The bizarre object, dubbed Hanny's Voorwerp (Hanny's Object in Dutch), is the only visible part of a 300,000-light-year-long streamer of gas stretching around the galaxy, called IC 2497. The greenish Voorwerp is visible because a searchlight beam of light from the galaxy's core illuminated it. This beam came from a quasar, a bright, energetic object that is powered by a black hole. The quasar may have turned off about 200,000 years ago.  This Hubble view uncovers a pocket of star clusters, the yellowish-orange area at the tip of Hanny's Voorwerp. The star clusters are confined to an area that is a few thousand light-years wide. The youngest stars are a couple of million years old. The Voorwerp is the size of our Milky Way galaxy, and its bright green color is from glowing oxygen.  Hubble also shows that gas flowing from IC 2497 may have instigated the star birth by compressing the gas in Hanny's Voorwerp. The galaxy is located about 650 million light-years from Earth.  What appears to be a gaping hole in Hanny's Voorwerp actually may be a shadow cast by an object in the quasar's light path. The feature gives the illusion of a hole about 20,000 light-years wide. Hubble reveals sharp edges but no other changes in the gas around the apparent opening, suggesting that an object close to the quasar may have blocked some of the light and projected a shadow on the Voorwerp. This phenomenon is similar to a fly on a movie projector lens casting a shadow on a movie screen.  An interaction between IC 2497 and another galaxy about a billion years ago may have created Hanny's Voorwerp and fueled the quasar. The Hubble image shows that IC 2497 has been disturbed, with complex dust patches, warped spiral arms, and regions of star formation around its core. These features suggest the aftermath of a galaxy merger. The bright spots in the central part of the galaxy are star-forming regions. The small, pinkish object to the lower right of IC 2497 is an edge-on spiral galaxy in the background.  The image was made by combining data from the Advanced Camera for Surveys (ACS) and the Wide Field Camera 3 (WFC3). The ACS exposures were taken April 12, 2010; the WFC3 data, April 4, 2010.  Object Names: Hanny's Voorwerp, IC 2497  Image Type: Astronomical  Credit: NASA, ESA, W. Keel (University of Alabama), and the Galaxy Zoo Team  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","nasa_id":"GSFC_20171208_Archive_e001921","keywords":["NASA's Hubble Zooms in on a Space Oddity"],"title":"NASA's Hubble Zooms in on a Space Oddity","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2011-01-11T18:27:29Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001921/GSFC_20171208_Archive_e001921~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001921/collection.json"},{"data":[{"description":"So Coldplay isn't the only one to see a sky full of stars, these are 22K light-years away  Located approximately 22,000 light-years away in the constellation of Musca (The Fly), this tightly packed collection of stars — known as a globular cluster — goes by the name of NGC 4833. This NASA/ESA Hubble Space Telescope image shows the dazzling stellar group in all its glory.  NGC 4833 is one of the over 150 globular clusters known to reside within the Milky Way. These objects are thought to contain some of the oldest stars in our galaxy. Studying these ancient cosmic clusters can help astronomers to unravel how a galaxy formed and evolved, and give an idea of the galaxy’s age.  Globular clusters are responsible for some of the most striking sights in the cosmos, with hundreds of thousands of stars congregating in the same region of space. Hubble has observed many of these clusters during its time in orbit around our planet, each as breathtaking as the last.  bit.ly/2b85p36   Image credit: ESA/Hubble and NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","nasa_id":"GSFC_20171208_Archive_e000256","keywords":["A Hubble Sky Full of Stars","nasa","hubble","space","stars","global","cluster","ngc4833"],"title":"A Hubble Sky Full of Stars","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000256/GSFC_20171208_Archive_e000256~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000256/collection.json"},{"data":[{"description":"This galaxy is known as Mrk 820 and is classified as a lenticular galaxy — type S0 on the Hubble Tuning Fork. The Hubble Tuning Fork is used to classify galaxies according to their morphology. Elliptical galaxies look like smooth blobs in the sky and lie on the handle of the fork. They are arranged along the handle based on how elliptical they are, with the more spherical galaxies furthest from the tines of the fork, and the more egg-shaped ones closest to the end of the handle where it divides. The two prongs of the tuning fork represent types of unbarred and barred spiral galaxies.  Lenticular galaxies like Mrk 820 are in the transition zone between ellipticals and spirals and lie right where the fork divides. A closer look at the appearance of Mrk 820 reveals hints of a spiral structure embedded in a circular halo of stars.  Surrounding Mrk 820 in this image is a good sampling of other galaxy types, covering almost every type found on the Hubble Tuning Fork, both elliptical and spiral. Most of the smears and specks are distant galaxies, but the prominent bright object at the bottom is a foreground star called TYC 4386-787-1.  Credit: ESA/Hubble &amp; NASA and N. Gorin (STScI), Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","nasa_id":"GSFC_20171208_Archive_e000506","keywords":["A Galaxy at the Center of the Hubble Tuning Fork","space","nasa","galaxy","lenticular","hubble","nasagoddard","mrk820"],"title":"A Galaxy at the Center of the Hubble Tuning Fork","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000506/GSFC_20171208_Archive_e000506~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000506/collection.json"},{"data":[{"description":"Observations by the NASA/ESA Hubble Space Telescope have taken advantage of gravitational lensing to reveal the largest sample of the faintest and earliest known galaxies in the universe. Some of these galaxies formed just 600 million years after the big bang and are fainter than any other galaxy yet uncovered by Hubble. The team has determined for the first time with some confidence that these small galaxies were vital to creating the universe that we see today.  An international team of astronomers, led by Hakim Atek of the Ecole Polytechnique Fédérale de Lausanne, Switzerland, has discovered over 250 tiny galaxies that existed only 600-900 million years after the big bang— one of the largest samples of dwarf galaxies yet to be discovered at these epochs. The light from these galaxies took over 12 billion years to reach the telescope, allowing the astronomers to look back in time when the universe was still very young.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-spies-big-bang-frontiers\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-spies-big-bang-frontiers</a>  Credit: NASA/ESA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000528","keywords":["Hubble Spies Big Bang Frontiers","big","galaxy","galaxies","bang","hubble","hubblespacetelescope","bingbang","macsj071753745"],"title":"Hubble Spies Big Bang Frontiers","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000528/GSFC_20171208_Archive_e000528~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000528/collection.json"},{"data":[{"title":"Alien aurorae spotted on Uranus by Hubble","nasa_id":"GSFC_20171208_Archive_e000100","keywords":["Alien aurorae spotted on Uranus by Hubble","uranus"],"description":"This is a composite image of Uranus by Voyager 2 and two different observations made by Hubble — one for the ring and one for the auroras.  Ever since Voyager 2 beamed home spectacular images of the planets in the 1980s, planet-lovers have been hooked on auroras on other planets. Auroras are caused by streams of charged particles like electrons that come from various origins such as solar winds, the planetary ionosphere, and moon volcanism. They become caught in powerful magnetic fields and are channeled into the upper atmosphere, where their interactions with gas particles, such as oxygen or nitrogen, set off spectacular bursts of light.  The auroras on Jupiter and Saturn are well-studied, but not much is known about the auroras of the giant ice planet Uranus. In 2011, the NASA/ESA Hubble Space Telescope became the first Earth-based telescope to snap an image of the auroras on Uranus. In 2012 and 2014 a team led by an astronomer from Paris Observatory took a second look at the auroras using the ultraviolet capabilities of the Space Telescope Imaging Spectrograph (STIS) installed on Hubble.  They tracked the interplanetary shocks caused by two powerful bursts of solar wind traveling from the sun to Uranus, then used Hubble to capture their effect on Uranus’ auroras — and found themselves observing the most intense auroras ever seen on the planet. By watching the auroras over time, they collected the first direct evidence that these powerful shimmering regions rotate with the planet. They also re-discovered Uranus’ long-lost magnetic poles, which were lost shortly after their discovery by Voyager 2 in 1986 due to uncertainties in measurements and the featureless planet surface.  Credit: ESA/Hubble &amp; NASA, L. Lamy / Observatoire de Paris  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000100/GSFC_20171208_Archive_e000100~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000100/collection.json"},{"data":[{"description":"The star of this NASA/ESA Hubble Space Telescope image is a galaxy known as NGC 4656, located in the constellation of Canes Venatici (The Hunting Dogs). However, it also has a somewhat more interesting and intriguing name: the Hockey Stick Galaxy! The reason for this is a little unclear from this partial view, which shows the bright central region, but the galaxy is actually shaped like an elongated, warped stick, stretching out through space until it curls around at one end to form a striking imitation of a celestial hockey stick.  This unusual shape is thought to be due to an interaction between NGC 4656 and a couple of near neighbors, NGC 4631 (otherwise known as The Whale Galaxy) and NGC 4627 (a small elliptical). Galactic interactions can completely reshape a celestial object, shifting and warping its constituent gas, stars, and dust into bizarre and beautiful configurations.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000012","keywords":["Hubble's Hockey Stick Galaxy","ngc4656"],"title":"Hubble's Hockey Stick Galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000012/GSFC_20171208_Archive_e000012~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000012/collection.json"},{"data":[{"title":"Hubble Looks in on a Galactic Nursery","nasa_id":"GSFC_20171208_Archive_e000677","keywords":["Hubble Looks in on a Galactic Nursery","ngc1140"],"description":"This dramatic image shows the NASA/ESA Hubble Space Telescope’s view of dwarf galaxy known as NGC 1140, which lies 60 million light-years away in the constellation of Eridanus. As can be seen in this image NGC 1140 has an irregular form, much like the Large Magellanic Cloud — a small galaxy that orbits the Milky Way.  This small galaxy is undergoing what is known as a starburst. Despite being almost ten times smaller than the Milky Way it is creating stars at about the same rate, with the equivalent of one star the size of our sun being created per year. This is clearly visible in the image, which shows the galaxy illuminated by bright, blue-white, young stars.  Galaxies like NGC 1140 — small, starbursting and containing large amounts of primordial gas with far fewer elements heavier than hydrogen and helium than are present in our sun — are of particular interest to astronomers. Their composition makes them similar to the intensely star-forming galaxies in the early Universe. And these early Universe galaxies were the building blocks of present-day large galaxies like our galaxy, the Milky Way. But, as they are so far away these early Universe galaxies are harder to study so these closer starbursting galaxies are a good substitute for learning more about galaxy evolution.  The vigorous star formation will have a very destructive effect on this small dwarf galaxy in its future. When the larger stars in the galaxy die, and explode as supernovae, gas is blown into space and may easily escape the gravitational pull of the galaxy. The ejection of gas from the galaxy means it is throwing out its potential for future stars as this gas is one of the building blocks of star formation. NGC 1140’s starburst cannot last for long.  Image credit: ESA/Hubble &amp; NASA ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000677/GSFC_20171208_Archive_e000677~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000677/collection.json"},{"data":[{"description":"This Hubble image shows NGC 4789A, a dwarf irregular galaxy in the constellation of Coma Berenices. It certainly lives up to its name — the stars that call this galaxy home are smeared out across the sky in an apparently disorderly and irregular jumble, giving NGC 4789A a far more subtle and abstract appearance than its glitzy spiral and elliptical cousins.  These stars may look as if they have been randomly sprinkled on the sky, but they are all held together by gravity. The colors in this image have been deliberately exaggerated to emphasize the mix of blue and red stars. The blue stars are bright, hot and massive stars that have formed relatively recently, whereas the red stars are much older. The presence of both tells us that stars have been forming in this galaxy throughout its history.  At a distance of just over 14 million light-years away NGC 4789A is relatively close to us, allowing us to see many of the individual stars within its bounds. This image also reveals numerous other galaxies, far more distant, that appear as fuzzy shapes spread across the image.  Image Credit: ESA/Hubble &amp; NASA, Acknowledgements: Judy Schmidt (Geckzilla)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000159","keywords":["Hubble Nets a Subtle Swarm","ngc4789a"],"title":"Hubble Nets a Subtle Swarm","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000159/GSFC_20171208_Archive_e000159~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000159/collection.json"},{"data":[{"description":"Most galaxies possess a majestic spiral or elliptical structure. About a quarter of galaxies, though, defy such conventional, rounded aesthetics, instead sporting a messy, indefinable shape. Known as irregular galaxies, this group includes NGC 5408, the galaxy that has been snapped here by the NASA/ESA Hubble Space Telescope.  John Herschel recorded the existence of NGC 5408 in June 1834. Astronomers had long mistaken NGC 5408 for a planetary nebula, an expelled cloud of material from an aging star. Instead, bucking labels, NGC 5408 turned out to be an entire galaxy, located about 16 million light-years from Earth in the constellation of Centaurus (The Centaur).  In yet another sign of NGC 5408 breaking convention, the galaxy is associated with an object known as an ultraluminous X-ray source, dubbed NGC 5408 X-1, one of the best studied of its class. These rare objects beam out prodigious amounts of energetic X-rays. Astrophysicists believe these sources to be strong candidates for intermediate-mass black holes. This hypothetical type of black hole has significantly less mass than the supermassive black holes found in galactic centers, which can have billions of times the mass of the sun, but have a good deal more mass than the black holes formed when giant stars collapse.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000433","keywords":["Hubble Spies a Rebel","space","nasa","hubble","nasagoddard","ngc5408"],"title":"Hubble Spies a Rebel","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000433/GSFC_20171208_Archive_e000433~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000433/collection.json"},{"data":[{"title":"Hubble’s View of a Changing Fan","nasa_id":"GSFC_20171208_Archive_e001513","keywords":["Hubble’s View of a Changing Fan","space","nasa","hubble","heliophysics","solarsystemexploration","goddardbahrefhttpwwwnasagovaudienceformediafeaturesmpphotoguidelineshtmlrelnofollownasaimageusepolicyabbahrefhttpwwwnasagovcentersgoddardhomeindexhtmlrelnofollownasagoddardspaceflightcenterabenable"],"description":"The Universe is rarely static, although the timescales involved can be very long. Since modern astronomical observations began we have been observing the birthplaces of new stars and planets, searching for and studying the subtle changes that help us to figure out what is happening within.  The bright spot located at the edge of the bluish fan-shaped structure in this Hubble image is a young star called V* PV Cephei, or PV Cep. It is a favorite target for amateur astronomers because the fan-shaped nebulosity, known as GM 1-29 or Gyulbudaghian’s Nebula, changes over a timescale of months. The brightness of the star has also varied over time.  Images of PV Cep taken in 1952 showed a nebulous streak, similar to a comet’s tail. However, this had vanished when new images of the star were obtained some twenty-five years later. Instead, the blue fan-shaped nebula had appeared. Twenty-five years is a very short period on cosmic timescales, so astronomers think that the mysterious streak may have been a temporary phenomenon, such as the remnants of a massive stellar flare — similar to the solar flares we are used to seeing in the solar system.  At the same time as this was happening, the star itself was brightening. This provided the light to illuminate the newly formed fan-shaped nebula. This brightening might be related to the start of the hydrogen-burning phase of the star, which would mean that it was reaching maturity.  PV Cep is thought to be surrounded by a disc of gas and dust, which would stop light from escaping in all directions. The fan-like appearance is therefore probably a result of starlight escaping from the dust disc and projecting onto the nebula.  PV Cep is located in the northern constellation of Cepheus at a distance of over 1600 light-years from Earth.   European Space Agency/NASA Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001513/GSFC_20171208_Archive_e001513~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001513/collection.json"},{"data":[{"description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","nasa_id":"GSFC_20171208_Archive_e000332","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"title":"Hubble Takes Mars Portrait Near Close Approach","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000332/GSFC_20171208_Archive_e000332~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000332/collection.json"},{"data":[{"description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","nasa_id":"GSFC_20171208_Archive_e000334","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"title":"Hubble Takes Mars Portrait Near Close Approach","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000334/GSFC_20171208_Archive_e000334~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000334/collection.json"},{"data":[{"description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","nasa_id":"GSFC_20171208_Archive_e000333","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"title":"Hubble Takes Mars Portrait Near Close Approach","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000333/GSFC_20171208_Archive_e000333~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000333/collection.json"},{"data":[{"description":"Fireworks shows are not just confined to Earth’s skies. NASA’s Hubble Space Telescope has captured a spectacular fireworks display in a small, nearby galaxy, which resembles a July 4th skyrocket.  A firestorm of star birth is lighting up one end of the diminutive galaxy Kiso 5639. The dwarf galaxy is shaped like a flattened pancake, but because it is tilted edge-on, it resembles a skyrocket, with a brilliant blazing head and a long, star-studded tail.  Kiso 5639 is a rare, nearby example of elongated galaxies that occur in abundance at larger distances, where we observe the universe during earlier epochs. Astronomers suggest that the frenzied star birth is sparked by intergalactic gas raining on one end of the galaxy as it drifts through space.  “I think Kiso 5639 is a beautiful, up-close example of what must have been common long ago,” said lead researcher Debra Elmegreen of Vassar College, in Poughkeepsie, New York. “The current thinking is that galaxies in the early universe grow from accreting gas from the surrounding neighborhood. It’s a stage that galaxies, including our Milky Way, must go through as they are growing up.”  Observations of the early universe, such as Hubble’s Ultra-Deep Field, reveal that about 10 percent of all galaxies have these elongated shapes, and are collectively called “tadpoles.” But studies of the nearby universe have turned up only a few of these unusual galaxies, including Kiso 5639. The development of the nearby star-making tadpole galaxies, however, has lagged behind that of their peers, which have spent billions of years building themselves up into many of the spiral galaxies seen today.  Elmegreen used Hubble’s Wide Field Camera 3 to conduct a detailed imaging study of Kiso 5639. The images in different filters reveal information about an object by dissecting its light into its component colors. Hubble’s crisp resolution helped Elmegreen and her team analyze the giant star-forming clumps in Kiso 5639 and determine the masses and ages of the star clusters.  The international team of researchers selected Kiso 5639 from a spectroscopic survey of 10 nearby tadpole galaxies, observed with the Grand Canary Telescope in La Palma, Spain, by Jorge Sanchez Almeida and collaborators at the Instituto de Astrofisica de Canarias. The observations revealed that in most of those galaxies, including Kiso 5639, the gas composition is not uniform.  The bright gas in the galaxy’s head contains fewer heavier elements (collectively called “metals”), such as carbon and oxygen, than the rest of the galaxy. Stars consist mainly of hydrogen and helium, but cook up other “heavier” elements. When the stars die, they release their heavy elements and enrich the surrounding gas.  “The metallicity suggests that there has to be rather pure gas, composed mostly of hydrogen, coming into the star-forming part of the galaxy, because intergalactic space contains more pristine hydrogen-rich gas,” Elmegreen explained. “Otherwise, the starburst region should be as rich in heavy elements as the rest of the galaxy.”  Hubble offers a detailed view of the galaxy’s star-making frenzy. The telescope uncovered several dozen clusters of stars in the galaxy’s star-forming head, which spans 2,700 light-years across. These clusters have an average age of less than 1 million years and masses that are three to six times larger than those in the rest of the galaxy. Other star formation is taking place throughout the galaxy but on a much smaller scale. Star clusters in the rest of the galaxy are between several million to a few billion years old.  “There is much more star formation going on in the head than what you would expect in such a tiny galaxy,” said team member Bruce Elmegreen of IBM’s Thomas J. Watson’s Research Center, in Yorktown Heights, New York. “And we think the star formation is triggered by the ongoing accretion of metal-poor gas onto a part of an otherwise quiescent dwarf galaxy.”  Hubble also revealed giant holes peppered throughout the galaxy’s starburst head. These cavities give the galaxy’s head a Swiss-cheese appearance because numerous supernova detonations – like firework aerial bursts – have carved out holes of rarified superheated gas.  The galaxy, located 82 million light-years away, has taken billions of years to develop because it has been drifting through an isolated “desert” in the universe, devoid of much gas.  What triggered the starburst in such a backwater galaxy? Based on simulations by Daniel Ceverino of the Center for Astronomy at Heidelberg University in Germany, and other team members, the observations suggest that less than 1 million years ago, Kiso 5639’s leading edge encountered a filament of gas. The filament dropped a large clump of matter onto the galaxy, stoking the vigorous star birth.  Debra Elmegreen expects that in the future other parts of the galaxy will join in the star-making fireworks show. “Galaxies rotate, and as Kiso 5639 continues to spin, another part of the galaxy may receive an infusion of new gas from this filament, instigating another round of star birth,” she said.  The team’s results have been accepted for publication in The Astrophysical Journal.  Other team members include Casiana Munoz-Tunon and Mercedes Filho (Instituto de Astrofísica de Canarias, Canary Islands), Jairo Mendez-Abreu (University of St. Andrews, United Kingdom), John Gallagher (University of Wisconsin-Madison), and Marc Rafelski (NASA's Goddard Space Flight Center, Greenbelt, Maryland).  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  For images and more information about Kiso 5639 and Hubble, visit:   <a href=\"http://hubblesite.org/news/2016/23\" rel=\"nofollow\">hubblesite.org/news/2016/23</a>  <a href=\"http://www.nasa.gov/hubble\" rel=\"nofollow\">www.nasa.gov/hubble</a>  Image credit: NASA, ESA, and D. Elmegreen (Vassar College)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","nasa_id":"GSFC_20171208_Archive_e000278","keywords":["Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","nasa","galaxy","hubble","nasagoddard"],"title":"Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000278/GSFC_20171208_Archive_e000278~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000278/collection.json"},{"data":[{"description":"This new NASA/ESA Hubble Space Telescope image shows the globular cluster IC 4499.  Globular clusters are big balls of old stars that orbit around their host galaxy. It has long been believed that all the stars within a globular cluster form at the about same time, a property which can be used to determine the cluster's age. For more massive globulars however, detailed observations have shown that this is not entirely true — there is evidence that they instead consist of multiple populations of stars born at different times. One of the driving forces behind this behavior is thought to be gravity: more massive globulars manage to grab more gas and dust, which can then be transformed into new stars.  IC 4499 is a somewhat special case. Its mass lies somewhere between low-mass globulars, which show a single generation build-up, and the more complex and massive globulars which can contain more than one generation of stars. By studying objects like IC 4499 astronomers can therefore explore how mass affects a cluster's contents. Astronomers found no sign of multiple generations of stars in IC 4499 — supporting the idea that less massive clusters in general only consist of a single stellar generation.  Hubble observations of IC 4499 have also helped to pinpoint the cluster's age: observations of this cluster from the 1990s suggested a puzzlingly young age when compared to other globular clusters within the Milky Way. However, since those first estimates new Hubble data have been obtained and it has been found to be much more likely that IC 4499 is actually roughly the same age as other Milky Way clusters at approximately 12 billion years old.         Credit: ESA and NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001017","keywords":["Hubble Revisits a Globular Cluster’s Age"],"title":"Hubble Revisits a Globular Cluster’s Age","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-08-13T20:30:40Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001017/GSFC_20171208_Archive_e001017~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001017/collection.json"},{"data":[{"title":"Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’","nasa_id":"GSFC_20171208_Archive_e000720","keywords":["Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’"],"description":"Astronomers using NASA’s Hubble Space Telescope have uncovered surprising new clues about a hefty, rapidly aging star whose behavior has never been seen before in our Milky Way galaxy. In fact, the star is so weird that astronomers have nicknamed it “Nasty 1,” a play on its catalog name of NaSt1. The star may represent a brief transitory stage in the evolution of extremely massive stars.  First discovered several decades ago, Nasty 1 was identified as a Wolf-Rayet star, a rapidly evolving star that is much more massive than our sun. The star loses its hydrogen-filled outer layers quickly, exposing its super-hot and extremely bright helium-burning core.  But Nasty 1 doesn’t look like a typical Wolf-Rayet star. The astronomers using Hubble had expected to see twin lobes of gas flowing from opposite sides of the star, perhaps similar to those emanating from the massive star Eta Carinae, which is a Wolf-Rayet candidate.   Instead, Hubble revealed a pancake-shaped disk of gas encircling the star. The vast disk is nearly 2 trillion miles wide, and may have formed from an unseen companion star that snacked on the outer envelope of the newly formed Wolf-Rayet.  Based on current estimates, the nebula surrounding the stars is just a few thousand years old, and as close as 3,000 light-years from Earth.  Read more: <a href=\"http://www.nasa.gov/feature/hubble-observes-one-of-a-kind-star-nicknamed-nasty\" rel=\"nofollow\">www.nasa.gov/feature/hubble-observes-one-of-a-kind-star-n...</a>  Credits: NASA/Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-05-21T19:22:40Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000720/GSFC_20171208_Archive_e000720~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000720/collection.json"},{"data":[{"description":"This stunning new image from the NASA/ESA Hubble Space Telescope shows part of the sky in the constellation of Canes Venatici (The Hunting Dogs).  Although this region of the sky is not home to any stellar heavyweights, being mostly filled with stars of average brightness, it does contain five Messier objects and numerous intriguing galaxies — including NGC 5195, a small barred spiral galaxy considered to be one of the most beautiful galaxies visible, and its nearby interacting partner the Whirlpool Galaxy (heic0506a). The quirky Sunflower Galaxy is another notable galaxy in this constellation, and is one of the largest and brightest edge-on galaxies in our skies.  Joining this host of characters is spiral galaxy NGC 4244, nicknamed the Silver Needle Galaxy, shown in this new image from Hubble. This galaxy spans some 65,000 light-years and lies around 13.5 million light-years away. It appears as a wafer-thin streak across the sky, with loosely wound spiral arms hidden from view as we observe the galaxy from the side. It is part of a group of galaxies known as the M94 Group.   Numerous bright clumps of gas can be seen scattered across its length, along with dark dust lanes surrounding the galaxy’s core. NGC 4244 also has a bright star cluster at its center. Although we can make out the galaxy’s bright central region and star-spattered arms, we cannot see any more intricate structure due to the galaxy’s position; from Earth, we see it stretched out as a flattened streak across the sky. A number of different observations were pieced together to form this mosaic, and gaps in Hubble’s coverage have been filled in using ground-based data. The Hubble observations were taken as part of the Galaxy Halos, Outer disks, Substructure, Thick disks and Star clusters (GHOSTS) survey, which is scanning nearby galaxies to explore how they and their stars formed to get a more complete view of the history of the Universe.   European Space Agency Credit: NASA &amp; ESA, Acknowledgement: Roelof de Jong  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001014","keywords":["Hubble Sees a Silver Needle in the Sky"],"title":"Hubble Sees a Silver Needle in the Sky","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-08-22T15:19:02Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001014/GSFC_20171208_Archive_e001014~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001014/collection.json"},{"data":[{"description":"NASA image release April 22, 2010  NASA's Hubble Space Telescope captured this billowing cloud of cold interstellar gas and dust rising from a tempestuous stellar nursery located in the Carina Nebula, 7,500 light-years away in the southern constellation Carina. This pillar of dust and gas serves as an incubator for new stars and is teeming with new star-forming activity. Hot, young stars erode and sculpt the clouds into this fantasy landscape by sending out thick stellar winds and scorching ultraviolet radiation. The low-density regions of the nebula are shredded while the denser parts resist erosion and remain as thick pillars. In the dark, cold interiors of these columns new stars continue to form. In the process of star formation, a disk around the proto-star slowly accretes onto the star's surface. Part of the material is ejected along jets perpendicular to the accretion disk. The jets have speeds of several hundreds of miles per second. As these jets plow into the surround nebula, they create small, glowing patches of nebulosity, called Herbig-Haro (HH) objects.  Long streamers of gas can be seen shooting in opposite directions off the pedestal on the upper right-hand side of the image. Another pair of jets is visible in a peak near the top-center of the image. These jets (known as HH 901 and HH 902, respectively) are common signatures of the births of new stars. This image celebrates the 20th anniversary of Hubble's launch and deployment into an orbit around Earth. Hubble's Wide Field Camera 3 observed the pillar on Feb. 1-2, 2010. The colors in this composite image correspond to the glow of oxygen (blue), hydrogen and nitrogen (green), and sulfur (red). Object Names: HH 901, HH 902 Image Type: Astronomical  Credit: NASA, ESA, and M. Livio and the Hubble 20th Anniversary Team (STScI)  To read learn more about this image go to:  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble20th-img.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble20th-img....</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","nasa_id":"GSFC_20171208_Archive_e002076","keywords":["Hubble Captures Spectacular \"Landscape\" in the Carina Nebula","space","nasa","hubble","hubblespacetelescope","goddardspaceflightcenter","hubble20thanniversary","hubble20years"],"title":"Hubble Captures Spectacular \"Landscape\" in the Carina Nebula","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002076/GSFC_20171208_Archive_e002076~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002076/collection.json"},{"data":[{"title":"Hubble Sees Spiral in Serpens","nasa_id":"GSFC_20171208_Archive_e000995","keywords":["Hubble Sees Spiral in Serpens","space","nasa","galaxy","esa","darkmatter","hubble","pgc54493"],"description":"This new NASA/ESA Hubble Space Telescope image shows a beautiful spiral galaxy known as PGC 54493, located in the constellation of Serpens (The Serpent). This galaxy is part of a galaxy cluster that has been studied by astronomers exploring an intriguing phenomenon known as weak gravitational lensing.  This effect, caused by the uneven distribution of matter (including dark matter) throughout the Universe, has been explored via surveys such as the Hubble Medium Deep Survey. Dark matter is one of the great mysteries in cosmology. It behaves very differently from ordinary matter as it does not emit or absorb light or other forms of electromagnetic energy — hence the term &quot;dark.&quot;  Even though we cannot observe dark matter directly, we know it exists. One prominent piece of evidence for the existence of this mysterious matter is known as the &quot;galaxy rotation problem.&quot; Galaxies rotate at such speeds and in such a way that ordinary matter alone — the stuff we see — would not be able to hold them together. The amount of mass that is &quot;missing&quot; visibly is dark matter, which is thought to make up some 27 percent of the total contents of the Universe, with dark energy and normal matter making up the rest. PGC 55493 has been studied in connection with an effect known as cosmic shearing. This is a weak gravitational lensing effect that creates tiny distortions in images of distant galaxies.   European Space Agency ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000995/GSFC_20171208_Archive_e000995~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000995/collection.json"},{"data":[{"title":"Hubble Sees Stars and a Stripe in Celestial Fireworks","nasa_id":"GSFC_20171208_Archive_e002173","keywords":["Hubble Sees Stars and a Stripe in Celestial Fireworks","space","nasa","telescope","galaxy","goddard","hubble","hubblespacetelescope","goddardspaceflightcenter"],"description":"Release date: July 1, 2008  SN 1006 Supernova Remnant (Hubble)  A delicate ribbon of gas floats eerily in our galaxy. A contrail from an alien spaceship? A jet from a black-hole? Actually this image, taken by NASA's Hubble Space Telescope, is a very thin section of a supernova remnant caused by a stellar explosion that occurred more than 1,000 years ago.  On or around May 1, 1006 A.D., observers from Africa to Europe to the Far East witnessed and recorded the arrival of light from what is now called SN 1006, a tremendous supernova explosion caused by the final death throes of a white dwarf star nearly 7,000 light-years away. The supernova was probably the brightest star ever seen by humans, and surpassed Venus as the brightest object in the night time sky, only to be surpassed by the moon. It was visible even during the day for weeks, and remained visible to the naked eye for at least two and a half years before fading away.  It wasn't until the mid-1960s that radio astronomers first detected a nearly circular ring of material at the recorded position of the supernova. The ring was almost 30 arcminutes across, the same angular diameter as the full moon. The size of the remnant implied that the blast wave from the supernova had expanded at nearly 20 million miles per hour over the nearly 1,000 years since the explosion occurred. In 1976, the first detection of exceedingly faint optical emission of the supernova remnant was reported, but only for a filament located on the northwest edge of the radio ring. A tiny portion of this filament is revealed in detail by the Hubble observation. The twisting ribbon of light seen by Hubble corresponds to locations where the expanding blast wave from the supernova is now sweeping into very tenuous surrounding gas.  The hydrogen gas heated by this fast shock wave emits radiation in visible light. Hence, the optical emission provides astronomers with a detailed &quot;snapshot&quot; of the actual position and geometry of the shock front at any given time. Bright edges within the ribbon correspond to places where the shock wave is seen exactly edge on to our line of sight. Today we know that SN 1006 has a diameter of nearly 60 light-years, and it is still expanding at roughly 6 million miles per hour. Even at this tremendous speed, however, it takes observations typically separated by years to see significant outward motion of the shock wave against the grid of background stars. In the Hubble image as displayed, the supernova would have occurred far off the lower right corner of the image, and the motion would be toward the upper left.  SN 1006 resides within our Milky Way Galaxy. Located more than 14 degrees off the plane of the galaxy's disk, there is relatively little confusion with other foreground and background objects in the field when trying to study this object. In the Hubble image, many background galaxies (orange extended objects) far off in the distant universe can be seen dotting the image. Most of the white dots are foreground or background stars in our Milky Way galaxy.  This image is a composite of hydrogen-light observations taken with Hubble's Advanced Camera for Surveys in February 2006 and Wide Field Planetary Camera 2 observations in blue, yellow-green, and near-infrared light taken in April 2008. The supernova remnant, visible only in the hydrogen-light filter was assigned a red hue in the Heritage color image.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: W. Blair (Johns Hopkins University)  To learn more about the Hubble Space Telescope go here:  <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002173/GSFC_20171208_Archive_e002173~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002173/collection.json"},{"data":[{"title":"Hubble Catches a Galaxy Duo by the \"Hare\"","nasa_id":"GSFC_20171208_Archive_e000052","keywords":["Hubble Catches a Galaxy Duo by the \"Hare\"","iras060762139"],"description":"This image from the NASA/ESA Hubble Space Telescope shows the unusual galaxy IRAS 06076-2139, found in the constellation Lepus (The Hare). Hubble’s Wide Field Camera 3 (WFC3) and Advanced Camera for Surveys (ACS) instruments observed the galaxy from a distance of 500 million light-years.  This particular object stands out from the crowd by actually being composed of two separate galaxies rushing past each other at about 2 million kilometers (1,243,000 miles) per hour. This speed is most likely too fast for them to merge and form a single galaxy. However, because of their small separation of only about 20,000 light-years, the galaxies will distort one another through the force of gravity while passing each other, changing their structures on a grand scale.  Such galactic interactions are a common sight for Hubble, and have long been a field of study for astronomers. The intriguing behaviors of interacting galaxies take many forms; galactic cannibalism, galaxy harassment and even galaxy collisions. The Milky Way itself will eventually fall victim to the latter, merging with the Andromeda Galaxy in about 4.5 billion years. The fate of our galaxy shouldn’t be alarming though: while galaxies are populated by billions of stars, the distances between individual stars are so large that hardly any stellar collisions will occur.  Credit: ESA/Hubble &amp; NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000052/GSFC_20171208_Archive_e000052~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000052/collection.json"},{"data":[{"title":"Hubble Sees Pinwheel of Star Birth","nasa_id":"GSFC_20171208_Archive_e001979","keywords":["Hubble Sees Pinwheel of Star Birth","hubble","hst","nasa","universe","galaxy","spiralgalaxy","space","star","goddardspaceflightcenter"],"description":"NASA image release October 19, 2010  Though the universe is chock full of spiral-shaped galaxies, no two look exactly the same. This face-on spiral galaxy, called NGC 3982, is striking for its rich tapestry of star birth, along with its winding arms. The arms are lined with pink star-forming regions of glowing hydrogen, newborn blue star clusters, and obscuring dust lanes that provide the raw material for future generations of stars. The bright nucleus is home to an older population of stars, which grow ever more densely packed toward the center.  NGC 3982 is located about 68 million light-years away in the constellation Ursa Major. The galaxy spans about 30,000 light-years, one-third of the size of our Milky Way galaxy. This color image is composed of exposures taken by the Hubble Space Telescope's Wide Field Planetary Camera 2 (WFPC2), the Advanced Camera for Surveys (ACS), and the Wide Field Camera 3 (WFC3). The observations were taken between March 2000 and August 2009. The rich color range comes from the fact that the galaxy was photographed invisible and near-infrared light. Also used was a filter that isolates hydrogen emission that emanates from bright star-forming regions dotting the spiral arms.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc. in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: A. Riess (STScI)  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001979/GSFC_20171208_Archive_e001979~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001979/collection.json"},{"data":[{"description":"This delicate blue group of stars — actually an irregular galaxy named IC 3583 — sits some 30 million light-years away in the constellation of Virgo (The Virgin).  It may seem to have no discernable structure, but IC 3583 has been found to have a bar of stars running through its center. These structures are common throughout the Universe, and are found within the majority of spiral, many irregular, and some lenticular galaxies. Two of our closest cosmic neighbors, the Large and Small Magellanic Clouds, are barred, indicating that they may have once been barred spiral galaxies that were disrupted or torn apart by the gravitational pull of the Milky Way.  Researchers at the University of Leicester, England note there are two types of irregular galaxy. Type I's are usually single galaxies of peculiar appearance. They contain a large fraction of young stars, and show the luminous nebulae that are also visible in spiral galaxies. Type II irregulars include the group known as interacting or disrupting galaxies, in which the strange appearance is due to two or more galaxies colliding, merging or otherwise interacting gravitationally.  Something similar might be happening with IC 3583. This small galaxy is thought to be gravitationally interacting with one of its neighbors, the spiral Messier 90. Together, the duo form a pairing known as Arp 76. It’s still unclear whether these flirtations are the cause of IC 3583’s irregular appearance — but whatever the cause, the galaxy makes for a strikingly delicate sight in this NASA/ESA Hubble Space Telescope image, glimmering in the blackness of space.  Image Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000154","keywords":["Hubble Spotlight on Irregular Galaxy","ic3583"],"title":"Hubble Spotlight on Irregular Galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000154/GSFC_20171208_Archive_e000154~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000154/collection.json"},{"data":[{"description":"This galaxy is currently a hotbed of vigorous star formation. NGC 1569 is a starburst galaxy, meaning that — as the name suggests — it is bursting at the seams with stars, and is currently producing them at a rate far higher than that observed in most other galaxies. For almost 100 million years, NGC 1569 has pumped out stars more than 100 times faster than the Milky Way!  As a result, this glittering galaxy is home to super star clusters, three of which are visible in this image — one of the two bright clusters is actually the superposition of two massive clusters. Each containing more than a million stars, these brilliant blue clusters reside within a large cavity of gas carved out by multiple supernovae, the energetic remnants of massive stars.  In 2008, Hubble observed the galaxy's cluttered core and sparsely populated outer fringes. By pinpointing individual red giant stars, Hubble’s Advanced Camera for Surveys enabled astronomers to calculate a new — and much more precise — estimate for NGC 1569’s distance. This revealed that the galaxy is actually one and a half times farther away than previously thought, and a member of the IC 342 galaxy group.  Astronomers suspect that the IC 342 cosmic congregation is responsible for the star-forming frenzy observed in NGC 1569. Gravitational interactions between this galactic group are believed to be compressing the gas within NGC 1569. As it is compressed, the gas collapses, heats up and forms new stars.  Image credit: ESA/Hubble &amp; NASA, Aloisi, Ford; Acknowledgement: Judy Schmidt ","nasa_id":"GSFC_20171208_Archive_e000275","keywords":["Hubble Hotbed of Vigorous Star Formation","ngc1569"],"title":"Hubble Hotbed of Vigorous Star Formation","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000275/GSFC_20171208_Archive_e000275~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000275/collection.json"},{"data":[{"description":"This image, taken with the Wide Field Planetary Camera 2 on board the NASA/ESA Hubble Space Telescope, shows the galaxy NGC 6052, located around 230 million light-years away in the constellation of Hercules.  It would be reasonable to think of this as a single abnormal galaxy, and it was originally classified as such. However, it is in fact a “new” galaxy in the process of forming. Two separate galaxies have been gradually drawn together, attracted by gravity, and have collided. We now see them merging into a single structure.  As the merging process continues, individual stars are thrown out of their original orbits and placed onto entirely new paths, some very distant from the region of the collision itself. Since the stars produce the light we see, the “galaxy” now appears to have a highly chaotic shape. Eventually, this new galaxy will settle down into a stable shape, which may not resemble either of the two original galaxies.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt ","nasa_id":"GSFC_20171208_Archive_e000492","keywords":["Hubble Views Two Galaxies Merging","ngc6052"],"title":"Hubble Views Two Galaxies Merging","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000492/GSFC_20171208_Archive_e000492~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000492/collection.json"},{"data":[{"title":"Hubble's View of Comet Siding Spring","nasa_id":"GSFC_20171208_Archive_e000941","keywords":["Hubble's View of Comet Siding Spring","mars","space","nasa","hubble","nasagoddard","cometsidingspring"],"description":"MARCH 27, 2014: Comet Siding Spring is plunging toward the Sun along a roughly 1-million-year orbit. The comet, discovered in 2013, was within the radius of Jupiter's orbit when the Hubble Space Telescope photographed it on March 11, 2014. Hubble resolves two jets of dust coming from the solid icy nucleus. These persistent jets were first seen in Hubble pictures taken on Oct. 29, 2013. The feature should allow astronomers to measure the direction of the nucleus's pole, and hence, rotation axis. The comet will make its closest approach to our Sun on Oct. 25, 2014, at a distance of 130 million miles, well outside Earth's orbit. On its inbound leg, Comet Siding Spring will pass within 84,000 miles of Mars on Oct. 19, 2014, which is less than half the Moon's distance from Earth. The comet is not expected to become bright enough to be seen by the naked eye.  Credit: NASA, ESA, and J.-Y. Li (Planetary Science Institute)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000941/GSFC_20171208_Archive_e000941~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000941/collection.json"},{"data":[{"description":"This NASA Hubble Space Telescope photo of NGC 7714 presents an especially striking view of the galaxy's smoke-ring-like structure. The golden loop is made of sun-like stars that have been pulled deep into space, far from the galaxy's center. The galaxy is located approximately 100 million light-years from Earth in the direction of the constellation Pisces.  The universe is full of such galaxies that are gravitationally stretched and pulled and otherwise distorted in gravitational tug-o'-wars with bypassing galaxies.  The companion galaxy doing the &quot;taffy pulling&quot; in this case, NGC 7715, lies just out of the field of view in this image. A very faint bridge of stars extends to the unseen companion. The close encounter has compressed interstellar gas to trigger bursts of star formation seen in bright blue arcs extending around NGC 7714's center.  The gravitational disruption of NGC 7714 began between 100 million and 200 million years ago, at the epoch when dinosaurs ruled the Earth.  The image was taken with the Wide Field Camera 3 and the Advanced Camera for Surveys in October 2011.  Credit: NASA and ESA. Acknowledgment: A. Gal-Yam (Weizmann Institute of Science)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000798","keywords":["Hubble Spies a Loopy Galaxy"],"title":"Hubble Spies a Loopy Galaxy","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2015-02-02T18:38:12Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000798/GSFC_20171208_Archive_e000798~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000798/collection.json"},{"data":[{"description":"Image release June 22, 2010  A spectacular new NASA/ESA Hubble Space Telescope image — one of the largest ever released of a star-forming region — highlights N11, part of a complex network of gas clouds and star clusters within our neighbouring galaxy, the Large Magellanic Cloud. This region of energetic star formation is one of the most active in the nearby Universe.  The Large Magellanic Cloud contains many bright bubbles of glowing gas. One of the largest and most spectacular has the name LHA 120-N 11, from its listing in a catalogue compiled by the American astronomer and astronaut Karl Henize in 1956, and is informally known as N11. Close up, the billowing pink clouds of glowing gas make N11 resemble a puffy swirl of fairground candy floss. From further away, its distinctive overall shape led some observers to nickname it the Bean Nebula. The dramatic and colourful features visible in the nebula are the telltale signs of star formation. N11 is a well-studied region that extends over 1000 light-years. It is the second largest star-forming region within the Large Magellanic Cloud and has produced some of the most massive stars known.    It is the process of star formation that gives N11 its distinctive look. Three successive generations of stars, each of which formed further away from the centre of the nebula than the last, have created shells of gas and dust. These shells were blown away from the newborn stars in the turmoil of their energetic birth and early life, creating the ring shapes so prominent in this image.  Beans are not the only terrestrial shapes to be found in this spectacular high resolution image from the NASA/ESA Hubble Space Telescope. In the upper left is the red bloom of nebula LHA 120-N 11A. Its rose-like petals of gas and dust are illuminated from within, thanks to the radiation from the massive hot stars at its centre. N11A is relatively compact and dense and is the site of the most recent burst of star development in the region.  Other star clusters abound in N11, including NGC 1761 at the bottom of the image, which is a group of massive hot young stars busily pouring intense ultraviolet radiation out into space. Although it is much smaller than our own galaxy, the Large Magellanic Cloud is a very vigorous region of star formation. Studying these stellar nurseries helps astronomers understand a lot more about how stars are born and their ultimate development and lifespan.  Both the Large Magellanic Cloud and its small companion, the Small Magellanic Cloud, are easily seen with the unaided eye and have always been familiar to people living in the southern hemisphere. The credit for bringing these galaxies to the attention of Europeans is usually given to Portuguese explorer Fernando de Magellan and his crew, who viewed it on their 1519 sea voyage. However, the Persian astronomer Abd Al-Rahman Al Sufi and the Italian explorer Amerigo Vespucci recorded the Large Magellanic Cloud in 964 and 1503 respectively.  Credit: NASA, ESA and Jesús Maíz Apellániz (Instituto de Astrofísica de Andalucía, Spain)  To learn more about Hubble go to: <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","nasa_id":"GSFC_20171208_Archive_e002039","keywords":["Hubble Captures Bubbles And Baby Stars","star","satellite","nasa","nebula","hubble","lightyears","hubblespacetelescope","n11","goddardspaceflightcenter","starformation"],"title":"Hubble Captures Bubbles And Baby Stars","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2017-12-08T00:00:00Z","album":"Test"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002039/GSFC_20171208_Archive_e002039~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002039/collection.json"},{"data":[{"description":"Floating at the center of this new Hubble image is a lidless purple eye, staring back at us through space. This ethereal object, known officially as [SBW2007] 1 but sometimes nicknamed SBW1, is a nebula with a giant star at its center. The star was originally twenty times more massive than our sun, and is now encased in a swirling ring of purple gas, the remains of the distant era when it cast off its outer layers via violent pulsations and winds. But the star is not just any star; scientists say that it is destined to go supernova. Twenty-six years ago, another star with striking similarities went supernova — SN 1987A. Early Hubble images of SN 1987A show eerie similarities to SBW1. Both stars had identical rings of the same size and age, which were travelling at similar speeds; both were located in similar HII regions; and they had the same brightness. In this way SBW1 is a snapshot of SN1987a's appearance before it exploded, and unsurprisingly, astronomers love studying them together. At a distance of more than 20 000 light-years it will be safe to watch when the supernova goes off. If we are very lucky it may happen in our own lifetimes.  Credit: ESA/NASA, acknowledgement: Nick Rose  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001260","keywords":["Hubble Sees a Star Set to Explode"],"title":"Hubble Sees a Star Set to Explode","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-01-10T17:02:00Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001260/GSFC_20171208_Archive_e001260~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001260/collection.json"},{"data":[{"title":"Hubble Sees a Bizarre Cosmic Rarity","nasa_id":"GSFC_20171208_Archive_e001292","keywords":["Hubble Sees a Bizarre Cosmic Rarity"],"description":"This new Hubble image shows a peculiar galaxy known as NGC 660, located around 45 million light-years away from us.  NGC 660 is classified as a &quot;polar ring galaxy,&quot; meaning that it has a belt of gas and stars around its center that it ripped from a near neighbor during a clash about one billion years ago.The first polar ring galaxy was observed in 1978 and only around a dozen more have been discovered since then, making them something of a cosmic rarity.  Unfortunately, NGC 660’s polar ring cannot be seen in this image, but the image has plenty of other features that make it of interest to astronomers – its central bulge is strangely off-kilter and, perhaps more intriguingly, it is thought to harbor exceptionally large amounts of dark matter. In addition, in late 2012 astronomers observed a massive outburst emanating from NGC 660 that was around ten times as bright as a supernova explosion. This burst was thought to be caused by a massive jet shooting out of the supermassive black hole at the center of the galaxy.   Credit: Hubble/NASA/European Space Agency  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2013-12-06T20:55:54Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001292/GSFC_20171208_Archive_e001292~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001292/collection.json"},{"data":[{"description":"This series of images shows the asteroid P/2013 R3 breaking apart, as viewed by the NASA/ESA Hubble Space Telescope in 2013. This is the first time that such a body has been seen to undergo this kind of break-up.  The Hubble observations showed that there are ten distinct objects, each with comet-like dust tails, embedded within the asteroid's dusty envelope. The four largest rocky fragments are up to 200 metres in radius, about twice the length of a football pitch.  The date increases from left to right, with frames from 29 October 2013, 15 November 2013, 13 December 2013, and 14 January 2014 respectively, showing how the clumps of debris material move around. The 14 January 2014 frame was not included in the science paper and is additional data.  Credit: NASA, ESA, D. Jewitt (UCLA)  Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001165","keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-03-06T17:01:08Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001165/GSFC_20171208_Archive_e001165~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001165/collection.json"},{"data":[{"description":"Though fragile comet nuclei have been seen falling apart as they near the Sun, nothing like the slow breakup of an asteroid has ever before been observed in the asteroid belt. A series of Hubble Space Telescope images shows that the fragments are drifting away from each other at a leisurely one mile per hour. This makes it unlikely that the asteroid is disintegrating because of a collision with another asteroid. A plausible explanation is that the asteroid is crumbling due to a subtle effect of sunlight. This causes the rotation rate to slowly increase until centrifugal force pulls the asteroid apart. The asteroid's remnant debris, weighing in at 200,000 tons, will in the future provide a rich source of meteoroids.  Hubble Observation of P/2013 R3 - November 15, 2013  Credit: NASA, ESA, and D. Jewitt (University of California, Los Angeles)   Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001166","keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-03-06T17:01:08Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001166/GSFC_20171208_Archive_e001166~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001166/collection.json"},{"data":[{"description":"Though fragile comet nuclei have been seen falling apart as they near the Sun, nothing like the slow breakup of an asteroid has ever before been observed in the asteroid belt. A series of Hubble Space Telescope images shows that the fragments are drifting away from each other at a leisurely one mile per hour. This makes it unlikely that the asteroid is disintegrating because of a collision with another asteroid. A plausible explanation is that the asteroid is crumbling due to a subtle effect of sunlight. This causes the rotation rate to slowly increase until centrifugal force pulls the asteroid apart. The asteroid's remnant debris, weighing in at 200,000 tons, will in the future provide a rich source of meteoroids.  Hubble Observation of P/2013 R3 - November 15, 2013  Credit: NASA, ESA, and D. Jewitt (University of California, Los Angeles)   Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001167","keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","media_type":"image","center":"GSFC","location":"Greenbelt, MD","date_created":"2014-03-06T17:01:07Z"}],"links":[{"render":"image","rel":"preview","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001167/GSFC_20171208_Archive_e001167~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001167/collection.json"}],"links":[{"prompt":"Next","rel":"next","href":"https://images-api.nasa.gov/search?page=2&media_type=image&q=hubble&center=GSFC"}],"version":"1.0","href":"https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble"}}
    http_version: 
  recorded_at: Tue, 26 Feb 2019 00:29:30 GMT
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '276432'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Tue, 26 Feb 2019 00:29:30 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 db88a4a8e4f93b9bfeab5462f253c306.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - 8uC4dv61yuoDKkizQjqsPxdZTNgf5LYrAXah9YtMSZvTcbJg_OXwSg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"collection":{"links":[{"rel":"next","href":"https://images-api.nasa.gov/search?media_type=image&page=2&q=hubble&center=GSFC","prompt":"Next"}],"href":"https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble","items":[{"href":"https://images-assets.nasa.gov/image/hubble-eyes-galactic-refurbishment_17322896925_o/collection.json","data":[{"title":"Hubble Eyes Galactic Refurbishment","date_created":"2015-04-30T00:00:00Z","media_type":"image","description":"The smudge of stars at the center of this NASA/ESA Hubble Space Telescope image is a galaxy known as UGC 5797. UGC 5797 is an emission line galaxy, meaning that it is currently undergoing active star formation. The result is a stellar population that is constantly being refurbished as massive bright blue stars form. Galaxies with prolific star formation are not only veiled in a blue tint, but are key to the continuation of a stellar cycle.  In this image UGC 5797 appears in front of a background of spiral galaxies. Spiral galaxies have copious amounts of dust and gas — the main ingredient for stars — and therefore often also belong to the class of emission line galaxies.  Spiral galaxies have disk-like shapes that drastically vary in appearance depending on the angle at which they are observed. The collection of spiral galaxies in this frame exhibits this attribute acutely: Some are viewed face-on, revealing the structure of the spiral arms, while the two in the bottom left are seen edge-on, appearing as plain streaks in the sky. There are many spiral galaxies, with varying colors and at different angles, sprinkled across this image — just take a look.   Credit: ESA/Hubble & NASA, Acknowledgement: Luca Limatola","keywords":["Hubble","galaxy","UGC 5797."],"nasa_id":"hubble-eyes-galactic-refurbishment_17322896925_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-eyes-galactic-refurbishment_17322896925_o/hubble-eyes-galactic-refurbishment_17322896925_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o/collection.json","data":[{"title":"Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’","date_created":"2015-03-21T00:00:00Z","media_type":"image","description":"Astronomers using NASA’s Hubble Space Telescope have uncovered surprising new clues about a hefty, rapidly aging star whose behavior has never been seen before in our Milky Way galaxy. In fact, the star is so weird that astronomers have nicknamed it “Nasty 1,” a play on its catalog name of NaSt1. The star may represent a brief transitory stage in the evolution of extremely massive stars.  First discovered several decades ago, Nasty 1 was identified as a Wolf-Rayet star, a rapidly evolving star that is much more massive than our sun. The star loses its hydrogen-filled outer layers quickly, exposing its super-hot and extremely bright helium-burning core.  But Nasty 1 doesn’t look like a typical Wolf-Rayet star. The astronomers using Hubble had expected to see twin lobes of gas flowing from opposite sides of the star, perhaps similar to those emanating from the massive star Eta Carinae, which is a Wolf-Rayet candidate.   Instead, Hubble revealed a pancake-shaped disk of gas encircling the star. The vast disk is nearly 2 trillion miles wide, and may have formed from an unseen companion star that snacked on the outer envelope of the newly formed Wolf-Rayet.  Based on current estimates, the nebula surrounding the stars is just a few thousand years old, and as close as 3,000 light-years from Earth.  Credits: NASA/Hubble","keywords":["Hubble","Milky Way","star"],"nasa_id":"hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000741/collection.json","data":[{"title":"Hubble 25","date_created":"2015-04-23T21:06:59Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000741","keywords":["Hubble 25"],"location":"Greenbelt, MD","description":"If you love Hubble as much as we do you will LOVE this video.  Sit back and enjoy 25 mesmerizing years of Hubble images!  #Hubble25  You can view all of these images on Flickr here: <a href=\"https://www.flickr.com/photos/40523828@N07/sets/72157649692430461\">www.flickr.com/photos/40523828@N07/sets/72157649692430461</a>  Credit NASA Goddard","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000741/GSFC_20171208_Archive_e000741~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o/collection.json","data":[{"title":"Hubble Captures Vivid Auroras in Jupiter’s Atmosphere","date_created":"2016-06-30T00:00:00Z","media_type":"image","description":"Astronomers are using the NASA/ESA Hubble Space Telescope to study auroras — stunning light shows in a planet’s atmosphere — on the poles of the largest planet in the solar system, Jupiter. This observation program is supported by measurements made by NASA’s Juno spacecraft, currently on its way to Jupiter.  Jupiter, the largest planet in the solar system, is best known for its colorful storms, the most famous being the Great Red Spot. Now astronomers have focused on another beautiful feature of the planet, using Hubble's ultraviolet capabilities.  The extraordinary vivid glows shown in the new observations are known as auroras. They are created when high-energy particles enter a planet’s atmosphere near its magnetic poles and collide with atoms of gas. As well as producing beautiful images, this program aims to determine how various components of Jupiter’s auroras respond to different conditions in the solar wind, a stream of charged particles ejected from the sun.  This observation program is perfectly timed as NASA’s Juno spacecraft is currently in the solar wind near Jupiter and will enter the orbit of the planet in early July 2016. While Hubble is observing and measuring the auroras on Jupiter, Juno is measuring the properties of the solar wind itself; a perfect collaboration between a telescope and a space probe.  “These auroras are very dramatic and among the most active I have ever seen”, said Jonathan Nichols from the University of Leicester, U.K., and principal investigator of the study. “It almost seems as if Jupiter is throwing a firework party for the imminent arrival of Juno.”   Credits: NASA, ESA, and J. Nichols (University of Leicester)","keywords":["Hubble","Jupiter","Aurora","Auroras"],"nasa_id":"hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000034/collection.json","data":[{"title":"Hubble’s Spirograph","album":"Test","media_type":"image","description":"Hubble’s Spirograph  In this classic Hubble image from 2000, the planetary nebula IC 418 glows like a multifaceted jewel with enigmatic patterns. IC 418 lies about 2,000 light-years from Earth in the direction of the constellation Lepus.   A planetary nebula represents the final stage in the evolution of a star similar to our sun. The star at the center of IC 418 was a red giant a few thousand years ago, but then ejected its outer layers into space to form the nebula, which has now expanded to a diameter of about 0.1 light-year. The stellar remnant at the center is the hot core of the red giant, from which ultraviolet radiation floods out into the surrounding gas, causing it to fluoresce. Over the next several thousand years, the nebula will gradually disperse into space, and then the star will cool and fade away for billions of years as a white dwarf. Our own sun is expected to undergo a similar fate, but fortunately, this will not occur until some 5 billion years from now.  The Hubble image of IC 418 is shown with colors added to represent the different camera filters used that isolate light from various chemical elements. Red shows emission from ionized nitrogen (the coolest gas in the nebula, located furthest from the hot nucleus), green shows emission from hydrogen and blue traces the emission from ionized oxygen (the hottest gas, closest to the central star). The remarkable textures seen in the nebula are newly revealed by the Hubble Space Telescope, and their origin is still uncertain.   Read more: <a href=\"https://go.nasa.gov/2roofKS\" rel=\"nofollow\">go.nasa.gov/2roofKS</a>  Credit: NASA and The Hubble Heritage Team (STScI/AURA);  Acknowledgment: Dr. Raghvendra Sahai (JPL) and Dr. Arsen R. Hajian (USNO)","keywords":["Hubble’s Spirograph"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000034","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000034/GSFC_20171208_Archive_e000034~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/hubble-catches-stellar-exodus-in-action_17644845341_o/collection.json","data":[{"title":"Hubble Catches Stellar Exodus in Action","date_created":"2015-05-14T00:00:00Z","media_type":"image","description":"Using NASA’s Hubble Space Telescope, astronomers have captured for the first time snapshots of fledging white dwarf stars beginning their slow-paced, 40-million-year migration from the crowded center of an ancient star cluster to the less populated suburbs.  White dwarfs are the burned-out relics of stars that rapidly lose mass, cool down and shut off their nuclear furnaces. As these glowing carcasses age and shed weight, their orbits begin to expand outward from the star cluster’s packed downtown. This migration is caused by a gravitational tussle among stars inside the cluster. Globular star clusters sort out stars according to their mass, governed by a gravitational billiard ball game where lower mass stars rob momentum from more massive stars. The result is that heavier stars slow down and sink to the cluster's core, while lighter stars pick up speed and move across the cluster to the edge. This process is known as \"mass segregation.\" Until these Hubble observations, astronomers had never definitively seen the dynamical conveyor belt in action.  Astronomers used Hubble to watch the white-dwarf exodus in the globular star cluster 47 Tucanae, a dense swarm of hundreds of thousands of stars in our Milky Way galaxy. The cluster resides 16,700 light-years away in the southern constellation Tucana.  Credits: NASA, ESA, and H. Richer and J. Heyl (University of British Columbia, Vancouver, Canada); acknowledgement: J. Mack (STScI) and G. Piotto (University of Padova, Italy)","keywords":["Hubble","space","star","dwarf stars","dwarf star","Globular star"],"nasa_id":"hubble-catches-stellar-exodus-in-action_17644845341_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-catches-stellar-exodus-in-action_17644845341_o/hubble-catches-stellar-exodus-in-action_17644845341_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001840/collection.json","data":[{"title":"Hubble's Necklace","album":"Test","media_type":"image","description":"Image released 11 Aug 2011.  The &quot;Necklace Nebula&quot; is located 15,000 light-years away in the constellation Sagitta (the Arrow). In this composite image, taken on July 2, 2011, Hubble's Wide Field Camera 3 captured the glow of hydrogen (blue), oxygen (green), and nitrogen (red).  The object, aptly named the Necklace Nebula, is a recently discovered planetary nebula, the glowing remains of an ordinary, Sun-like star. The nebula consists of a bright ring, measuring 12 trillion miles wide, dotted with dense, bright knots of gas that resemble diamonds in a necklace.  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/necklace-nebula.html\" target=\"_blank\" rel=\"nofollow\"></a>  <b>Credit:</b> NASA, ESA, and the Hubble Heritage Team (STScI/AURA)  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://web.stagram.com/n/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble's Necklace","nasa","goddard","hubble"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001840","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001840/GSFC_20171208_Archive_e001840~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o/collection.json","data":[{"title":"Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","date_created":"2016-06-29T00:00:00Z","media_type":"image","description":"Fireworks shows are not just confined to Earth’s skies. NASA’s Hubble Space Telescope has captured a spectacular fireworks display in a small, nearby galaxy, which resembles a July 4th skyrocket.  A firestorm of star birth is lighting up one end of the diminutive galaxy Kiso 5639. The dwarf galaxy is shaped like a flattened pancake, but because it is tilted edge-on, it resembles a skyrocket, with a brilliant blazing head and a long, star-studded tail.  Kiso 5639 is a rare, nearby example of elongated galaxies that occur in abundance at larger distances, where we observe the universe during earlier epochs. Astronomers suggest that the frenzied star birth is sparked by intergalactic gas raining on one end of the galaxy as it drifts through space.  “I think Kiso 5639 is a beautiful, up-close example of what must have been common long ago,” said lead researcher Debra Elmegreen of Vassar College, in Poughkeepsie, New York. “The current thinking is that galaxies in the early universe grow from accreting gas from the surrounding neighborhood. It’s a stage that galaxies, including our Milky Way, must go through as they are growing up.”  Observations of the early universe, such as Hubble’s Ultra-Deep Field, reveal that about 10 percent of all galaxies have these elongated shapes, and are collectively called “tadpoles.” But studies of the nearby universe have turned up only a few of these unusual galaxies, including Kiso 5639. The development of the nearby star-making tadpole galaxies, however, has lagged behind that of their peers, which have spent billions of years building themselves up into many of the spiral galaxies seen today.  Elmegreen used Hubble’s Wide Field Camera 3 to conduct a detailed imaging study of Kiso 5639. The images in different filters reveal information about an object by dissecting its light into its component colors. Hubble’s crisp resolution helped Elmegreen and her team analyze the giant star-forming clumps in Kiso 5639 and determine the masses and ages of the star clusters.  The international team of researchers selected Kiso 5639 from a spectroscopic survey of 10 nearby tadpole galaxies, observed with the Grand Canary Telescope in La Palma, Spain, by Jorge Sanchez Almeida and collaborators at the Instituto de Astrofisica de Canarias. The observations revealed that in most of those galaxies, including Kiso 5639, the gas composition is not uniform.  The bright gas in the galaxy’s head contains fewer heavier elements (collectively called “metals”), such as carbon and oxygen, than the rest of the galaxy. Stars consist mainly of hydrogen and helium, but cook up other “heavier” elements. When the stars die, they release their heavy elements and enrich the surrounding gas.  “The metallicity suggests that there has to be rather pure gas, composed mostly of hydrogen, coming into the star-forming part of the galaxy, because intergalactic space contains more pristine hydrogen-rich gas,” Elmegreen explained. “Otherwise, the starburst region should be as rich in heavy elements as the rest of the galaxy.”  Hubble offers a detailed view of the galaxy’s star-making frenzy. The telescope uncovered several dozen clusters of stars in the galaxy’s star-forming head, which spans 2,700 light-years across. These clusters have an average age of less than 1 million years and masses that are three to six times larger than those in the rest of the galaxy. Other star formation is taking place throughout the galaxy but on a much smaller scale. Star clusters in the rest of the galaxy are between several million to a few billion years old.  “There is much more star formation going on in the head than what you would expect in such a tiny galaxy,” said team member Bruce Elmegreen of IBM’s Thomas J. Watson’s Research Center, in Yorktown Heights, New York. “And we think the star formation is triggered by the ongoing accretion of metal-poor gas onto a part of an otherwise quiescent dwarf galaxy.”  Hubble also revealed giant holes peppered throughout the galaxy’s starburst head. These cavities give the galaxy’s head a Swiss-cheese appearance because numerous supernova detonations – like firework aerial bursts – have carved out holes of rarified superheated gas.  The galaxy, located 82 million light-years away, has taken billions of years to develop because it has been drifting through an isolated “desert” in the universe, devoid of much gas.  What triggered the starburst in such a backwater galaxy? Based on simulations by Daniel Ceverino of the Center for Astronomy at Heidelberg University in Germany, and other team members, the observations suggest that less than 1 million years ago, Kiso 5639’s leading edge encountered a filament of gas. The filament dropped a large clump of matter onto the galaxy, stoking the vigorous star birth.  Debra Elmegreen expects that in the future other parts of the galaxy will join in the star-making fireworks show. “Galaxies rotate, and as Kiso 5639 continues to spin, another part of the galaxy may receive an infusion of new gas from this filament, instigating another round of star birth,” she said.  The team’s results have been accepted for publication in The Astrophysical Journal.  Other team members include Casiana Munoz-Tunon and Mercedes Filho (Instituto de Astrofísica de Canarias, Canary Islands), Jairo Mendez-Abreu (University of St. Andrews, United Kingdom), John Gallagher (University of Wisconsin-Madison), and Marc Rafelski (NASA's Goddard Space Flight Center, Greenbelt, Maryland).  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.","keywords":["Hubble","Galaxy","Kiso 5639"],"nasa_id":"hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000791/collection.json","data":[{"title":"Hubble Sees A Smiling Lens","date_created":"2015-02-10T16:40:13Z","media_type":"image","description":"In the center of this image, taken with the NASA/ESA Hubble Space Telescope, is the galaxy cluster SDSS J1038+4849 — and it seems to be smiling.  You can make out its two orange eyes and white button nose. In the case of this “happy face”, the two eyes are very bright galaxies and the misleading smile lines are actually arcs caused by an effect known as strong gravitational lensing.  Galaxy clusters are the most massive structures in the Universe and exert such a powerful gravitational pull that they warp the spacetime around them and act as cosmic lenses which can magnify, distort and bend the light behind them. This phenomenon, crucial to many of Hubble’s discoveries, can be explained by Einstein’s theory of general relativity.  In this special case of gravitational lensing, a ring — known as an Einstein Ring — is produced from this bending of light, a consequence of the exact and symmetrical alignment of the source, lens and observer and resulting in the ring-like structure we see here.  Hubble has provided astronomers with the tools to probe these massive galaxies and model their lensing effects, allowing us to peer further into the early Universe than ever before. This object was studied by Hubble’s Wide Field and Planetary Camera 2 (WFPC2) and Wide Field Camera 3 (WFC3) as part of a survey of strong lenses.  A version of this image was entered into the Hubble’s Hidden Treasures image processing competition by contestant Judy Schmidt.  Image Credit: NASA/ESA ","keywords":["Hubble Sees A Smiling Lens"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000791","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000791/GSFC_20171208_Archive_e000791~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000226/collection.json","data":[{"title":"Hubble Peers into the Storm","album":"Test","media_type":"image","description":"This shot from the NASA/ESA Hubble Space Telescope shows a maelstrom of glowing gas and dark dust within one of the Milky Way’s satellite galaxies, the Large Magellanic Cloud (LMC).  This stormy scene shows a stellar nursery known as N159, an HII region over 150 light-years across. N159 contains many hot young stars. These stars are emitting intense ultraviolet light, which causes nearby hydrogen gas to glow, and torrential stellar winds, which are carving out ridges, arcs, and filaments from the surrounding material.  At the heart of this cosmic cloud lies the Papillon Nebula, a butterfly-shaped region of nebulosity. This small, dense object is classified as a High-Excitation Blob, and is thought to be tightly linked to the early stages of massive star formation.  N159 is located over 160,000 light-years away. It resides just south of the Tarantula Nebula (heic1402), another massive star-forming complex within the LMC.  This image comes from Hubble’s Advanced Camera for Surveys.  The region was previously imaged by Hubble’s Wide Field Planetary Camera 2, which also resolved the Papillon Nebula for the first time.   Credit: ESA/Hubble &amp; NASA","keywords":["Hubble Peers into the Storm","lha120n159"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000226","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000226/GSFC_20171208_Archive_e000226~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000013/collection.json","data":[{"title":"Hubble's Cosmic Atlas","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000013","keywords":["Hubble's Cosmic Atlas","ngc4248"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"Morphologies, masses, and structures - oh, my!   This beautiful clump of glowing gas, dark dust and glittering stars is the spiral galaxy NGC 4248, located about 24 million light-years away in the constellation of Canes Venatici (The Hunting Dogs).  This image was produced by the NASA/ESA Hubble Space Telescope as it embarked upon compiling the first Hubble ultraviolet “atlas,” for which the telescope targeted 50 nearby star-forming galaxies. The collection spans all kinds of different morphologies, masses, and structures. Studying this sample can help us to piece together the star-formation history of the Universe.  By exploring how massive stars form and evolve within such galaxies, astronomers can learn more about how, when, and where star formation occurs, how star clusters change over time, and how the process of forming new stars is related to the properties of both the host galaxy and the surrounding interstellar medium (the gas and dust that fills the space between individual stars).  This galaxy was imaged with observations from Hubble’s Wide Field Camera 3.  Image credit: ESA/Hubble &amp; NASA  ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000013/GSFC_20171208_Archive_e000013~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002151/collection.json","data":[{"title":"Hubble Space Telescope","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e002151","keywords":["Hubble Space Telescope","shiny","space","nasa","telescope","galaxy","spaceshuttle","goddard","hubble","hst","sm4","hubblespacetelescope","spaceshuttleatlantis","goddardspaceflightcenter","sts125"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"The Hubble Space Telescope in a picture snapped by a Servicing Mission 4 crewmember just after the Space Shuttle Atlantis captured Hubble with its robotic arm on May 13, 2009, beginning the mission to upgrade and repair the telescope.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute conducts Hubble science operations.  Goddard is responsible for HST project management, including mission and science operations, servicing missions, and all associated development activities.  To learn more about the Hubble Space Telescope go here:  <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002151/GSFC_20171208_Archive_e002151~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000001/collection.json","data":[{"title":"Hubble's Megamaser Galaxy","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000001","keywords":["Hubble's Megamaser Galaxy","mcg0138004","mcg0138005"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"Feast your eyes on Hubble's Megamaser galaxy!   Phenomena across the Universe emit radiation spanning the entire electromagnetic spectrum — from high-energy gamma rays, which stream out from the most energetic events in the cosmos, to lower-energy microwaves and radio waves.  Microwaves, the very same radiation that can heat up your dinner, are produced by a multitude of astrophysical sources, including strong emitters known as masers (microwave lasers), even stronger emitters with the somewhat villainous name of megamasers and the centers of some galaxies. Especially intense and luminous galactic centers are known as active galactic nuclei. They are in turn thought to be driven by the presence of supermassive black holes, which drag surrounding material inwards and spit out bright jets and radiation as they do so.  The two galaxies shown here, imaged by the NASA/ESA Hubble Space Telescope, are named MCG+01-38-004 (the upper, red-tinted one) and MCG+01-38-005 (the lower, blue-tinted one). MCG+01-38-005 (also known as NGC 5765B) is a special kind of megamaser; the galaxy’s active galactic nucleus pumps out huge amounts of energy, which stimulates clouds of surrounding water. Water’s constituent atoms of hydrogen and oxygen are able to absorb some of this energy and re-emit it at specific wavelengths, one of which falls within the microwave regime, invisible to Hubble but detectable by microwave telescopes. MCG+01-38-005 is thus known as a water megamaser!  Astronomers can use such objects to probe the fundamental properties of the Universe. The microwave emissions from MCG+01-38-005 were used to calculate a refined value for the Hubble constant, a measure of how fast the Universe is expanding. This constant is named after the astronomer whose observations were responsible for the discovery of the expanding Universe and after whom the Hubble Space Telescope was named, Edwin Hubble.  ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000001/GSFC_20171208_Archive_e000001~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002219/collection.json","data":[{"title":"Hubble On Its Way","date_created":"2009-05-21T02:44:31Z","media_type":"image","description":"This still image of the Hubble Space Telescope was captured by an STS-125 crew member as the two spacecraft continue their relative separation.  During the week five spacewalks were performed to complete the final servicing mission for the orbital observatory.  Photo credit: NASA May 19, 2009","keywords":["Hubble On Its Way"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002219","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002219/GSFC_20171208_Archive_e002219~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000137/collection.json","data":[{"title":"Hubble's Slice of Sagittarius","album":"Test","media_type":"image","description":"This stunning image, captured by the NASA/ESA Hubble Space Telescope’s Advanced Camera for Surveys (ACS), shows part of the sky in the constellation of Sagittarius (The Archer). The region is rendered in exquisite detail — deep red and bright blue stars are scattered across the frame, set against a background of thousands of more distant stars and galaxies. Two features are particularly striking: the colors of the stars, and the dramatic crosses that burst from the centers of the brightest bodies.  While some of the colors in this frame have been enhanced and tweaked during the process of creating the image from the observational data, different stars do indeed glow in different colors. Stars differ in color according to their surface temperature: very hot stars are blue or white, while cooler stars are redder. They may be cooler because they are smaller, or because they are very old and have entered the red giant phase, when an old star expands and cools dramatically as its core collapses.  The crosses are nothing to do with the stars themselves, and, because Hubble orbits above Earth’s atmosphere, nor are they due to any kind of atmospheric disturbance. They are actually known as diffraction spikes, and are caused by the structure of the telescope itself.  Like all big modern telescopes, Hubble uses mirrors to capture light and form images. Its secondary mirror is supported by struts, called telescope spiders, arranged in a cross formation, and they diffract the incoming light. Diffraction is the slight bending of light as it passes near the edge of an object. Every cross in this image is due to a single set of struts within Hubble itself! Whilst the spikes are technically an inaccuracy, many astrophotographers choose to emphasize and celebrate them as a beautiful feature of their images.  Image credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","keywords":["Hubble's Slice of Sagittarius"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000137","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000137/GSFC_20171208_Archive_e000137~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000394/collection.json","data":[{"title":"Hubble Sees a Legion of Galaxies","album":"Test","media_type":"image","description":"Peering deep into the early universe, this picturesque parallel field observation from the NASA/ESA Hubble Space Telescope reveals thousands of colorful galaxies swimming in the inky blackness of space. A few foreground stars from our own galaxy, the Milky Way, are also visible.  In October 2013 Hubble’s Wide Field Camera 3 (WFC3) and Advanced Camera for Surveys (ACS) began observing this portion of sky as part of the Frontier Fields program. This spectacular skyscape was captured during the study of the giant galaxy cluster Abell 2744, otherwise known as Pandora’s Box. While one of Hubble’s cameras concentrated on Abell 2744, the other camera viewed this adjacent patch of sky near to the cluster.  Containing countless galaxies of various ages, shapes and sizes, this parallel field observation is nearly as deep as the Hubble Ultra-Deep Field. In addition to showcasing the stunning beauty of the deep universe in incredible detail, this parallel field — when compared to other deep fields — will help astronomers understand how similar the universe looks in different directions.  Image credit: NASA, ESA and the HST Frontier Fields team (STScI),   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","keywords":["Hubble Sees a Legion of Galaxies","space","nasa","hubble","nasagoddard","abell2744"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000394","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000394/GSFC_20171208_Archive_e000394~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001757/collection.json","data":[{"title":"Hubble Spies a UFO","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001757","keywords":["Hubble Spies a UFO","space","nasa","galaxy","hubble","hst","ufogalaxy"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"The Hubble Space Telescope has spotted a UFO — well, the UFO Galaxy, to be precise. NGC 2683 is a spiral galaxy seen almost edge-on, giving it the shape of a classic science fiction spaceship. This is why the astronomers at the Astronaut Memorial Planetarium and Observatory gave it this attention-grabbing nickname. While a bird’s eye view lets us see the detailed structure of a galaxy (such as this Hubble image of a barred spiral), a side-on view has its own perks. In particular, it gives astronomers a great opportunity to see the delicate dusty lanes of the spiral arms silhouetted against the golden haze of the galaxy’s core. In addition, brilliant clusters of young blue stars shine scattered throughout the disc, mapping the galaxy’s star-forming regions. Perhaps surprisingly, side-on views of galaxies like this one do not prevent astronomers from deducing their structures. Studies of the properties of the light coming from NGC 2683 suggest that this is a barred spiral galaxy, even though the angle we see it at does not let us see this directly. NGC 2683, discovered on 5 February 1788 by the famous astronomer William Herschel, lies in the Northern constellation of Lynx. A constellation named not because of its resemblance to the feline animal, but because it is fairly faint, requiring the “sensitive eyes of a cat” to discern it. And when you manage to get a look at it, you’ll find treasures like this, making it well worth the effort. This image is produced from two adjacent fields observed in visible and infrared light by Hubble’s Advanced Camera for Surveys. A narrow strip which appears slightly blurred and crosses most the image horizontally is a result of a gap between Hubble’s detectors. This strip has been patched using images from observations of the galaxy made by ground-based telescopes, which show significantly less detail. The field of view is approximately 6.5 by 3.3 arcminutes.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001757/GSFC_20171208_Archive_e001757~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000990/collection.json","data":[{"title":"Hubble Paints a Spattering of Blue","date_created":"2014-09-12T15:45:08Z","media_type":"image","description":"Far beyond the stars in the constellation of Leo (The Lion) is irregular galaxy IC 559.  IC 559 is not your everyday galaxy. With its irregular shape and bright blue spattering of stars, it is a fascinating galactic anomaly. It may look like sparse cloud, but it is in fact full of gas and dust which is spawning new stars.  Discovered in 1893, IC 559 lacks the symmetrical spiral appearance of some of its galactic peers and not does not conform to a regular shape. It is actually classified as a “type Sm” galaxy — an irregular galaxy with some evidence for a spiral structure.  Irregular galaxies make up about a quarter of all known galaxies and do not fall into any of the regular classes of the Hubble sequence. Most of these uniquely shaped galaxies were not always so — IC 559 may have once been a conventional spiral galaxy that was then distorted and twisted by the gravity of a nearby cosmic companion.  This image, captured by the NASA/ESA Hubble Space Telescope’s Wide Field Camera 3, combines a wide range of wavelengths spanning the ultraviolet, optical, and infrared parts of the spectrum.  Image credit: ESA/Hubble, NASA, D. Calzetti (UMass) and the LEGUS Team  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Paints a Spattering of Blue"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000990","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000990/GSFC_20171208_Archive_e000990~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000409/collection.json","data":[{"title":"Hubble's Blue Bubble","album":"Test","media_type":"image","description":" A large blue bubble with a bright star in the center on a black background filled with stars  Sparkling at the center of this beautiful NASA/ESA Hubble Space Telescope image is a Wolf–Rayet star known as WR 31a, located about 30,000 light-years away in the constellation of Carina (The Keel).  The distinctive blue bubble appearing to encircle WR 31a is a Wolf–Rayet nebula — an interstellar cloud of dust, hydrogen, helium and other gases. Created when speedy stellar winds interact with the outer layers of hydrogen ejected by Wolf–Rayet stars, these nebulae are frequently ring-shaped or spherical. The bubble — estimated to have formed around 20,000 years ago — is expanding at a rate of around 220,000 kilometers (136,700 miles) per hour!  Unfortunately, the lifecycle of a Wolf–Rayet star is only a few hundred thousand years — the blink of an eye in cosmic terms. Despite beginning life with a mass at least 20 times that of the sun, Wolf–Rayet stars typically lose half their mass in less than 100,000 years. And WR 31a is no exception to this case. It will, therefore, eventually end its life as a spectacular supernova, and the stellar material expelled from its explosion will later nourish a new generation of stars and planets.  Image credi: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt","keywords":["Hubble's Blue Bubble","wr31a"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000409","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000409/GSFC_20171208_Archive_e000409~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001152/collection.json","data":[{"title":"Hubble’s cross-section of the cosmos","date_created":"2014-04-17T14:19:38Z","media_type":"image","description":"This new Hubble image showcases a remarkable variety of objects at different distances from us, extending back over halfway to the edge of the observable Universe. The galaxies in this image mostly lie about five billion light-years from Earth but the field also contains other objects, both significantly closer and far more distant.  Studies of this region of the sky have shown that many of the objects that appear to lie close together may actually be billions of light-years apart. This is because several groups of galaxies lie along our line of sight, creating something of an optical illusion. Hubble’s cross-section of the Universe is completed by distorted images of galaxies in the very distant background.  These objects are sometimes distorted due to a process called gravitational lensing, an extremely valuable technique in astronomy for studying very distant objects [1]. This lensing is caused by the bending of the space-time continuum by massive galaxies lying close to our line of sight to distant objects.  One of the lens systems visible here is called CLASS B1608+656, which appears as a small loop in the centre of the image. It features two foreground galaxies distorting and amplifying the light of a distant quasar the known as QSO-160913+653228. The light from this bright disc of matter, which is currently falling into a black hole, has taken nine billion years to reach us — two thirds of the age of the Universe.  As well as CLASS B1608+656, astronomers have identified two other gravitational lenses within this image. Two galaxies, dubbed Fred and Ginger by the researchers who studied them, contain enough mass to visibly distort the light from objects behind them. Fred, also known more prosaically as [FMK2006] ACS J160919+6532, lies near the lens galaxies in CLASS B1608+656, while Ginger ([FMK2006] ACS J160910+6532) is markedly closer to us. Despite their different distances from us, both can be seen near to CLASS B1608+656 in the central region of this Hubble image.  To capture distant and dim objects like these, Hubble required a long exposure. The image is made up of visible and infrared observations with a total exposure time of 14 hours.  More info: <a href=\"http://www.spacetelescope.org/news/heic1408/\" rel=\"nofollow\">www.spacetelescope.org/news/heic1408/</a>  Credit: NASA/ESA/Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble’s cross-section of the cosmos"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001152","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001152/GSFC_20171208_Archive_e001152~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001963/collection.json","data":[{"title":"Hubble Captures Cosmic Ice Sculptures","album":"Test","media_type":"image","description":"NASA image release September 16, 2010  Enjoying a frozen treat on a hot summer day can leave a sticky mess as it melts in the Sun and deforms. In the cold vacuum of space, there is no edible ice cream, but there is radiation from massive stars that is carving away at cold molecular clouds, creating bizarre, fantasy-like structures.  These one-light-year-tall pillars of cold hydrogen and dust, imaged by the Hubble Space Telescope, are located in the Carina Nebula. Violent stellar winds and powerful radiation from massive stars are sculpting the surrounding nebula. Inside the dense structures, new stars may be born.  This image of dust pillars in the Carina Nebula is a composite of 2005 observations taken of the region in hydrogen light (light emitted by hydrogen atoms) along with 2010 observations taken in oxygen light (light emitted by oxygen atoms), both times with Hubble's Advanced Camera for Surveys. The immense Carina Nebula is an estimated 7,500 light-years away in the southern constellation Carina.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc. in Washington, D.C.  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","keywords":["Hubble Captures Cosmic Ice Sculptures","space","nasa","hubble"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001963","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001963/GSFC_20171208_Archive_e001963~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001538/collection.json","data":[{"title":"Hubble Nabs Space Invaders?","album":"Test","media_type":"image","description":"The gravitational field surrounding this massive cluster of galaxies, Abell 68, acts as a natural lens in space to brighten and magnify the light coming from very distant background galaxies.  Like a fun house mirror, lensing creates a fantasy landscape of arc-like images and mirror images of background galaxies. The foreground cluster is 2 billion light-years away, and the lensed images come from galaxies far behind it.  In this photo, the image of a spiral galaxy at upper left has been stretched and mirrored into a shape similar to that of a simulated alien from the classic 1970s computer game &quot;Space Invaders!&quot; A second, less distorted image of the same galaxy appears to the left of the large, bright elliptical galaxy.  In the upper right of the photo is another striking feature of the image that is unrelated to gravitational lensing. What appears to be purple liquid dripping from a galaxy is a phenomenon called ram-pressure stripping. The gas clouds within the galaxy are being stripped out and heated up as the galaxy passes through a region of denser intergalactic gas.  This image was taken in infrared light by Hubble’s Wide Field Camera 3, and combined with near-infrared observations from Hubble’s Advanced Camera for Surveys.  The image is based in part on data spotted by Nick Rose in the Hubble’s Hidden Treasures image processing competition.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Md., manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Md., conducts Hubble science operations. STScI is operated by the Association of Universities for Research in Astronomy, Inc., in Washington.  To read more go to: <a href=\"http://1.usa.gov/Z6uDUp\" rel=\"nofollow\">1.usa.gov/Z6uDUp</a>  Credit: NASA and ESA Acknowledgement: N. Rose  For image files and more information about Abell 68, visit:  <a href=\"http://hubblesite.org/news/2013/09\" rel=\"nofollow\">hubblesite.org/news/2013/09</a> <a href=\"http://www.spacetelescope.org/news/heic04\" rel=\"nofollow\">www.spacetelescope.org/news/heic04</a> <a href=\"http://heritage.stsci.edu/2013/09\" rel=\"nofollow\">heritage.stsci.edu/2013/09</a> <a href=\"http://www.spacetelescope.org/projects/hiddentreasures/\" rel=\"nofollow\">www.spacetelescope.org/projects/hiddentreasures/</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Nabs Space Invaders?","space","spaceinvaders","nasa","hubble"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001538","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001538/GSFC_20171208_Archive_e001538~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001539/collection.json","data":[{"title":"Hubble Nabs Space Invaders?","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001539","keywords":["Hubble Nabs Space Invaders?","space","spaceinvaders","nasa","hubble"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"The gravitational field surrounding this massive cluster of galaxies, Abell 68, acts as a natural lens in space to brighten and magnify the light coming from very distant background galaxies.  Like a fun house mirror, lensing creates a fantasy landscape of arc-like images and mirror images of background galaxies. The foreground cluster is 2 billion light-years away, and the lensed images come from galaxies far behind it.  In this photo, the image of a spiral galaxy at upper left has been stretched and mirrored into a shape similar to that of a simulated alien from the classic 1970s computer game &quot;Space Invaders!&quot; A second, less distorted image of the same galaxy appears to the left of the large, bright elliptical galaxy.  In the upper right of the photo is another striking feature of the image that is unrelated to gravitational lensing. What appears to be purple liquid dripping from a galaxy is a phenomenon called ram-pressure stripping. The gas clouds within the galaxy are being stripped out and heated up as the galaxy passes through a region of denser intergalactic gas.  This image was taken in infrared light by Hubble’s Wide Field Camera 3, and combined with near-infrared observations from Hubble’s Advanced Camera for Surveys.  The image is based in part on data spotted by Nick Rose in the Hubble’s Hidden Treasures image processing competition.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Md., manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Md., conducts Hubble science operations. STScI is operated by the Association of Universities for Research in Astronomy, Inc., in Washington.  Credit: NASA and ESA Acknowledgement: N. Rose  For image files and more information about Abell 68, visit:  <a href=\"http://hubblesite.org/news/2013/09\" rel=\"nofollow\">hubblesite.org/news/2013/09</a> <a href=\"http://www.spacetelescope.org/news/heic04\" rel=\"nofollow\">www.spacetelescope.org/news/heic04</a> <a href=\"http://heritage.stsci.edu/2013/09\" rel=\"nofollow\">heritage.stsci.edu/2013/09</a> <a href=\"http://www.spacetelescope.org/projects/hiddentreasures/\" rel=\"nofollow\">www.spacetelescope.org/projects/hiddentreasures/</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001539/GSFC_20171208_Archive_e001539~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001934/collection.json","data":[{"title":"Hubble Supernova Bubble Resembles Holiday Ornament","album":"Test","media_type":"image","description":"NASA image release December 14, 2010  A delicate sphere of gas, photographed by NASA's Hubble Space Telescope, floats serenely in the depths of space. The pristine shell, or bubble, is the result of gas that is being shocked by the expanding blast wave from a supernova. Called SNR 0509-67.5 (or SNR 0509 for short), the bubble is the visible remnant of a powerful stellar explosion in the Large Magellanic Cloud (LMC), a small galaxy about 160,000 light-years from Earth.  Ripples in the shell's surface may be caused by either subtle variations in the density of the ambient interstellar gas, or possibly driven from the interior by pieces of the ejecta. The bubble-shaped shroud of gas is 23 light-years across and is expanding at more than 11 million miles per hour (5,000 kilometers per second).  Astronomers have concluded that the explosion was one of an especially energetic and bright variety of supernovae. Known as Type Ia, such supernova events are thought to result from a white dwarf star in a binary system that robs its partner of material, takes on much more mass than it is able to handle, and eventually explodes.  Hubble's Advanced Camera for Surveys observed the supernova remnant on Oct. 28, 2006 with a filter that isolates light from glowing hydrogen seen in the expanding shell. These observations were then combined with visible-light images of the surrounding star field that were imaged with Hubble's Wide Field Camera 3 on Nov. 4, 2010.  With an age of about 400 years as seen from Earth, the supernova might have been visible to southern hemisphere observers around the year 1600, however, there are no known records of a &quot;new star&quot; in the direction of the LMC near that time. A more recent supernova in the LMC, SN 1987A, did catch the eye of Earth viewers and continues to be studied with ground- and space-based telescopes, including Hubble.  For images and more information about SNR 0509, visit:  <a href=\"http://hubblesite.org/news/2010/27\" rel=\"nofollow\">hubblesite.org/news/2010/27</a> <a href=\"http://heritage.stsci.edu/2010/27\" rel=\"nofollow\">heritage.stsci.edu/2010/27</a> <a href=\"http://www.nasa.gov/hubble\" rel=\"nofollow\">www.nasa.gov/hubble</a>  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc., in Washington, D.C.  <b>Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: J. Hughes (Rutgers University)</b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","keywords":["Hubble Supernova Bubble Resembles Holiday Ornament","nasa","hubble","holidayornament","goddardspaceflightcenter"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001934","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001934/GSFC_20171208_Archive_e001934~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/hubble-spies-big-bang-frontiers_22202541749_o/collection.json","data":[{"title":"Hubble Frontier Fields view of MACSJ0717.5+3745","date_created":"2015-10-22T00:00:00Z","media_type":"image","description":"This image from the NASA/ESA Hubble Space Telescope shows the galaxy cluster MACSJ0717.5+3745. This is one of six being studied by the Hubble Frontier Fields programme, which together have produced the deepest images of gravitational lensing ever made. Due to the huge mass of the cluster it is bending the light of background objects, acting as a magnifying lens. It is one of the most massive galaxy clusters known, and it is also the largest known gravitational lens. Of all of the galaxy clusters known and measured, MACS J0717 lenses the largest area of the sky.","keywords":["MACSJ0717.5+3745"],"nasa_id":"hubble-spies-big-bang-frontiers_22202541749_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-spies-big-bang-frontiers_22202541749_o/hubble-spies-big-bang-frontiers_22202541749_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002105/collection.json","data":[{"title":"NASA's Hubble Universe in 3-D","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e002105","keywords":["NASA's Hubble Universe in 3-D","nasa","goddard","hubble","hst","orionnebula","gsfc","goddardspaceflightcenter","hubble3d"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This image depicts a vast canyon of dust and gas in the Orion Nebula from a 3-D computer model based on observations by NASA's Hubble Space Telescope and created by science visualization specialists at the Space Telescope Science Institute (STScI) in Baltimore, Md. A 3-D visualization of this model takes viewers on an amazing four-minute voyage through the 15-light-year-wide canyon.  Credit: NASA, G. Bacon, L. Frattare, Z. Levay, and F. Summers (STScI/AURA)  Go here to learn more about Hubble 3D:  <a href=\"http://www.nasa.gov/topics/universe/features/hubble_imax_premiere.html\" rel=\"nofollow\">www.nasa.gov/topics/universe/features/hubble_imax_premier...</a>  or  <a href=\"http://www.imax.com/hubble/\" rel=\"nofollow\">www.imax.com/hubble/</a>  Take an exhilarating ride through the Orion Nebula, a vast star-making factory 1,500 light-years away. Swoop through Orion's giant canyon of gas and dust. Fly past behemoth stars whose brilliant light illuminates and energizes the entire cloudy region. Zoom by dusty tadpole-shaped objects that are fledgling solar systems.  This virtual space journey isn't the latest video game but one of several groundbreaking astronomy visualizations created by specialists at the Space Telescope Science Institute (STScI) in Baltimore, the science operations center for NASA's Hubble Space Telescope. The cinematic space odysseys are part of the new Imax film &quot;Hubble 3D,&quot; which opens today at select Imax theaters worldwide.  The 43-minute movie chronicles the 20-year life of Hubble and includes highlights from the May 2009 servicing mission to the Earth-orbiting observatory, with footage taken by the astronauts.  The giant-screen film showcases some of Hubble's breathtaking iconic pictures, such as the Eagle Nebula's &quot;Pillars of Creation,&quot; as well as stunning views taken by the newly installed Wide Field Camera 3.  While Hubble pictures of celestial objects are awe-inspiring, they are flat 2-D photographs. For this film, those 2-D images have been converted into 3-D environments, giving the audience the impression they are space travelers taking a tour of Hubble's most popular targets.  &quot;A large-format movie is a truly immersive experience,&quot; says Frank Summers, an STScI astronomer and science visualization specialist who led the team that developed the movie visualizations. The team labored for nine months, working on four visualization sequences that comprise about 12 minutes of the movie.  &quot;Seeing these Hubble images in 3-D, you feel like you are flying through space and not just looking at picture postcards,&quot; Summers continued. &quot;The spacescapes are all based on Hubble images and data, though some artistic license is necessary to produce the full depth of field needed for 3-D.&quot;  The most ambitious sequence is a four-minute voyage through the Orion Nebula's gas-and-dust canyon, about 15 light-years across. During the ride, viewers will see bright and dark, gaseous clouds; thousands of stars, including a grouping of bright, hefty stars called the Trapezium; and embryonic planetary systems. The tour ends with a detailed look at a young circumstellar disk, which is much like the structure from which our solar system formed 4.5 billion years ago.  Based on a Hubble image of Orion released in 2006, the visualization was a collaborative effort between science visualization specialists at STScI, including Greg Bacon, who sculpted the Orion Nebula digital model, with input from STScI astronomer Massimo Roberto; the National Center for Supercomputing Applications at the University of Illinois at Urbana-Champaign; and the Spitzer Science Center at the California Institute of Technology in Pasadena.  For some of the sequences, STScI imaging specialists developed new techniques for transforming the 2-D Hubble images into 3-D. STScI image processing specialists Lisa Frattare and Zolt Levay, for example, created methods of splitting a giant gaseous pillar in the Carina Nebula into multiple layers to produce a 3-D effect, giving the structure depth. The Carina Nebula is a nursery for baby stars.  Frattare painstakingly removed the thousands of stars in the image so that Levay could separate the gaseous layers on the isolated Carina pillar. Frattare then replaced the stars into both foreground and background layers to complete the 3-D model. For added effect, the same separation was done for both visible and infrared Hubble images, allowing the film to cross-fade between wavelength views in 3-D.  In another sequence viewers fly into a field of 170,000 stars in the giant star cluster Omega Centauri. STScI astronomer Jay Anderson used his stellar database to create a synthetic star field in 3-D that matches recent razor-sharp Hubble photos.  The film's final four-minute sequence takes viewers on a voyage from our Milky Way Galaxy past many of Hubble's best galaxy shots and deep into space. Some 15,000 galaxies from Hubble's deepest surveys stretch billions of light-years across the universe in a 3-D sequence created by STScI astronomers and visualizers. The view dissolves into a cobweb that traces the universe's large-scale structure, the backbone from which galaxies were born.  In addition to creating visualizations, STScI's education group also provided guidance on the &quot;Hubble 3D&quot; Educator Guide, which includes standards-based lesson plans and activities about Hubble and its mission. Students will use the guide before or after seeing the movie.  &quot;The guide will enhance the movie experience for students and extend the movie into classrooms,&quot; says Bonnie Eisenhamer, STScI's Hubble Formal Education manager.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency (ESA) and is managed by NASA’s Goddard Space Flight Center (GSFC) in Greenbelt, Md. The Space Telescope Science Institute (STScI) conducts Hubble science operations. The institute is operated for NASA by the Association of Universities for Research in Astronomy, Inc., Washington, D.C.","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002105/GSFC_20171208_Archive_e002105~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000117/collection.json","data":[{"title":"Hubble's Glittering Frisbee Galaxy","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000117","keywords":["Hubble's Glittering Frisbee Galaxy","ngc1448"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This image from Hubble’s Wide Field Camera 3 (WFC3) shows a section of NGC 1448, a spiral galaxy located about 50 million light-years from Earth in the little-known constellation of Horologium (The Pendulum Clock). We tend to think of spiral galaxies as massive and roughly circular celestial bodies, so this glittering oval does not immediately appear to fit the visual bill. What’s going on?  Imagine a spiral galaxy as a circular frisbee spinning gently in space. When we see it face on, our observations reveal a spectacular amount of detail and structure — a great example from Hubble is the telescope’s view of Messier 51, otherwise known as the Whirlpool Galaxy. However, the NGC 1448 frisbee is very nearly edge-on with respect to Earth, giving it an appearance that is more oval than circular. The spiral arms, which curve out from NGC 1448’s dense core, can just about be seen.  Although spiral galaxies might appear static with their picturesque shapes frozen in space, this is very far from the truth. The stars in these dramatic spiral configurations are constantly moving as they orbit around the galaxy’s core, with those on the inside making the orbit faster than those sitting further out.  This makes the formation and continued existence of a spiral galaxy’s arms something of a cosmic puzzle, because the arms wrapped around the spinning core should become wound tighter and tighter as time goes on — but this is not what we see. This is known as the winding problem.  Credit: ESA/Hubble &amp; NASA #nasagoddard #space #science #Hubble #star   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000117/GSFC_20171208_Archive_e000117~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000129/collection.json","data":[{"title":"Hubble Spotlights a Celestial Sidekick","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000129","keywords":["Hubble Spotlights a Celestial Sidekick","fieldstars"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This image was captured by the NASA/ESA Hubble Space Telescope’s Advanced Camera for Surveys (ACS), a highly efficient wide-field camera covering the optical and near-infrared parts of the spectrum. While this lovely image contains hundreds of distant stars and galaxies, one vital thing is missing — the object Hubble was actually studying at the time!  This is not because the target has disappeared. The ACS actually uses two detectors: the first captures the object being studied — in this case an open star cluster known as NGC 299 — while the other detector images the patch of space just ‘beneath’ it. This is what can be seen here.  Technically, this picture is merely a sidekick of the actual object of interest — but space is bursting with activity, and this field of bright celestial bodies offers plenty of interest on its own. It may initially seem to show just stars, but a closer look reveals many of these tiny objects to be galaxies. The spiral galaxies have arms curving out from a bright center. The fuzzier, less clearly shaped galaxies might be ellipticals. Some of these galaxies contain millions or even billions of stars, but are so distant that all of their starry residents are contained within just a small pinprick of light that appears to be the same size as a single star!  The bright blue dots are very hot stars, sometimes distorted into crosses by the struts supporting Hubble’s secondary mirror. The redder dots are cooler stars, possibly in the red giant phase when a dying star cools and expands.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000129/GSFC_20171208_Archive_e000129~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000423/collection.json","data":[{"title":"Hubble Finds Misbehaving Spiral","date_created":"2016-01-29T14:54:28Z","media_type":"image","description":"Despite its unassuming appearance, the edge-on spiral galaxy captured in the left half of this NASA/ESA Hubble Space Telescope image is actually quite remarkable.  Located about one billion light-years away in the constellation of Eridanus, this striking galaxy — known as LO95 0313-192 — has a spiral shape similar to that of the Milky Way. It has a large central bulge, and arms speckled with brightly glowing gas mottled by thick lanes of dark dust. Its companion, sitting in the right of the frame, is known rather unpoetically as [LOY2001] J031549.8-190623.  Jets, outbursts of superheated gas moving at close to the speed of light, have long been associated with the cores of giant elliptical galaxies, and galaxies in the process of merging. However, in an unexpected discovery, astronomers found LO95 0313-192, even though it is a spiral galaxy, to have intense radio jets spewing out from its center. The galaxy appears to have two more regions that are also strongly emitting in the radio part of the spectrum, making it even rarer still.  The discovery of these giant jets in 2003 — not visible in this image, but indicated in this earlier Hubble composite — has been followed by the unearthing of a further three spiral galaxies containing radio-emitting jets in recent years. This growing class of unusual spirals continues to raise significant questions about how jets are produced within galaxies, and how they are thrown out into the cosmos.  Image credit: ESA/Hubble &amp; NASA; acknowledgement, Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","keywords":["Hubble Finds Misbehaving Spiral"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000423","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000423/GSFC_20171208_Archive_e000423~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000648/collection.json","data":[{"title":"Hubble Sees a \"Mess of Stars\"","date_created":"2015-08-14T18:24:03Z","media_type":"image","description":"Bursts of pink and red, dark lanes of mottled cosmic dust, and a bright scattering of stars — this NASA/ESA Hubble Space Telescope image shows part of a messy barred spiral galaxy known as NGC 428. It lies approximately 48 million light-years away from Earth in the constellation of Cetus (The Sea Monster).  Although a spiral shape is still just about visible in this close-up shot, overall NGC 428’s spiral structure appears to be quite distorted and warped, thought to be a result of a collision between two galaxies. There also appears to be a substantial amount of star formation occurring within NGC 428 — another telltale sign of a merger. When galaxies collide their clouds of gas can merge, creating intense shocks and hot pockets of gas, and often triggering new waves of star formation.  NGC 428 was discovered by William Herschel in December 1786. More recently a type of supernova designated SN2013ct was discovered within the galaxy by Stuart Parker of the BOSS (Backyard Observatory Supernova Search) project in Australia and New Zealand, although it is unfortunately not visible in this image.  This image was captured by Hubble’s Advanced Camera for Surveys (ACS) and Wide Field and Planetary Camera 2 (WFPC2).    Image credit: ESA/Hubble and NASA and S. Smartt (Queen's University Belfast), Acknowledgements: Nick Rose and Flickr user pennine cloud  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Sees a \"Mess of Stars\""],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000648","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000648/GSFC_20171208_Archive_e000648~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001955/collection.json","data":[{"title":"Hubble reveals heart of Lagoon Nebula","date_created":"2010-09-22T15:18:34Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001955","keywords":["Hubble reveals heart of Lagoon Nebula"],"location":"Greenbelt, MD","description":"Image release date September 22, 2010  To view a video of this image go here: <a href=\"http://www.flickr.com/photos/gsfc/5014452203\">www.flickr.com/photos/gsfc/5014452203</a>  Caption: A spectacular new NASA/ESA Hubble Space Telescope image reveals the heart of the Lagoon Nebula. Seen as a massive cloud of glowing dust and gas, bombarded by the energetic radiation of new stars, this placid name hides a dramatic reality.  The Advanced Camera for Surveys (ACS) on the NASA/ESA Hubble Space Telescope has captured a dramatic view of gas and dust sculpted by intense radiation from hot young stars deep in the heart of the Lagoon Nebula (Messier 8). This spectacular object is named after the wide, lagoon-shaped dust lane that crosses the glowing gas of the nebula.  This structure is prominent in wide-field images, but cannot be seen in this close-up. However the strange billowing shapes and sandy texture visible in this image make the Lagoon Nebula’s watery name eerily appropriate from this viewpoint too.  Located four to five thousand light-years away, in the constellation of Sagittarius (the Archer), Messier 8 is a huge region of star birth that stretches across one hundred light-years. Clouds of hydrogen gas are slowly collapsing to form new stars, whose bright ultraviolet rays then light up the surrounding gas in a distinctive shade of red.  The wispy tendrils and beach-like features of the nebula are not caused by the ebb and flow of tides, but rather by ultraviolet radiation’s ability to erode and disperse the gas and dust into the distinctive shapes that we see.  In recent years astronomers probing the secrets of the Lagoon Nebula have found the first unambiguous proof that star formation by accretion of matter from the gas cloud is ongoing in this region.  Young stars that are still surrounded by an accretion disc occasionally shoot out long tendrils of matter from their poles. Several examples of these jets, known as Herbig-Haro objects, have been found in this nebula in the last five years, providing strong support for astronomers’ theories about star formation in such hydrogen-rich regions.  The Lagoon Nebula is faintly visible to the naked eye on dark nights as a small patch of grey in the heart of the Milky Way. Without a telescope, the nebula looks underwhelming because human eyes are unable to distinguish clearly between colours at low light levels. Charles Messier, the 18th century French astronomer, observed the nebula and included it in his famous astronomical catalogue, from which the nebula’s alternative name comes. But his relatively small refracting telescope would only have hinted at the dramatic structures and colours now visible thanks to Hubble.  The Hubble Space Telescope is a project of international cooperation between ESA and NASA.  Image credit: NASA, ESA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>  To learn more about the Hubble Space Telescope go here: <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001955/GSFC_20171208_Archive_e001955~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000615/collection.json","data":[{"title":"Hubble Sees a Galactic Sunflower","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000615","keywords":["Hubble Sees a Galactic Sunflower","messier63"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"The arrangement of the spiral arms in the galaxy Messier 63, seen here in an image from the NASA/ESA Hubble Space Telescope, recall the pattern at the center of a sunflower. So the nickname for this cosmic object — the Sunflower Galaxy — is no coincidence.  Discovered by Pierre Mechain in 1779, the galaxy later made it as the 63rd entry into fellow French astronomer Charles Messier’s famous catalogue, published in 1781. The two astronomers spotted the Sunflower Galaxy’s glow in the small, northern constellation Canes Venatici (the Hunting Dogs). We now know this galaxy is about 27 million light-years away and belongs to the M51 Group — a group of galaxies, named after its brightest member, Messier 51, another spiral-shaped galaxy dubbed the Whirlpool Galaxy.  Galactic arms, sunflowers and whirlpools are only a few examples of nature’s apparent preference for spirals. For galaxies like Messier 63 the winding arms shine bright because of the presence of recently formed, blue–white giant stars and clusters, readily seen in this Hubble image.  Image credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000615/GSFC_20171208_Archive_e000615~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000158/collection.json","data":[{"title":"Hubble Spies Spiral Galaxy","album":"Test","media_type":"image","description":"Spiral galaxy NGC 3274 is a relatively faint galaxy located over 20 million light-years away in the constellation of Leo (The Lion).  This NASA/ESA Hubble Space Telescope image comes courtesy of Hubble's Wide Field Camera 3 (WFC3), whose multi-color vision allows astronomers to study a wide range of targets, from nearby star formation to galaxies in the most remote regions of the cosmos.    This image combines observations gathered in five different filters, bringing together ultraviolet, visible and infrared light to show off NGC 3274 in all its glory.  NGC 3274 was discovered by Wilhelm Herschel in 1783. The galaxy PGC 213714 is also visible on the upper right of the frame, located much farther away from Earth.  Image Credit: ESA/Hubble &amp; NASA, D. Calzetti  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","keywords":["Hubble Spies Spiral Galaxy","ngc3274"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000158","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000158/GSFC_20171208_Archive_e000158~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000123/collection.json","data":[{"title":"Hubble Hones In on a Hypergiant's Home","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000123","keywords":["Hubble Hones In on a Hypergiant's Home","westerlund1"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This beautiful Hubble image reveals a young super star cluster known as Westerlund 1, only 15,000 light-years away in our Milky Way neighborhood, yet home to one of the largest stars ever discovered.  Stars are classified according to their spectral type, surface temperature, and luminosity. While studying and classifying the cluster’s constituent stars, astronomers discovered that Westerlund 1 is home to an enormous star.  Originally named Westerlund 1-26, this monster star is a red supergiant (although sometimes classified as a hypergiant) with a radius over 1,500 times that of our sun. If Westerlund 1-26 were placed where our sun is in our solar system, it would extend out beyond the orbit of Jupiter.  Most of Westerlund 1’s stars are thought to have formed in the same burst of activity, meaning that they have similar ages and compositions. The cluster is relatively young in astronomical terms —at around three million years old it is a baby compared to our own sun, which is some 4.6 billion years old.  Credit: ESA/Hubble &amp; NASA","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000123/GSFC_20171208_Archive_e000123~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000017/collection.json","data":[{"title":"Hubble’s Hunting Dog Galaxy","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000017","keywords":["Hubble’s Hunting Dog Galaxy","ngc4242"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"Tucked away in the small northern constellation of Canes Venatici (The Hunting Dogs) is the galaxy NGC 4242, shown here as seen by the NASA/ESA Hubble Space Telescope. The galaxy lies some 30 million light-years from us. At this distance from Earth, actually not all that far on a cosmic scale, NGC 4242 is visible to anyone armed with even a basic telescope, as British astronomer William Herschel found when he discovered the galaxy in 1788.  This image shows the galaxy’s bright center and the surrounding dimmer and more diffuse “fuzz.” Despite appearing to be relatively bright in this image, studies have found that NGC 4242 is actually relatively dim (it has a moderate-to-low surface brightness and low luminosity) and also supports a low rate of star formation. The galaxy also seems to have a weak bar of stars cutting through its asymmetric center, and a very faint and poorly-defined spiral structure throughout its disk. But if NGC 4242 is not all that remarkable, as with much of the Universe, it is still a beautiful and ethereal sight.  Credit: ESA/Hubble &amp; NASA","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000017/GSFC_20171208_Archive_e000017~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000382/collection.json","data":[{"title":"Hubble Sees a Star ‘Inflating’ a Giant Bubble","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000382","keywords":["Hubble Sees a Star ‘Inflating’ a Giant Bubble","star","space","nasa","hubble","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"For the 26th birthday of NASA’s Hubble Space Telescope, astronomers are highlighting a Hubble image of an enormous bubble being blown into space by a super-hot, massive star. The Hubble image of the Bubble Nebula, or NGC 7635, was chosen to mark the 26th anniversary of the launch of Hubble into Earth orbit by the STS-31 space shuttle crew on April 24, 1990  “As Hubble makes its 26th revolution around our home star, the sun, we celebrate the event with a spectacular image of a dynamic and exciting interaction of a young star with its environment. The view of the Bubble Nebula, crafted from WFC-3 images, reminds us that Hubble gives us a front row seat to the awe inspiring universe we live in,” said John Grunsfeld, Hubble astronaut and associate administrator of NASA’s Science Mission Directorate at NASA Headquarters, in Washington, D.C.    The Bubble Nebula is seven light-years across—about one-and-a-half times the distance from our sun to its nearest stellar neighbor, Alpha Centauri, and resides 7,100 light-years from Earth in the constellation Cassiopeia.  The seething star forming this nebula is 45 times more massive than our sun. Gas on the star gets so hot that it escapes away into space as a “stellar wind” moving at over four million miles per hour. This outflow sweeps up the cold, interstellar gas in front of it, forming the outer edge of the bubble much like a snowplow piles up snow in front of it as it moves forward.  As the surface of the bubble's shell expands outward, it slams into dense regions of cold gas on one side of the bubble. This asymmetry makes the star appear dramatically off-center from the bubble, with its location in the 10 o’clock position in the Hubble view.  Dense pillars of cool hydrogen gas laced with dust appear at the upper left of the picture, and more “fingers” can be seen nearly face-on, behind the translucent bubble.  The gases heated to varying temperatures emit different colors: oxygen is hot enough to emit blue light in the bubble near the star, while the cooler pillars are yellow from the combined light of hydrogen and nitrogen. The pillars are similar to the iconic columns in the “Pillars of Creation” Eagle Nebula. As seen with the structures in the Eagle Nebula, the Bubble Nebula pillars are being illuminated by the strong ultraviolet radiation from the brilliant star inside the bubble.  The Bubble Nebula was discovered in 1787 by William Herschel, a prominent British astronomer. It is being formed by a proto-typical Wolf-Rayet star, BD +60º2522, an extremely bright, massive, and short-lived star that has lost most of its outer hydrogen and is now fusing helium into heavier elements. The star is about four million years old, and in 10 million to 20 million years, it will likely detonate as a supernova.  Hubble’s Wide Field Camera-3 imaged the nebula in visible light with unprecedented clarity in February 2016. The colors correspond to blue for oxygen, green for hydrogen, and red for nitrogen. This information will help astronomers understand the geometry and dynamics of this complex system.  The Bubble Nebula is one of only a handful of astronomical objects that have been observed with several different instruments onboard Hubble. Hubble also imaged it with the Wide Field Planetary Camera (WFPC) in September 1992, and with Wide Field Planetary Camera-2 (WFPC2) in April 1999.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000382/GSFC_20171208_Archive_e000382~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000383/collection.json","data":[{"title":"Hubble Sees a Star ‘Inflating’ a Giant Bubble","album":"Test","media_type":"image","description":"For the 26th birthday of NASA’s Hubble Space Telescope, astronomers are highlighting a Hubble image of an enormous bubble being blown into space by a super-hot, massive star. The Hubble image of the Bubble Nebula, or NGC 7635, was chosen to mark the 26th anniversary of the launch of Hubble into Earth orbit by the STS-31 space shuttle crew on April 24, 1990  “As Hubble makes its 26th revolution around our home star, the sun, we celebrate the event with a spectacular image of a dynamic and exciting interaction of a young star with its environment. The view of the Bubble Nebula, crafted from WFC-3 images, reminds us that Hubble gives us a front row seat to the awe inspiring universe we live in,” said John Grunsfeld, Hubble astronaut and associate administrator of NASA’s Science Mission Directorate at NASA Headquarters, in Washington, D.C.    The Bubble Nebula is seven light-years across—about one-and-a-half times the distance from our sun to its nearest stellar neighbor, Alpha Centauri, and resides 7,100 light-years from Earth in the constellation Cassiopeia.  The seething star forming this nebula is 45 times more massive than our sun. Gas on the star gets so hot that it escapes away into space as a “stellar wind” moving at over four million miles per hour. This outflow sweeps up the cold, interstellar gas in front of it, forming the outer edge of the bubble much like a snowplow piles up snow in front of it as it moves forward.  As the surface of the bubble's shell expands outward, it slams into dense regions of cold gas on one side of the bubble. This asymmetry makes the star appear dramatically off-center from the bubble, with its location in the 10 o’clock position in the Hubble view.  Dense pillars of cool hydrogen gas laced with dust appear at the upper left of the picture, and more “fingers” can be seen nearly face-on, behind the translucent bubble.  The gases heated to varying temperatures emit different colors: oxygen is hot enough to emit blue light in the bubble near the star, while the cooler pillars are yellow from the combined light of hydrogen and nitrogen. The pillars are similar to the iconic columns in the “Pillars of Creation” Eagle Nebula. As seen with the structures in the Eagle Nebula, the Bubble Nebula pillars are being illuminated by the strong ultraviolet radiation from the brilliant star inside the bubble.  The Bubble Nebula was discovered in 1787 by William Herschel, a prominent British astronomer. It is being formed by a proto-typical Wolf-Rayet star, BD +60º2522, an extremely bright, massive, and short-lived star that has lost most of its outer hydrogen and is now fusing helium into heavier elements. The star is about four million years old, and in 10 million to 20 million years, it will likely detonate as a supernova.  Hubble’s Wide Field Camera-3 imaged the nebula in visible light with unprecedented clarity in February 2016. The colors correspond to blue for oxygen, green for hydrogen, and red for nitrogen. This information will help astronomers understand the geometry and dynamics of this complex system.  The Bubble Nebula is one of only a handful of astronomical objects that have been observed with several different instruments onboard Hubble. Hubble also imaged it with the Wide Field Planetary Camera (WFPC) in September 1992, and with Wide Field Planetary Camera-2 (WFPC2) in April 1999.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)","keywords":["Hubble Sees a Star ‘Inflating’ a Giant Bubble","star","space","nasa","hubble","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000383","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000383/GSFC_20171208_Archive_e000383~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001569/collection.json","data":[{"title":"Hubble Views a Dwarf Galaxy","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001569","keywords":["Hubble Views a Dwarf Galaxy","space","nasa","galaxy","hubble","hst","ngc5477"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"The constellation of Ursa Major (The Great Bear) is home to Messier 101, the Pinwheel Galaxy. Messier 101 is one of the biggest and brightest spiral galaxies in the night sky. Like the Milky Way, Messier 101 is not alone, with smaller dwarf galaxies in its neighborhood.  NGC 5477, one of these dwarf galaxies in the Messier 101 group, is the subject of this image from the NASA/ESA Hubble Space Telescope. Without obvious structure, but with visible signs of ongoing star birth, NGC 5477 looks much like an typical dwarf irregular galaxy. The bright nebulae that extend across much of the galaxy are clouds of glowing hydrogen gas in which new stars are forming. These glow pinkish red in real life, although the selection of green and infrared filters through which this image was taken makes them appear almost white.  The observations were taken as part of a project to measure accurate distances to a range of galaxies within about 30 million light-years from Earth, by studying the brightness of red giant stars.  In addition to NGC 5477, the image includes numerous galaxies in the background, including some that are visible right through NGC 5477. This serves as a reminder that galaxies, far from being solid, opaque objects, are actually largely made up of the empty space between their stars.  This image is a combination of exposures taken through green and infrared filters using Hubble's Advanced Camera for Surveys. The field of view is approximately 3.3 by 3.3 arcminutes.     ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001569/GSFC_20171208_Archive_e001569~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000722/collection.json","data":[{"title":"Hubble Catches Stellar Exodus in Action","date_created":"2015-05-14T17:17:21Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000722","keywords":["Hubble Catches Stellar Exodus in Action"],"location":"Greenbelt, MD","description":"Using NASA’s Hubble Space Telescope, astronomers have captured for the first time snapshots of fledging white dwarf stars beginning their slow-paced, 40-million-year migration from the crowded center of an ancient star cluster to the less populated suburbs.  White dwarfs are the burned-out relics of stars that rapidly lose mass, cool down and shut off their nuclear furnaces. As these glowing carcasses age and shed weight, their orbits begin to expand outward from the star cluster’s packed downtown. This migration is caused by a gravitational tussle among stars inside the cluster. Globular star clusters sort out stars according to their mass, governed by a gravitational billiard ball game where lower mass stars rob momentum from more massive stars. The result is that heavier stars slow down and sink to the cluster's core, while lighter stars pick up speed and move across the cluster to the edge. This process is known as &quot;mass segregation.&quot; Until these Hubble observations, astronomers had never definitively seen the dynamical conveyor belt in action.  Astronomers used Hubble to watch the white-dwarf exodus in the globular star cluster 47 Tucanae, a dense swarm of hundreds of thousands of stars in our Milky Way galaxy. The cluster resides 16,700 light-years away in the southern constellation Tucana.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-catches-stellar-exodus-in-action\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-catches-stellar-exodu...</a>  Credits: NASA, ESA, and H. Richer and J. Heyl (University of British Columbia, Vancouver, Canada); acknowledgement: J. Mack (STScI) and G. Piotto (University of Padova, Italy)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000722/GSFC_20171208_Archive_e000722~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/stsci-h-p1906c-f-514x514.a/collection.json","data":[{"title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","date_created":"2019-02-11T00:00:00Z","media_type":"image","description":"This Hubble Space Telescope Wide Field Camera 3 image of Uranus, taken in November 2018, reveals a vast, bright stormy cloud cap across the planet's north pole.  Credits: NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","keywords":["Uranus","Neptune"],"photographer":"NASA Hubble","location":"NASA Goddard","nasa_id":"stsci-h-p1906c-f-514x514.a","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/stsci-h-p1906c-f-514x514.a/stsci-h-p1906c-f-514x514.a~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/stsci-h-p1906d-f-514x514.a/collection.json","data":[{"title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","date_created":"2019-02-11T00:00:00Z","media_type":"image","description":"This Hubble Space Telescope Wide Field Camera 3 image of Neptune, taken in September and November 2018, shows a new dark storm (top center).  Credits: NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","keywords":["Uranus","Neptune"],"photographer":"NASA Hubble","location":"NASA Goddard","nasa_id":"stsci-h-p1906d-f-514x514.a","secondary_creator":"Space Telescope Science Institute Office","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/stsci-h-p1906d-f-514x514.a/stsci-h-p1906d-f-514x514.a~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001578/collection.json","data":[{"title":"A Cosmic Holiday Ornament, Hubble-Style","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001578","keywords":["A Cosmic Holiday Ornament, Hubble-Style","nasa","hubble","hst"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"'Tis the season for holiday decorating and tree-trimming. Not to be left out, astronomers using NASA's Hubble Space Telescope have photographed a festive-looking nearby planetary nebula called NGC 5189. The intricate structure of this bright gaseous nebula resembles a glass-blown holiday ornament with a glowing ribbon entwined.  Planetary nebulae represent the final brief stage in the life of a medium-sized star like our sun. While consuming the last of the fuel in its core, the dying star expels a large portion of its outer envelope. This material then becomes heated by the radiation from the stellar remnant and radiates, producing glowing clouds of gas that can show complex structures, as the ejection of mass from the star is uneven in both time and direction. To read more go to: <a href=\"http://www.nasa.gov/mission_pages/hubble/science/ngc5189.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/ngc5189.html</a>  Credit: NASA, ESA, and G. Bacon (STScI)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001578/GSFC_20171208_Archive_e001578~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000282/collection.json","data":[{"title":"Hubble Friday - Heavy Metal Stars","album":"Test","media_type":"image","description":"Hubble rocks out with heavy metal stars!  This 10.5-billion-year-old globular cluster, NGC 6496, is home to heavy-metal stars of a celestial kind! The stars comprising this spectacular spherical cluster are enriched with much higher proportions of metals — elements heavier than hydrogen and helium are curiously known as metals in astronomy — than stars found in similar clusters.  A handful of these high-metallicity stars are also variable stars, meaning that their brightness fluctuates over time. NGC 6496 hosts a selection of long-period variables — giant pulsating stars whose brightness can take up to, and even over, a thousand days to change — and short-period eclipsing binaries, which dim when eclipsed by a stellar companion.  The nature of the variability of these stars can reveal important information about their mass, radius, luminosity, temperature, composition, and evolution, providing astronomers with measurements that would be difficult or even impossible to obtain through other methods.  NGC 6496 was discovered in 1826 by Scottish astronomer James Dunlop. The cluster resides at about 35,000 light-years away in the southern constellation of Scorpius (The Scorpion).  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt Text credit: European Space Agency  Read more: <a href=\"http://go.nasa.gov/1U2wqGW\" rel=\"nofollow\">go.nasa.gov/1U2wqGW</a>","keywords":["Hubble Friday - Heavy Metal Stars","metal","star","cluster","hubble","ngc6496"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000282","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000282/GSFC_20171208_Archive_e000282~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20150723_2015-13352_015/collection.json","data":[{"title":"Preston Burch at the Hubble 25th Anniversary event for employees","date_created":"2015-07-23T00:00:00Z","media_type":"image","description":"Preston Burch at the Hubble 25th Anniversary event for employees at Goddard Space Flight Center   ","keywords":["Preston Burch at the Hubble 25th Anniversary event for employees"],"photographer":"NASA/GSFC/Bill Hrybyk","nasa_id":"GSFC_20150723_2015-13352_015","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20150723_2015-13352_015/GSFC_20150723_2015-13352_015~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000733/collection.json","data":[{"title":"Hubble Eyes Galactic Refurbishment","date_created":"2015-04-30T15:58:57Z","media_type":"image","description":"The smudge of stars at the center of this NASA/ESA Hubble Space Telescope image is a galaxy known as UGC 5797. UGC 5797 is an emission line galaxy, meaning that it is currently undergoing active star formation. The result is a stellar population that is constantly being refurbished as massive bright blue stars form. Galaxies with prolific star formation are not only veiled in a blue tint, but are key to the continuation of a stellar cycle.  In this image UGC 5797 appears in front of a background of spiral galaxies. Spiral galaxies have copious amounts of dust and gas — the main ingredient for stars — and therefore often also belong to the class of emission line galaxies.  Spiral galaxies have disk-like shapes that drastically vary in appearance depending on the angle at which they are observed. The collection of spiral galaxies in this frame exhibits this attribute acutely: Some are viewed face-on, revealing the structure of the spiral arms, while the two in the bottom left are seen edge-on, appearing as plain streaks in the sky. There are many spiral galaxies, with varying colors and at different angles, sprinkled across this image — just take a look.   Credit: ESA/Hubble &amp; NASA, Acknowledgement: Luca Limatola  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Eyes Galactic Refurbishment"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000733","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000733/GSFC_20171208_Archive_e000733~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000022/collection.json","data":[{"title":"Hubble’s Hidden Galaxy","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000022","keywords":["Hubble’s Hidden Galaxy","ic342"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"IC 342 is a challenging cosmic target. Although it is bright, the galaxy sits near the equator of the Milky Way’s galactic disk, where the sky is thick with glowing cosmic gas, bright stars, and dark, obscuring dust. In order for astronomers to see the intricate spiral structure of IC 342, they must gaze through a large amount of material contained within our own galaxy — no easy feat! As a result IC 342 is relatively difficult to spot and image, giving rise to its intriguing nickname: the “Hidden Galaxy.”  Located very close (in astronomical terms) to the Milky Way, this sweeping spiral galaxy would be among the brightest in the sky were it not for its dust-obscured location. The galaxy is very active, as indicated by the range of colors visible in this NASA/ESA Hubble Space Telescope image, depicting the very central region of the galaxy. A beautiful mixture of hot, blue star-forming regions, redder, cooler regions of gas, and dark lanes of opaque dust can be seen, all swirling together around a bright core. In 2003, astronomers confirmed this core to be a specific type of central region known as an HII nucleus — a name that indicates the presence of ionized hydrogen — that is likely to be creating many hot new stars.  Credit: ESA/Hubble &amp; NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000022/GSFC_20171208_Archive_e000022~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000025/collection.json","data":[{"title":"Hubble Eyes a Powerful Galaxy","date_created":"2017-06-30T17:03:34Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000025","keywords":["Hubble Eyes a Powerful Galaxy"],"location":"Greenbelt, MD","description":"Not all galaxies have the luxury of possessing a simple moniker or quirky nickname.   This impressive galaxy imaged by the NASA/ESA Hubble Space Telescope is one of the unlucky ones, and goes by a name that looks more like a password for a computer:  2XMM J143450.5+033843.  Such a name may seem like a random jumble of numbers and letters, but like all galactic epithets it has a distinct meaning. This galaxy, for example, was detected and observed as part of the second X-ray sky survey performed by ESA’s XMM-Newton Observatory. Its celestial coordinates form the rest of the bulky name, following the “J”: a right ascension value of 14h (hours) 34m (minutes) 50.5s (seconds). This can be likened to terrestrial longitude. It also has a declination of +03d (degrees) 38m (minutes) 43s (seconds). Declination can be likened to terrestrial latitude. The other fuzzy object in the frame was named in the same way — it is a bright galaxy named 2XMM J143448.3+033749.  2XMM J143450.5+033843 lies nearly 400 million light-years away from Earth. It is a Seyfert galaxy that is dominated by something known as an Active Galactic Nucleus — its core is thought to contain a supermassive black hole that is emitting huge amounts of radiation, pouring energetic X-rays out into the Universe.  Photo credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000025/GSFC_20171208_Archive_e000025~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000687/collection.json","data":[{"title":"Hubble peeks at a spiral galaxy","date_created":"2015-07-10T18:26:01Z","media_type":"image","description":"This little-known galaxy, officially named J04542829-6625280, but most often referred to as LEDA 89996, is a classic example of a spiral galaxy. The galaxy is much like our own galaxy, the Milky Way. The disk-shaped galaxy is seen face on, revealing the winding structure of the spiral arms. Dark patches in these spiral arms are in fact dust and gas — the raw materials for new stars. The many young stars that form in these regions make the spiral arms appear bright and bluish.  The galaxy sits in a vibrant area of the night sky within the constellation of Dorado (The Swordfish), and appears very close to the Large Magellanic Cloud  — one of the satellite galaxies of the Milky Way.  The observations were carried out with the high resolution channel of Hubble’s Advanced Camera for Surveys.   Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Flickr user C. Claude  <b><a href=\"http://go.nasa.gov/1Tqugil\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://go.nasa.gov/1Tqugin\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://go.nasa.gov/1Tqugir\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://go.nasa.gov/1TqujdP\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://go.nasa.gov/1TqujdT\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble peeks at a spiral galaxy"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000687","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000687/GSFC_20171208_Archive_e000687~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000794/collection.json","data":[{"title":"Hubble's Little Sombrero","date_created":"2015-02-06T17:12:07Z","media_type":"image","description":"Galaxies can take many shapes and be oriented any way relative to us in the sky. This can make it hard to figure out their actual morphology, as a galaxy can look very different from different viewpoints. A special case is when we are lucky enough to observe a spiral galaxy directly from its edge, providing us with a spectacular view like the one seen in this picture of the week.  This is NGC 7814, also known as the “Little Sombrero.” Its larger namesake, the Sombrero Galaxy, is another stunning example of an edge-on galaxy — in fact, the “Little Sombrero” is about the same size as its bright namesake at about 60,000 light-years across, but as it lies farther away, and so appears smaller in the sky.  NGC 7814 has a bright central bulge and a bright halo of glowing gas extending outwards into space. The dusty spiral arms appear as dark streaks. They consist of dusty material that absorbs and blocks light from the galactic center behind it. The field of view of this NASA/ESA Hubble Space Telescope image would be very impressive even without NGC 7814 in front; nearly all the objects seen in this image are galaxies as well.  Credit: ESA/Hubble &amp; NASA Acknowledgement: Josh Barrington  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble's Little Sombrero"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000794","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000794/GSFC_20171208_Archive_e000794~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000401/collection.json","data":[{"title":"Hubble and a Stellar Fingerprint","date_created":"2016-03-04T14:33:23Z","media_type":"image","description":"Showcased at the center of this NASA/ESA Hubble Space Telescope image is an emission-line star known as IRAS 12196-6300.  Located just under 2,300 light-years from Earth, this star displays prominent emission lines, meaning that the star’s light, dispersed into a spectrum, shows up as a rainbow of colors marked with a characteristic pattern of dark and bright lines. The characteristics of these lines, when compared to the “fingerprints” left by particular atoms and molecules, can be used to reveal IRAS 12196-6300’s chemical composition.  Under 10 million years old and not yet burning hydrogen at its core, unlike the sun, this star is still in its infancy. Further evidence of IRAS 12196-6300’s youth is provided by the presence of reflection nebulae. These hazy clouds, pictured floating above and below IRAS 12196-6300, are created when light from a star reflects off a high concentration of nearby dust, such as the dusty material still remaining from IRAS 12196-6300’s formation.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","keywords":["Hubble and a Stellar Fingerprint"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000401","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000401/GSFC_20171208_Archive_e000401~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000607/collection.json","data":[{"title":"Hubble Zooms in on Shrapnel from an Exploded Star","album":"Test","media_type":"image","description":"NASA’s Hubble Space Telescope has unveiled in stunning detail a small section of the expanding remains of a massive star that exploded about 8,000 years ago.  Called the Veil Nebula, the debris is one of the best-known supernova remnants, deriving its name from its delicate, draped filamentary structures. The entire nebula is 110 light-years across, covering six full moons on the sky as seen from Earth, and resides about 2,100 light-years away in the constellation Cygnus, the Swan.   This 3-D visualization flies across a small portion of the Veil Nebula as photographed by the Hubble Space Telescope.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-zooms-in-on-shrapnel-from-an-exploded-star\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-zooms-in-on-shrapnel-...</a>  Credit: NASA, ESA, and F. Summers, G. Bacon, Z. Levay, and L. Frattare (Viz 3D Team, STScI)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Zooms in on Shrapnel from an Exploded Star","nasa","nebula","hubble","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000607","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000607/GSFC_20171208_Archive_e000607~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001885/collection.json","data":[{"title":"NASA's Hubble Celebrates 21st Anniversary with \"Rose\" of Galaxies","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001885","keywords":["NASA's Hubble Celebrates 21st Anniversary with \"Rose\" of Galaxies","21","space","nasa","telescope","galaxy","hubble","hst","anniversay","goddardspaceflightcenter","arp273","ugc1810","ugc1813"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"NASA image release April 20, 2011  To see a video of this image go here: <a href=\"http://www.flickr.com/photos/gsfc/5637796622\">www.flickr.com/photos/gsfc/5637796622</a>  To celebrate the 21st anniversary of the Hubble Space Telescope's deployment into space, astronomers at the Space Telescope Science Institute in Baltimore, Md., pointed Hubble's eye at an especially photogenic pair of interacting galaxies called Arp 273. The larger of the spiral galaxies, known as UGC 1810, has a disk that is distorted into a rose-like shape by the gravitational tidal pull of the companion galaxy below it, known as UGC 1813. This image is a composite of Hubble Wide Field Camera 3 data taken on December 17, 2010, with three separate filters that allow a broad range of wavelengths covering the ultraviolet, blue, and red portions of the spectrum.  Hubble was launched April 24, 1990, aboard Discovery's STS-31 mission. Hubble discoveries   revolutionized nearly all areas of current astronomical research from planetary science to cosmology.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)  To read more about this image go here: <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble-rose.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble-rose.html</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001885/GSFC_20171208_Archive_e001885~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o/collection.json","data":[{"title":"Hubble Sees a “Behemoth” Bleeding Atmosphere Around a Warm Exoplanet","date_created":"2015-06-24T00:00:00Z","media_type":"image","description":"Astronomers using NASA’s Hubble Space Telescope have discovered an immense cloud of hydrogen dubbed “The Behemoth” bleeding from a planet orbiting a nearby star. The enormous, comet-like feature is about 50 times the size of the parent star. The hydrogen is evaporating from a warm, Neptune-sized planet, due to extreme radiation from the star.  This phenomenon has never been seen around an exoplanet so small. It may offer clues to how other planets with hydrogen-enveloped atmospheres could have their outer layers evaporated by their parent star, leaving behind solid, rocky cores. Hot, rocky planets such as these that roughly the size of Earth are known as Hot-Super Earths.  “This cloud is very spectacular, though the evaporation rate does not threaten the planet right now,” explains the study’s leader, David Ehrenreich of the Observatory of the University of Geneva in Switzerland. “But we know that in the past, the star, which is a faint red dwarf, was more active. This means that the planet evaporated faster during its first billion years of existence because of the strong radiation from the young star. Overall, we estimate that it may have lost up to 10 percent of its atmosphere over the past several billion years.”  Caption: This artist's concept shows \"The Behemoth,\" an enormous comet-like cloud of hydrogen bleeding off of a warm, Neptune-sized planet just 30 light-years from Earth. Also depicted is the parent star, which is a faint red dwarf named GJ 436. The hydrogen is evaporating from the planet due to extreme radiation from the star. A phenomenon this large has never before been seen around any exoplanet.  Credits: NASA, ESA, and G. Bacon (STScI)","keywords":["Hubble","HST","exoplanet"],"nasa_id":"hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001824/collection.json","data":[{"title":"Hubble's Neptune Anniversary Pictures","album":"Test","media_type":"image","description":"NASA image release July 12, 2011  Neptune: 23:09 UT (June 25, 2011)  Today, Neptune has arrived at the same location in space where it was discovered nearly 165 years ago. To commemorate the event, NASA's Hubble Space Telescope has taken these &quot;anniversary pictures&quot; of the blue-green giant planet.  Neptune is the most distant major planet in our solar system. German astronomer Johann Galle discovered the planet on September 23, 1846. At the time, the discovery doubled the size of the known solar system. The planet is 2.8 billion miles (4.5 billion kilometers) from the Sun, 30 times farther than Earth. Under the Sun's weak pull at that distance, Neptune plods along in its huge orbit, slowly completing one revolution approximately every 165 years.  <b>To read more go <a href=\"http://www.nasa.gov/mission_pages/hubble/science/neptune-circuit.html\" rel=\"nofollow\"> here</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://web.stagram.com/n/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","keywords":["Hubble's Neptune Anniversary Pictures","nasa","neptune","hubble","hst","goddardspaceflightcenter","165years"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001824","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001824/GSFC_20171208_Archive_e001824~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000640/collection.json","data":[{"title":"A Hubble Cosmic Couple","album":"Test","media_type":"image","description":"Here we see the spectacular cosmic pairing of the star Hen 2-427 — more commonly known as WR 124 — and the nebula M1-67 which surrounds it. Both objects, captured here by the NASA/ESA Hubble Space Telescope are found in the constellation of Sagittarius and lie 15,000 light-years away.  The star Hen 2-427 shines brightly at the very center of this explosive image and around the hot clumps of surrounding gas that are being ejected into space at over 93,210 miles (150,000 km) per hour.  Hen 2-427 is a Wolf–Rayet star, named after the astronomers Charles Wolf and Georges Rayet. Wolf–Rayet are super-hot stars characterized by a fierce ejection of mass.  The nebula M1-67 is estimated to be no more than 10,000 years old — just a baby in astronomical terms — but what a beautiful and magnificent sight it makes.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","keywords":["A Hubble Cosmic Couple","star","space","nasa","hubble","m167","nasagoddard","wr124"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000640","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000640/GSFC_20171208_Archive_e000640~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000384/collection.json","data":[{"title":"Hubble Peers into the Mouth of Leo A","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000384","keywords":["Hubble Peers into the Mouth of Leo A","space","nasa","hubble","leoa","hubblespacetelescope","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"At first glance, this NASA/ESA Hubble Space Telescope image seems to show an array of different cosmic objects, but the speckling of stars shown here actually forms a single body — a nearby dwarf galaxy known as Leo A. Its few million stars are so sparsely distributed that some distant background galaxies are visible through it. Leo A itself is at a distance of about 2.5 million light-years from Earth and a member of the Local Group of galaxies; a group that includes the Milky Way and the well-known Andromeda galaxy.  Astronomers study dwarf galaxies because they are very numerous and are simpler in structure than their giant cousins. However, their small size makes them difficult to study at great distances. As a result, the dwarf galaxies of the Local Group are of particular interest, as they are close enough to study in detail.  As it turns out, Leo A is a rather unusual galaxy. It is one of the most isolated galaxies in the Local Group, has no obvious structural features beyond being a roughly spherical mass of stars, and shows no evidence for recent interactions with any of its few neighbors. However, the galaxy’s contents are overwhelmingly dominated by relatively young stars, something that would normally be the result of a recent interaction with another galaxy. Around 90% of the stars in Leo A are less than eight billion years old — young in cosmic terms! This raises a number of intriguing questions about why star formation in Leo A did not take place on the “usual” timescale, but instead waited until it was good and ready.  Image credit: ESA/Hubble &amp; NASA; Acknowledgment: Judy Schmidt","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000384/GSFC_20171208_Archive_e000384~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001464/collection.json","data":[{"title":"Hubble reveals the Ring Nebula’s true shape","album":"Test","media_type":"image","description":"Caption: In this composite image, visible-light observations by NASA’s Hubble Space Telescope are combined with infrared data from the ground-based Large Binocular Telescope in Arizona to assemble a dramatic view of the well-known Ring Nebula.   Credit: NASA, ESA, C.R. Robert O’Dell (Vanderbilt University), G.J. Ferland (University of Kentucky), W.J. Henney and M. Peimbert (National Autonomous University of Mexico) Credit for Large Binocular Telescope data: David Thompson (University of Arizona)   ----  The Ring Nebula's distinctive shape makes it a popular illustration for astronomy books. But new observations by NASA's Hubble Space Telescope of the glowing gas shroud around an old, dying, sun-like star reveal a new twist.  &quot;The nebula is not like a bagel, but rather, it's like a jelly doughnut, because it's filled with material in the middle,&quot; said C. Robert O'Dell of Vanderbilt University in Nashville, Tenn. He leads a research team that used Hubble and several ground-based telescopes to obtain the best view yet of the iconic nebula. The images show a more complex structure than astronomers once thought and have allowed them to construct the most precise 3-D model of the nebula.  &quot;With Hubble's detail, we see a completely different shape than what's been thought about historically for this classic nebula,&quot; O'Dell said. &quot;The new Hubble observations show the nebula in much clearer detail, and we see things are not as simple as we previously thought.&quot;   The Ring Nebula is about 2,000 light-years from Earth and measures roughly 1 light-year across. Located in the constellation Lyra, the nebula is a popular target for amateur astronomers. Read more: <a href=\"http://1.usa.gov/14VAOMk\" rel=\"nofollow\">1.usa.gov/14VAOMk</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble reveals the Ring Nebula’s true shape","nasa","nebula","hubble","hubblespacetelescope"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001464","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001464/GSFC_20171208_Archive_e001464~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000144/collection.json","data":[{"title":"Hubble Gazes at a Cosmic Megamaser","album":"Test","media_type":"image","description":"This galaxy has a far more exciting and futuristic classification than most — it hosts a megamaser. Megamasers are intensely bright, around 100 million times brighter than the masers found in galaxies like the Milky Way. The entire galaxy essentially acts as an astronomical laser that beams out microwave emission rather than visible light (hence the ‘m’ replacing the ‘l’).  A megamaser is a process that involves some components within the galaxy (like gas) that is in the right physical condition to cause the amplification of light (in this case, microwaves).  But there are other parts of the galaxy (like stars for example) that aren’t part of the maser process.  This megamaser galaxy is named IRAS 16399-0937 and is located over 370 million light-years from Earth. This NASA/ESA Hubble Space Telescope image belies the galaxy’s energetic nature, instead painting it as a beautiful and serene cosmic rosebud. The image comprises observations captured across various wavelengths by two of Hubble’s instruments: the Advanced Camera for Surveys (ACS), and the Near Infrared Camera and Multi-Object Spectrometer (NICMOS).  NICMOS’s superb sensitivity, resolution, and field of view gave astronomers the unique opportunity to observe the structure of IRAS 16399-0937 in detail. They found it hosts a double nucleus — the galaxy’s core is thought to be formed of two separate cores in the process of merging. The two components, named IRAS 16399N and IRAS 16399S for the northern and southern parts respectively, sit over 11,000 light-years apart. However, they are both buried deep within the same swirl of cosmic gas and dust and are interacting, giving the galaxy its peculiar structure.  The nuclei are very different. IRAS 16399S appears to be a starburst region, where new stars are forming at an incredible rate. IRAS 16399N, however, is something known as a LINER nucleus (Low Ionization Nuclear Emission Region), which is a region whose emission mostly stems from weakly-ionized or neutral atoms of particular gases. The northern nucleus also hosts a black hole with some 100 million times the mass of the sun!  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt (geckzilla)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>    ","keywords":["Hubble Gazes at a Cosmic Megamaser"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000144","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000144/GSFC_20171208_Archive_e000144~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001708/collection.json","data":[{"title":"Hubble Views a Cosmic Skyrocket","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001708","keywords":["Hubble Views a Cosmic Skyrocket"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"NASA image release July 3, 2012  Caption: Resembling a Fourth of July skyrocket, Herbig-Haro 110 is a geyser of hot gas from a newborn star that splashes up against and ricochets off the dense core of a cloud of molecular hydrogen. Although the plumes of gas look like whiffs of smoke, they are actually billions of times less dense than the smoke from a July 4 firework. This Hubble Space Telescope photo shows the integrated light from plumes, which are light-years across.  -- Herbig-Haro (HH) objects come in a wide array of shapes, but the basic configuration stays the same. Twin jets of heated gas, ejected in opposite directions away from a forming star, stream through interstellar space. Astronomers suspect that these outflows are fueled by gas accreting onto a young star surrounded by a disk of dust and gas. The disk is the &quot;fuel tank,&quot; the star is the gravitational engine, and the jets are the exhaust.  When these energetic jets slam into colder gas, the collision plays out like a traffic jam on the interstate. Gas within the shock front slows to a crawl, but more gas continues to pile up as the jet keeps slamming into the shock from behind. Temperatures climb sharply, and this curving, flared region starts to glow. These &quot;bow shocks&quot; are so named because they resemble the waves that form at the front of a boat.  In the case of the single HH 110 jet, astronomers observe a spectacular and unusual permutation on this basic model. Careful study has repeatedly failed to find the source star driving HH 110, and there may be good reason for this: perhaps the HH 110 outflow is itself generated by another jet.  Astronomers now believe that the nearby HH 270 jet grazes an immovable obstacle - a much denser, colder cloud core - and gets diverted off at about a 60-degree angle. The jet goes dark and then reemerges, having reinvented itself as HH 110.  The jet shows that these energetic flows are like the erratic outbursts from a Roman candle. As fast-moving blobs of gas catch up and collide with slower blobs, new shocks arise along the jet's interior. The light emitted from excited gas in these hot blue ridges marks the boundaries of these interior collisions. By measuring the current velocity and positions of different blobs and hot ridges along the chain within the jet, astronomers can effectively &quot;rewind&quot; the outflow, extrapolating the blobs back to the moment when they were emitted. This technique can be used to gain insight into the source star's history of mass accretion.  This image is a composite of data taken with Hubble's Advanced Camera for Surveys in 2004 and 2005 and the Wide Field Camera 3 in April 2011.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001708/GSFC_20171208_Archive_e001708~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/stsci-h-p1906a-f-1028x543/collection.json","data":[{"title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","date_created":"2019-02-11T00:00:00Z","media_type":"image","description":"During its routine yearly monitoring of the weather on our solar system's outer planets, NASA's Hubble Space Telescope has uncovered a new mysterious dark storm on Neptune (right) and provided a fresh look at a long-lived storm circling around the north polar region on Uranus (left).","keywords":["Uranus","Neptune","Hubble","NASA Goddard"],"photographer":"NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","location":"NASA Goddard","nasa_id":"stsci-h-p1906a-f-1028x543","secondary_creator":"Space Telescope Science Institute Office of Public Outreach","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/stsci-h-p1906a-f-1028x543/stsci-h-p1906a-f-1028x543~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000390/collection.json","data":[{"title":"Hubble’s Journey to the Center of our Galaxy","album":"Test","media_type":"image","description":"This picture, spanning 50 light-years across, is a mosaic stitched from nine separate images from Hubble’s Wide Field Camera 3. The center of the Milky Way is located 27,000 light-years away. The “snowstorm” of stars in the image is just the tip of the iceberg: Astronomers estimate that about 10 million stars in this cluster are too faint to be captured in this image.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/2016/hubble-s-journey-to-the-center-of-our-galaxy\" rel=\"nofollow\">www.nasa.gov/feature/goddard/2016/hubble-s-journey-to-the...</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","keywords":["Hubble’s Journey to the Center of our Galaxy"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000390","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000390/GSFC_20171208_Archive_e000390~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000699/collection.json","data":[{"title":"Hubble View of a Nitrogen-Rich Nebula","date_created":"2015-06-26T15:34:26Z","media_type":"image","description":"This NASA/ESA Hubble Space Telescope image shows a planetary nebula named NGC 6153, located about 4,000 light-years away in the southern constellation of Scorpius (The Scorpion). The faint blue haze across the frame shows what remains of a star like the sun after it has depleted most of its fuel. When this happens, the outer layers of the star are ejected, and get excited and ionized by the energetic ultraviolet light emitted by the bright hot core of the star, forming the nebula.  NGC 6153 is a planetary nebula that is elliptical in shape, with an extremely rich network of loops and filaments, shown clearly in this Hubble image. However, this is not what makes this planetary nebula so interesting for astronomers.  Measurements show that NGC 6153 contains large amounts of neon, argon, oxygen, carbon and chlorine — up to three times more than can be found in the solar system. The nebula contains a whopping five times more nitrogen than our sun! Although it may be that the star developed higher levels of these elements as it grew and evolved, it is more likely that the star originally formed from a cloud of material that already contained a lot more of these elements.  Text credit: European Space Agency Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Matej Novak  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble View of a Nitrogen-Rich Nebula"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000699","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000699/GSFC_20171208_Archive_e000699~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001059/collection.json","data":[{"title":"Grand Swirls from NASA's Hubble","date_created":"2014-06-06T14:35:47Z","media_type":"image","description":"This new Hubble image shows NGC 1566, a beautiful galaxy located approximately 40 million light-years away in the constellation of Dorado (The Dolphinfish). NGC 1566 is an intermediate spiral galaxy, meaning that while it does not have a well-defined bar-shaped region of stars at its center — like barred spirals — it is not quite an unbarred spiral either.  The small but extremely bright nucleus of NGC 1566 is clearly visible in this image, a telltale sign of its membership of the Seyfert class of galaxies. The centers of such galaxies are very active and luminous, emitting strong bursts of radiation and potentially harboring supermassive black holes that are many millions of times the mass of the sun.  NGC 1566 is not just any Seyfert galaxy; it is the second brightest Seyfert galaxy known. It is also the brightest and most dominant member of the Dorado Group, a loose concentration of galaxies that together comprise one of the richest galaxy groups of the southern hemisphere. This image highlights the beauty and awe-inspiring nature of this unique galaxy group, with NGC 1566 glittering and glowing, its bright nucleus framed by swirling and symmetrical lavender arms.  This image was taken by Hubble’s Wide Field Camera 3 (WFC3) in the near-infrared part of the spectrum.    European Space Agency Credit:  ESA/Hubble &amp; NASA, Acknowledgement: Flickr user Det58  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Grand Swirls from NASA's Hubble"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001059","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001059/GSFC_20171208_Archive_e001059~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002058/collection.json","data":[{"title":"Hubble's Wide View of 'Mystic Mountain' in Infrared","date_created":"2010-04-23T13:33:42Z","media_type":"image","description":"NASA image release April 22, 2010  This is a NASA Hubble Space Telescope near-infrared-light image of a three-light-year-tall pillar of gas and dust that is being eaten away by the brilliant light from nearby stars in the tempestuous stellar nursery called the Carina Nebula, located 7,500 light-years away in the southern constellation Carina. The image marks the 20th anniversary of Hubble's launch and deployment into an orbit around Earth. The image reveals a plethora of stars behind the gaseous veil of the nebula's wall of hydrogen, laced with dust. The foreground pillar becomes semi-transparent because infrared light from background stars penetrates through much of the dust. A few stars inside the pillar also become visible. The false colors are assigned to three different infrared wavelength ranges. Hubble's Wide Field Camera 3 observed the pillar in February and March 2010. Object Names: HH 901, HH 902 Image Type: Astronomical  Credit: NASA, ESA, and M. Livio and the Hubble 20th Anniversary Team (STScI)  To read learn more about this image go to:  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble20th-img.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble20th-img....</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","keywords":["Hubble's Wide View of 'Mystic Mountain' in Infrared"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002058","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002058/GSFC_20171208_Archive_e002058~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000982/collection.json","data":[{"title":"Hubble Feathers the Peacock","date_created":"2014-09-19T14:34:49Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000982","keywords":["Hubble Feathers the Peacock"],"location":"Greenbelt, MD","description":"This picture, taken by the NASA/ESA Hubble Space Telescope’s Wide Field Planetary Camera 2 (WFPC2), shows a galaxy known as NGC 6872 in the constellation of Pavo (The Peacock). Its unusual shape is caused by its interactions with the smaller galaxy that can be seen just above NGC 6872, called IC 4970. They both lie roughly 300 million light-years away from Earth.  From tip to tip, NGC 6872 measures over 500,000 light-years across, making it the second largest spiral galaxy discovered to date. In terms of size it is beaten only by NGC 262, a galaxy that measures a mind-boggling 1.3 million light-years in diameter! To put that into perspective, our own galaxy, the Milky Way, measures between 100,000 and 120,000 light-years across, making NGC 6872 about five times its size.  The upper left spiral arm of NGC 6872 is visibly distorted and is populated by star-forming regions, which appear blue on this image. This may have been be caused by IC 4970 recently passing through this arm — although here, recent means 130 million years ago! Astronomers have noted that NGC 6872 seems to be relatively sparse in terms of free hydrogen, which is the basis material for new stars, meaning that if it weren’t for its interactions with IC 4970, NGC 6872 might not have been able to produce new bursts of star formation.  Credit: Image credit: ESA/Hubble &amp; NASA / Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000982/GSFC_20171208_Archive_e000982~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000657/collection.json","data":[{"title":"Hubble Finds a Little Gem","date_created":"2015-08-07T13:31:43Z","media_type":"image","description":"This colorful bubble is a planetary nebula called NGC 6818, also known as the Little Gem Nebula. It is located in the constellation of Sagittarius (The Archer), roughly 6,000 light-years away from us. The rich glow of the cloud is just over half a light-year across — humongous compared to its tiny central star — but still a little gem on a cosmic scale.  When stars like the sun enter &quot;retirement,&quot; they shed their outer layers into space to create glowing clouds of gas called planetary nebulae. This ejection of mass is uneven, and planetary nebulae can have very complex shapes. NGC 6818 shows knotty filament-like structures and distinct layers of material, with a bright and enclosed central bubble surrounded by a larger, more diffuse cloud.  Scientists believe that the stellar wind from the central star propels the outflowing material, sculpting the elongated shape of NGC 6818. As this fast wind smashes through the slower-moving cloud it creates particularly bright blowouts at the bubble’s outer layers.  Hubble previously imaged this nebula back in 1997 with its Wide Field Planetary Camera 2, using a mix of filters that highlighted emission from ionized oxygen and hydrogen. This image, while from the same camera, uses different filters to reveal a different view of the nebula.    Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Finds a Little Gem"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000657","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000657/GSFC_20171208_Archive_e000657~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000767/collection.json","data":[{"title":"Panta rhei as Seen by Hubble","date_created":"2015-02-20T20:05:54Z","media_type":"image","description":"Panta rhei is a simplified version of the famous Greek philosopher Heraclitus' teachings. It basically means, everything flows. And everything in the Universe is indeed continually on the move, spiraling and shifting through space.  Some cosmic objects move a little further than others — take the subject of this NASA/ESA Hubble Space Telescope image, a globular cluster of stars known as Palomar 12. Although it currently lies on the outskirts of the Milky Way’s halo, Palomar 12 was not born here. When astronomers first studied this cluster, they were puzzled by its strangely young age when compared to the other clusters in the galaxy. It appeared to be around 30 percent younger than other Milky Way globulars. Surely if it had been born within our galaxy, it would have sprung to life at a similar time to its cluster companions?  A bit more digging revealed that Palomar 12 was actually ripped from its initial home, the Sagittarius Dwarf Elliptical galaxy, around 1.7 billion years ago via tidal interactions between its former home and our galaxy. The dwarf galaxy that Palomar 12 once called home is a satellite galaxy to ours, and closely orbits around us — even occasionally passing through the plane of our galaxy. In fact, it is being slowly torn apart and consumed by the Milky Way.  The sparkling stars in this picture were imaged by Hubble’s Advanced Camera for Surveys.  Credit: ESA/NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","keywords":["Panta rhei as Seen by Hubble"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000767","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000767/GSFC_20171208_Archive_e000767~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001921/collection.json","data":[{"title":"NASA's Hubble Zooms in on a Space Oddity","date_created":"2011-01-11T18:27:29Z","media_type":"image","description":"NASA image release January 10, 2011  In this image by NASA's Hubble Space Telescope, an unusual, ghostly green blob of gas appears to float near a normal-looking spiral galaxy.  The bizarre object, dubbed Hanny's Voorwerp (Hanny's Object in Dutch), is the only visible part of a 300,000-light-year-long streamer of gas stretching around the galaxy, called IC 2497. The greenish Voorwerp is visible because a searchlight beam of light from the galaxy's core illuminated it. This beam came from a quasar, a bright, energetic object that is powered by a black hole. The quasar may have turned off about 200,000 years ago.  This Hubble view uncovers a pocket of star clusters, the yellowish-orange area at the tip of Hanny's Voorwerp. The star clusters are confined to an area that is a few thousand light-years wide. The youngest stars are a couple of million years old. The Voorwerp is the size of our Milky Way galaxy, and its bright green color is from glowing oxygen.  Hubble also shows that gas flowing from IC 2497 may have instigated the star birth by compressing the gas in Hanny's Voorwerp. The galaxy is located about 650 million light-years from Earth.  What appears to be a gaping hole in Hanny's Voorwerp actually may be a shadow cast by an object in the quasar's light path. The feature gives the illusion of a hole about 20,000 light-years wide. Hubble reveals sharp edges but no other changes in the gas around the apparent opening, suggesting that an object close to the quasar may have blocked some of the light and projected a shadow on the Voorwerp. This phenomenon is similar to a fly on a movie projector lens casting a shadow on a movie screen.  An interaction between IC 2497 and another galaxy about a billion years ago may have created Hanny's Voorwerp and fueled the quasar. The Hubble image shows that IC 2497 has been disturbed, with complex dust patches, warped spiral arms, and regions of star formation around its core. These features suggest the aftermath of a galaxy merger. The bright spots in the central part of the galaxy are star-forming regions. The small, pinkish object to the lower right of IC 2497 is an edge-on spiral galaxy in the background.  The image was made by combining data from the Advanced Camera for Surveys (ACS) and the Wide Field Camera 3 (WFC3). The ACS exposures were taken April 12, 2010; the WFC3 data, April 4, 2010.  Object Names: Hanny's Voorwerp, IC 2497  Image Type: Astronomical  Credit: NASA, ESA, W. Keel (University of Alabama), and the Galaxy Zoo Team  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","keywords":["NASA's Hubble Zooms in on a Space Oddity"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001921","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001921/GSFC_20171208_Archive_e001921~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000256/collection.json","data":[{"title":"A Hubble Sky Full of Stars","album":"Test","media_type":"image","description":"So Coldplay isn't the only one to see a sky full of stars, these are 22K light-years away  Located approximately 22,000 light-years away in the constellation of Musca (The Fly), this tightly packed collection of stars — known as a globular cluster — goes by the name of NGC 4833. This NASA/ESA Hubble Space Telescope image shows the dazzling stellar group in all its glory.  NGC 4833 is one of the over 150 globular clusters known to reside within the Milky Way. These objects are thought to contain some of the oldest stars in our galaxy. Studying these ancient cosmic clusters can help astronomers to unravel how a galaxy formed and evolved, and give an idea of the galaxy’s age.  Globular clusters are responsible for some of the most striking sights in the cosmos, with hundreds of thousands of stars congregating in the same region of space. Hubble has observed many of these clusters during its time in orbit around our planet, each as breathtaking as the last.  bit.ly/2b85p36   Image credit: ESA/Hubble and NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","keywords":["A Hubble Sky Full of Stars","nasa","hubble","space","stars","global","cluster","ngc4833"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000256","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000256/GSFC_20171208_Archive_e000256~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000506/collection.json","data":[{"title":"A Galaxy at the Center of the Hubble Tuning Fork","album":"Test","media_type":"image","description":"This galaxy is known as Mrk 820 and is classified as a lenticular galaxy — type S0 on the Hubble Tuning Fork. The Hubble Tuning Fork is used to classify galaxies according to their morphology. Elliptical galaxies look like smooth blobs in the sky and lie on the handle of the fork. They are arranged along the handle based on how elliptical they are, with the more spherical galaxies furthest from the tines of the fork, and the more egg-shaped ones closest to the end of the handle where it divides. The two prongs of the tuning fork represent types of unbarred and barred spiral galaxies.  Lenticular galaxies like Mrk 820 are in the transition zone between ellipticals and spirals and lie right where the fork divides. A closer look at the appearance of Mrk 820 reveals hints of a spiral structure embedded in a circular halo of stars.  Surrounding Mrk 820 in this image is a good sampling of other galaxy types, covering almost every type found on the Hubble Tuning Fork, both elliptical and spiral. Most of the smears and specks are distant galaxies, but the prominent bright object at the bottom is a foreground star called TYC 4386-787-1.  Credit: ESA/Hubble &amp; NASA and N. Gorin (STScI), Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","keywords":["A Galaxy at the Center of the Hubble Tuning Fork","space","nasa","galaxy","lenticular","hubble","nasagoddard","mrk820"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000506","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000506/GSFC_20171208_Archive_e000506~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000528/collection.json","data":[{"title":"Hubble Spies Big Bang Frontiers","album":"Test","media_type":"image","description":"Observations by the NASA/ESA Hubble Space Telescope have taken advantage of gravitational lensing to reveal the largest sample of the faintest and earliest known galaxies in the universe. Some of these galaxies formed just 600 million years after the big bang and are fainter than any other galaxy yet uncovered by Hubble. The team has determined for the first time with some confidence that these small galaxies were vital to creating the universe that we see today.  An international team of astronomers, led by Hakim Atek of the Ecole Polytechnique Fédérale de Lausanne, Switzerland, has discovered over 250 tiny galaxies that existed only 600-900 million years after the big bang— one of the largest samples of dwarf galaxies yet to be discovered at these epochs. The light from these galaxies took over 12 billion years to reach the telescope, allowing the astronomers to look back in time when the universe was still very young.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-spies-big-bang-frontiers\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-spies-big-bang-frontiers</a>  Credit: NASA/ESA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","keywords":["Hubble Spies Big Bang Frontiers","big","galaxy","galaxies","bang","hubble","hubblespacetelescope","bingbang","macsj071753745"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000528","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000528/GSFC_20171208_Archive_e000528~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000100/collection.json","data":[{"title":"Alien aurorae spotted on Uranus by Hubble","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000100","keywords":["Alien aurorae spotted on Uranus by Hubble","uranus"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This is a composite image of Uranus by Voyager 2 and two different observations made by Hubble — one for the ring and one for the auroras.  Ever since Voyager 2 beamed home spectacular images of the planets in the 1980s, planet-lovers have been hooked on auroras on other planets. Auroras are caused by streams of charged particles like electrons that come from various origins such as solar winds, the planetary ionosphere, and moon volcanism. They become caught in powerful magnetic fields and are channeled into the upper atmosphere, where their interactions with gas particles, such as oxygen or nitrogen, set off spectacular bursts of light.  The auroras on Jupiter and Saturn are well-studied, but not much is known about the auroras of the giant ice planet Uranus. In 2011, the NASA/ESA Hubble Space Telescope became the first Earth-based telescope to snap an image of the auroras on Uranus. In 2012 and 2014 a team led by an astronomer from Paris Observatory took a second look at the auroras using the ultraviolet capabilities of the Space Telescope Imaging Spectrograph (STIS) installed on Hubble.  They tracked the interplanetary shocks caused by two powerful bursts of solar wind traveling from the sun to Uranus, then used Hubble to capture their effect on Uranus’ auroras — and found themselves observing the most intense auroras ever seen on the planet. By watching the auroras over time, they collected the first direct evidence that these powerful shimmering regions rotate with the planet. They also re-discovered Uranus’ long-lost magnetic poles, which were lost shortly after their discovery by Voyager 2 in 1986 due to uncertainties in measurements and the featureless planet surface.  Credit: ESA/Hubble &amp; NASA, L. Lamy / Observatoire de Paris  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000100/GSFC_20171208_Archive_e000100~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000012/collection.json","data":[{"title":"Hubble's Hockey Stick Galaxy","album":"Test","media_type":"image","description":"The star of this NASA/ESA Hubble Space Telescope image is a galaxy known as NGC 4656, located in the constellation of Canes Venatici (The Hunting Dogs). However, it also has a somewhat more interesting and intriguing name: the Hockey Stick Galaxy! The reason for this is a little unclear from this partial view, which shows the bright central region, but the galaxy is actually shaped like an elongated, warped stick, stretching out through space until it curls around at one end to form a striking imitation of a celestial hockey stick.  This unusual shape is thought to be due to an interaction between NGC 4656 and a couple of near neighbors, NGC 4631 (otherwise known as The Whale Galaxy) and NGC 4627 (a small elliptical). Galactic interactions can completely reshape a celestial object, shifting and warping its constituent gas, stars, and dust into bizarre and beautiful configurations.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","keywords":["Hubble's Hockey Stick Galaxy","ngc4656"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000012","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000012/GSFC_20171208_Archive_e000012~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000677/collection.json","data":[{"title":"Hubble Looks in on a Galactic Nursery","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000677","keywords":["Hubble Looks in on a Galactic Nursery","ngc1140"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This dramatic image shows the NASA/ESA Hubble Space Telescope’s view of dwarf galaxy known as NGC 1140, which lies 60 million light-years away in the constellation of Eridanus. As can be seen in this image NGC 1140 has an irregular form, much like the Large Magellanic Cloud — a small galaxy that orbits the Milky Way.  This small galaxy is undergoing what is known as a starburst. Despite being almost ten times smaller than the Milky Way it is creating stars at about the same rate, with the equivalent of one star the size of our sun being created per year. This is clearly visible in the image, which shows the galaxy illuminated by bright, blue-white, young stars.  Galaxies like NGC 1140 — small, starbursting and containing large amounts of primordial gas with far fewer elements heavier than hydrogen and helium than are present in our sun — are of particular interest to astronomers. Their composition makes them similar to the intensely star-forming galaxies in the early Universe. And these early Universe galaxies were the building blocks of present-day large galaxies like our galaxy, the Milky Way. But, as they are so far away these early Universe galaxies are harder to study so these closer starbursting galaxies are a good substitute for learning more about galaxy evolution.  The vigorous star formation will have a very destructive effect on this small dwarf galaxy in its future. When the larger stars in the galaxy die, and explode as supernovae, gas is blown into space and may easily escape the gravitational pull of the galaxy. The ejection of gas from the galaxy means it is throwing out its potential for future stars as this gas is one of the building blocks of star formation. NGC 1140’s starburst cannot last for long.  Image credit: ESA/Hubble &amp; NASA ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000677/GSFC_20171208_Archive_e000677~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000159/collection.json","data":[{"title":"Hubble Nets a Subtle Swarm","album":"Test","media_type":"image","description":"This Hubble image shows NGC 4789A, a dwarf irregular galaxy in the constellation of Coma Berenices. It certainly lives up to its name — the stars that call this galaxy home are smeared out across the sky in an apparently disorderly and irregular jumble, giving NGC 4789A a far more subtle and abstract appearance than its glitzy spiral and elliptical cousins.  These stars may look as if they have been randomly sprinkled on the sky, but they are all held together by gravity. The colors in this image have been deliberately exaggerated to emphasize the mix of blue and red stars. The blue stars are bright, hot and massive stars that have formed relatively recently, whereas the red stars are much older. The presence of both tells us that stars have been forming in this galaxy throughout its history.  At a distance of just over 14 million light-years away NGC 4789A is relatively close to us, allowing us to see many of the individual stars within its bounds. This image also reveals numerous other galaxies, far more distant, that appear as fuzzy shapes spread across the image.  Image Credit: ESA/Hubble &amp; NASA, Acknowledgements: Judy Schmidt (Geckzilla)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Nets a Subtle Swarm","ngc4789a"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000159","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000159/GSFC_20171208_Archive_e000159~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000433/collection.json","data":[{"title":"Hubble Spies a Rebel","album":"Test","media_type":"image","description":"Most galaxies possess a majestic spiral or elliptical structure. About a quarter of galaxies, though, defy such conventional, rounded aesthetics, instead sporting a messy, indefinable shape. Known as irregular galaxies, this group includes NGC 5408, the galaxy that has been snapped here by the NASA/ESA Hubble Space Telescope.  John Herschel recorded the existence of NGC 5408 in June 1834. Astronomers had long mistaken NGC 5408 for a planetary nebula, an expelled cloud of material from an aging star. Instead, bucking labels, NGC 5408 turned out to be an entire galaxy, located about 16 million light-years from Earth in the constellation of Centaurus (The Centaur).  In yet another sign of NGC 5408 breaking convention, the galaxy is associated with an object known as an ultraluminous X-ray source, dubbed NGC 5408 X-1, one of the best studied of its class. These rare objects beam out prodigious amounts of energetic X-rays. Astrophysicists believe these sources to be strong candidates for intermediate-mass black holes. This hypothetical type of black hole has significantly less mass than the supermassive black holes found in galactic centers, which can have billions of times the mass of the sun, but have a good deal more mass than the black holes formed when giant stars collapse.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","keywords":["Hubble Spies a Rebel","space","nasa","hubble","nasagoddard","ngc5408"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000433","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000433/GSFC_20171208_Archive_e000433~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001513/collection.json","data":[{"title":"Hubble’s View of a Changing Fan","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001513","keywords":["Hubble’s View of a Changing Fan","space","nasa","hubble","heliophysics","solarsystemexploration","goddardbahrefhttpwwwnasagovaudienceformediafeaturesmpphotoguidelineshtmlrelnofollownasaimageusepolicyabbahrefhttpwwwnasagovcentersgoddardhomeindexhtmlrelnofollownasagoddardspaceflightcenterabenable"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"The Universe is rarely static, although the timescales involved can be very long. Since modern astronomical observations began we have been observing the birthplaces of new stars and planets, searching for and studying the subtle changes that help us to figure out what is happening within.  The bright spot located at the edge of the bluish fan-shaped structure in this Hubble image is a young star called V* PV Cephei, or PV Cep. It is a favorite target for amateur astronomers because the fan-shaped nebulosity, known as GM 1-29 or Gyulbudaghian’s Nebula, changes over a timescale of months. The brightness of the star has also varied over time.  Images of PV Cep taken in 1952 showed a nebulous streak, similar to a comet’s tail. However, this had vanished when new images of the star were obtained some twenty-five years later. Instead, the blue fan-shaped nebula had appeared. Twenty-five years is a very short period on cosmic timescales, so astronomers think that the mysterious streak may have been a temporary phenomenon, such as the remnants of a massive stellar flare — similar to the solar flares we are used to seeing in the solar system.  At the same time as this was happening, the star itself was brightening. This provided the light to illuminate the newly formed fan-shaped nebula. This brightening might be related to the start of the hydrogen-burning phase of the star, which would mean that it was reaching maturity.  PV Cep is thought to be surrounded by a disc of gas and dust, which would stop light from escaping in all directions. The fan-like appearance is therefore probably a result of starlight escaping from the dust disc and projecting onto the nebula.  PV Cep is located in the northern constellation of Cepheus at a distance of over 1600 light-years from Earth.   European Space Agency/NASA Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001513/GSFC_20171208_Archive_e001513~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000332/collection.json","data":[{"title":"Hubble Takes Mars Portrait Near Close Approach","album":"Test","media_type":"image","description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000332","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000332/GSFC_20171208_Archive_e000332~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000334/collection.json","data":[{"title":"Hubble Takes Mars Portrait Near Close Approach","album":"Test","media_type":"image","description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000334","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000334/GSFC_20171208_Archive_e000334~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000333/collection.json","data":[{"title":"Hubble Takes Mars Portrait Near Close Approach","album":"Test","media_type":"image","description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000333","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000333/GSFC_20171208_Archive_e000333~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000278/collection.json","data":[{"title":"Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","album":"Test","media_type":"image","description":"Fireworks shows are not just confined to Earth’s skies. NASA’s Hubble Space Telescope has captured a spectacular fireworks display in a small, nearby galaxy, which resembles a July 4th skyrocket.  A firestorm of star birth is lighting up one end of the diminutive galaxy Kiso 5639. The dwarf galaxy is shaped like a flattened pancake, but because it is tilted edge-on, it resembles a skyrocket, with a brilliant blazing head and a long, star-studded tail.  Kiso 5639 is a rare, nearby example of elongated galaxies that occur in abundance at larger distances, where we observe the universe during earlier epochs. Astronomers suggest that the frenzied star birth is sparked by intergalactic gas raining on one end of the galaxy as it drifts through space.  “I think Kiso 5639 is a beautiful, up-close example of what must have been common long ago,” said lead researcher Debra Elmegreen of Vassar College, in Poughkeepsie, New York. “The current thinking is that galaxies in the early universe grow from accreting gas from the surrounding neighborhood. It’s a stage that galaxies, including our Milky Way, must go through as they are growing up.”  Observations of the early universe, such as Hubble’s Ultra-Deep Field, reveal that about 10 percent of all galaxies have these elongated shapes, and are collectively called “tadpoles.” But studies of the nearby universe have turned up only a few of these unusual galaxies, including Kiso 5639. The development of the nearby star-making tadpole galaxies, however, has lagged behind that of their peers, which have spent billions of years building themselves up into many of the spiral galaxies seen today.  Elmegreen used Hubble’s Wide Field Camera 3 to conduct a detailed imaging study of Kiso 5639. The images in different filters reveal information about an object by dissecting its light into its component colors. Hubble’s crisp resolution helped Elmegreen and her team analyze the giant star-forming clumps in Kiso 5639 and determine the masses and ages of the star clusters.  The international team of researchers selected Kiso 5639 from a spectroscopic survey of 10 nearby tadpole galaxies, observed with the Grand Canary Telescope in La Palma, Spain, by Jorge Sanchez Almeida and collaborators at the Instituto de Astrofisica de Canarias. The observations revealed that in most of those galaxies, including Kiso 5639, the gas composition is not uniform.  The bright gas in the galaxy’s head contains fewer heavier elements (collectively called “metals”), such as carbon and oxygen, than the rest of the galaxy. Stars consist mainly of hydrogen and helium, but cook up other “heavier” elements. When the stars die, they release their heavy elements and enrich the surrounding gas.  “The metallicity suggests that there has to be rather pure gas, composed mostly of hydrogen, coming into the star-forming part of the galaxy, because intergalactic space contains more pristine hydrogen-rich gas,” Elmegreen explained. “Otherwise, the starburst region should be as rich in heavy elements as the rest of the galaxy.”  Hubble offers a detailed view of the galaxy’s star-making frenzy. The telescope uncovered several dozen clusters of stars in the galaxy’s star-forming head, which spans 2,700 light-years across. These clusters have an average age of less than 1 million years and masses that are three to six times larger than those in the rest of the galaxy. Other star formation is taking place throughout the galaxy but on a much smaller scale. Star clusters in the rest of the galaxy are between several million to a few billion years old.  “There is much more star formation going on in the head than what you would expect in such a tiny galaxy,” said team member Bruce Elmegreen of IBM’s Thomas J. Watson’s Research Center, in Yorktown Heights, New York. “And we think the star formation is triggered by the ongoing accretion of metal-poor gas onto a part of an otherwise quiescent dwarf galaxy.”  Hubble also revealed giant holes peppered throughout the galaxy’s starburst head. These cavities give the galaxy’s head a Swiss-cheese appearance because numerous supernova detonations – like firework aerial bursts – have carved out holes of rarified superheated gas.  The galaxy, located 82 million light-years away, has taken billions of years to develop because it has been drifting through an isolated “desert” in the universe, devoid of much gas.  What triggered the starburst in such a backwater galaxy? Based on simulations by Daniel Ceverino of the Center for Astronomy at Heidelberg University in Germany, and other team members, the observations suggest that less than 1 million years ago, Kiso 5639’s leading edge encountered a filament of gas. The filament dropped a large clump of matter onto the galaxy, stoking the vigorous star birth.  Debra Elmegreen expects that in the future other parts of the galaxy will join in the star-making fireworks show. “Galaxies rotate, and as Kiso 5639 continues to spin, another part of the galaxy may receive an infusion of new gas from this filament, instigating another round of star birth,” she said.  The team’s results have been accepted for publication in The Astrophysical Journal.  Other team members include Casiana Munoz-Tunon and Mercedes Filho (Instituto de Astrofísica de Canarias, Canary Islands), Jairo Mendez-Abreu (University of St. Andrews, United Kingdom), John Gallagher (University of Wisconsin-Madison), and Marc Rafelski (NASA's Goddard Space Flight Center, Greenbelt, Maryland).  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  For images and more information about Kiso 5639 and Hubble, visit:   <a href=\"http://hubblesite.org/news/2016/23\" rel=\"nofollow\">hubblesite.org/news/2016/23</a>  <a href=\"http://www.nasa.gov/hubble\" rel=\"nofollow\">www.nasa.gov/hubble</a>  Image credit: NASA, ESA, and D. Elmegreen (Vassar College)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","keywords":["Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","nasa","galaxy","hubble","nasagoddard"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000278","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000278/GSFC_20171208_Archive_e000278~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001017/collection.json","data":[{"title":"Hubble Revisits a Globular Cluster’s Age","date_created":"2014-08-13T20:30:40Z","media_type":"image","description":"This new NASA/ESA Hubble Space Telescope image shows the globular cluster IC 4499.  Globular clusters are big balls of old stars that orbit around their host galaxy. It has long been believed that all the stars within a globular cluster form at the about same time, a property which can be used to determine the cluster's age. For more massive globulars however, detailed observations have shown that this is not entirely true — there is evidence that they instead consist of multiple populations of stars born at different times. One of the driving forces behind this behavior is thought to be gravity: more massive globulars manage to grab more gas and dust, which can then be transformed into new stars.  IC 4499 is a somewhat special case. Its mass lies somewhere between low-mass globulars, which show a single generation build-up, and the more complex and massive globulars which can contain more than one generation of stars. By studying objects like IC 4499 astronomers can therefore explore how mass affects a cluster's contents. Astronomers found no sign of multiple generations of stars in IC 4499 — supporting the idea that less massive clusters in general only consist of a single stellar generation.  Hubble observations of IC 4499 have also helped to pinpoint the cluster's age: observations of this cluster from the 1990s suggested a puzzlingly young age when compared to other globular clusters within the Milky Way. However, since those first estimates new Hubble data have been obtained and it has been found to be much more likely that IC 4499 is actually roughly the same age as other Milky Way clusters at approximately 12 billion years old.         Credit: ESA and NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Revisits a Globular Cluster’s Age"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001017","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001017/GSFC_20171208_Archive_e001017~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000720/collection.json","data":[{"title":"Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’","date_created":"2015-05-21T19:22:40Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000720","keywords":["Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’"],"location":"Greenbelt, MD","description":"Astronomers using NASA’s Hubble Space Telescope have uncovered surprising new clues about a hefty, rapidly aging star whose behavior has never been seen before in our Milky Way galaxy. In fact, the star is so weird that astronomers have nicknamed it “Nasty 1,” a play on its catalog name of NaSt1. The star may represent a brief transitory stage in the evolution of extremely massive stars.  First discovered several decades ago, Nasty 1 was identified as a Wolf-Rayet star, a rapidly evolving star that is much more massive than our sun. The star loses its hydrogen-filled outer layers quickly, exposing its super-hot and extremely bright helium-burning core.  But Nasty 1 doesn’t look like a typical Wolf-Rayet star. The astronomers using Hubble had expected to see twin lobes of gas flowing from opposite sides of the star, perhaps similar to those emanating from the massive star Eta Carinae, which is a Wolf-Rayet candidate.   Instead, Hubble revealed a pancake-shaped disk of gas encircling the star. The vast disk is nearly 2 trillion miles wide, and may have formed from an unseen companion star that snacked on the outer envelope of the newly formed Wolf-Rayet.  Based on current estimates, the nebula surrounding the stars is just a few thousand years old, and as close as 3,000 light-years from Earth.  Read more: <a href=\"http://www.nasa.gov/feature/hubble-observes-one-of-a-kind-star-nicknamed-nasty\" rel=\"nofollow\">www.nasa.gov/feature/hubble-observes-one-of-a-kind-star-n...</a>  Credits: NASA/Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000720/GSFC_20171208_Archive_e000720~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001014/collection.json","data":[{"title":"Hubble Sees a Silver Needle in the Sky","date_created":"2014-08-22T15:19:02Z","media_type":"image","description":"This stunning new image from the NASA/ESA Hubble Space Telescope shows part of the sky in the constellation of Canes Venatici (The Hunting Dogs).  Although this region of the sky is not home to any stellar heavyweights, being mostly filled with stars of average brightness, it does contain five Messier objects and numerous intriguing galaxies — including NGC 5195, a small barred spiral galaxy considered to be one of the most beautiful galaxies visible, and its nearby interacting partner the Whirlpool Galaxy (heic0506a). The quirky Sunflower Galaxy is another notable galaxy in this constellation, and is one of the largest and brightest edge-on galaxies in our skies.  Joining this host of characters is spiral galaxy NGC 4244, nicknamed the Silver Needle Galaxy, shown in this new image from Hubble. This galaxy spans some 65,000 light-years and lies around 13.5 million light-years away. It appears as a wafer-thin streak across the sky, with loosely wound spiral arms hidden from view as we observe the galaxy from the side. It is part of a group of galaxies known as the M94 Group.   Numerous bright clumps of gas can be seen scattered across its length, along with dark dust lanes surrounding the galaxy’s core. NGC 4244 also has a bright star cluster at its center. Although we can make out the galaxy’s bright central region and star-spattered arms, we cannot see any more intricate structure due to the galaxy’s position; from Earth, we see it stretched out as a flattened streak across the sky. A number of different observations were pieced together to form this mosaic, and gaps in Hubble’s coverage have been filled in using ground-based data. The Hubble observations were taken as part of the Galaxy Halos, Outer disks, Substructure, Thick disks and Star clusters (GHOSTS) survey, which is scanning nearby galaxies to explore how they and their stars formed to get a more complete view of the history of the Universe.   European Space Agency Credit: NASA &amp; ESA, Acknowledgement: Roelof de Jong  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Sees a Silver Needle in the Sky"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001014","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001014/GSFC_20171208_Archive_e001014~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002076/collection.json","data":[{"title":"Hubble Captures Spectacular \"Landscape\" in the Carina Nebula","album":"Test","media_type":"image","description":"NASA image release April 22, 2010  NASA's Hubble Space Telescope captured this billowing cloud of cold interstellar gas and dust rising from a tempestuous stellar nursery located in the Carina Nebula, 7,500 light-years away in the southern constellation Carina. This pillar of dust and gas serves as an incubator for new stars and is teeming with new star-forming activity. Hot, young stars erode and sculpt the clouds into this fantasy landscape by sending out thick stellar winds and scorching ultraviolet radiation. The low-density regions of the nebula are shredded while the denser parts resist erosion and remain as thick pillars. In the dark, cold interiors of these columns new stars continue to form. In the process of star formation, a disk around the proto-star slowly accretes onto the star's surface. Part of the material is ejected along jets perpendicular to the accretion disk. The jets have speeds of several hundreds of miles per second. As these jets plow into the surround nebula, they create small, glowing patches of nebulosity, called Herbig-Haro (HH) objects.  Long streamers of gas can be seen shooting in opposite directions off the pedestal on the upper right-hand side of the image. Another pair of jets is visible in a peak near the top-center of the image. These jets (known as HH 901 and HH 902, respectively) are common signatures of the births of new stars. This image celebrates the 20th anniversary of Hubble's launch and deployment into an orbit around Earth. Hubble's Wide Field Camera 3 observed the pillar on Feb. 1-2, 2010. The colors in this composite image correspond to the glow of oxygen (blue), hydrogen and nitrogen (green), and sulfur (red). Object Names: HH 901, HH 902 Image Type: Astronomical  Credit: NASA, ESA, and M. Livio and the Hubble 20th Anniversary Team (STScI)  To read learn more about this image go to:  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble20th-img.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble20th-img....</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","keywords":["Hubble Captures Spectacular \"Landscape\" in the Carina Nebula","space","nasa","hubble","hubblespacetelescope","goddardspaceflightcenter","hubble20thanniversary","hubble20years"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002076","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002076/GSFC_20171208_Archive_e002076~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000995/collection.json","data":[{"title":"Hubble Sees Spiral in Serpens","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000995","keywords":["Hubble Sees Spiral in Serpens","space","nasa","galaxy","esa","darkmatter","hubble","pgc54493"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This new NASA/ESA Hubble Space Telescope image shows a beautiful spiral galaxy known as PGC 54493, located in the constellation of Serpens (The Serpent). This galaxy is part of a galaxy cluster that has been studied by astronomers exploring an intriguing phenomenon known as weak gravitational lensing.  This effect, caused by the uneven distribution of matter (including dark matter) throughout the Universe, has been explored via surveys such as the Hubble Medium Deep Survey. Dark matter is one of the great mysteries in cosmology. It behaves very differently from ordinary matter as it does not emit or absorb light or other forms of electromagnetic energy — hence the term &quot;dark.&quot;  Even though we cannot observe dark matter directly, we know it exists. One prominent piece of evidence for the existence of this mysterious matter is known as the &quot;galaxy rotation problem.&quot; Galaxies rotate at such speeds and in such a way that ordinary matter alone — the stuff we see — would not be able to hold them together. The amount of mass that is &quot;missing&quot; visibly is dark matter, which is thought to make up some 27 percent of the total contents of the Universe, with dark energy and normal matter making up the rest. PGC 55493 has been studied in connection with an effect known as cosmic shearing. This is a weak gravitational lensing effect that creates tiny distortions in images of distant galaxies.   European Space Agency ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000995/GSFC_20171208_Archive_e000995~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002173/collection.json","data":[{"title":"Hubble Sees Stars and a Stripe in Celestial Fireworks","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e002173","keywords":["Hubble Sees Stars and a Stripe in Celestial Fireworks","space","nasa","telescope","galaxy","goddard","hubble","hubblespacetelescope","goddardspaceflightcenter"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"Release date: July 1, 2008  SN 1006 Supernova Remnant (Hubble)  A delicate ribbon of gas floats eerily in our galaxy. A contrail from an alien spaceship? A jet from a black-hole? Actually this image, taken by NASA's Hubble Space Telescope, is a very thin section of a supernova remnant caused by a stellar explosion that occurred more than 1,000 years ago.  On or around May 1, 1006 A.D., observers from Africa to Europe to the Far East witnessed and recorded the arrival of light from what is now called SN 1006, a tremendous supernova explosion caused by the final death throes of a white dwarf star nearly 7,000 light-years away. The supernova was probably the brightest star ever seen by humans, and surpassed Venus as the brightest object in the night time sky, only to be surpassed by the moon. It was visible even during the day for weeks, and remained visible to the naked eye for at least two and a half years before fading away.  It wasn't until the mid-1960s that radio astronomers first detected a nearly circular ring of material at the recorded position of the supernova. The ring was almost 30 arcminutes across, the same angular diameter as the full moon. The size of the remnant implied that the blast wave from the supernova had expanded at nearly 20 million miles per hour over the nearly 1,000 years since the explosion occurred. In 1976, the first detection of exceedingly faint optical emission of the supernova remnant was reported, but only for a filament located on the northwest edge of the radio ring. A tiny portion of this filament is revealed in detail by the Hubble observation. The twisting ribbon of light seen by Hubble corresponds to locations where the expanding blast wave from the supernova is now sweeping into very tenuous surrounding gas.  The hydrogen gas heated by this fast shock wave emits radiation in visible light. Hence, the optical emission provides astronomers with a detailed &quot;snapshot&quot; of the actual position and geometry of the shock front at any given time. Bright edges within the ribbon correspond to places where the shock wave is seen exactly edge on to our line of sight. Today we know that SN 1006 has a diameter of nearly 60 light-years, and it is still expanding at roughly 6 million miles per hour. Even at this tremendous speed, however, it takes observations typically separated by years to see significant outward motion of the shock wave against the grid of background stars. In the Hubble image as displayed, the supernova would have occurred far off the lower right corner of the image, and the motion would be toward the upper left.  SN 1006 resides within our Milky Way Galaxy. Located more than 14 degrees off the plane of the galaxy's disk, there is relatively little confusion with other foreground and background objects in the field when trying to study this object. In the Hubble image, many background galaxies (orange extended objects) far off in the distant universe can be seen dotting the image. Most of the white dots are foreground or background stars in our Milky Way galaxy.  This image is a composite of hydrogen-light observations taken with Hubble's Advanced Camera for Surveys in February 2006 and Wide Field Planetary Camera 2 observations in blue, yellow-green, and near-infrared light taken in April 2008. The supernova remnant, visible only in the hydrogen-light filter was assigned a red hue in the Heritage color image.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: W. Blair (Johns Hopkins University)  To learn more about the Hubble Space Telescope go here:  <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002173/GSFC_20171208_Archive_e002173~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000052/collection.json","data":[{"title":"Hubble Catches a Galaxy Duo by the \"Hare\"","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000052","keywords":["Hubble Catches a Galaxy Duo by the \"Hare\"","iras060762139"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"This image from the NASA/ESA Hubble Space Telescope shows the unusual galaxy IRAS 06076-2139, found in the constellation Lepus (The Hare). Hubble’s Wide Field Camera 3 (WFC3) and Advanced Camera for Surveys (ACS) instruments observed the galaxy from a distance of 500 million light-years.  This particular object stands out from the crowd by actually being composed of two separate galaxies rushing past each other at about 2 million kilometers (1,243,000 miles) per hour. This speed is most likely too fast for them to merge and form a single galaxy. However, because of their small separation of only about 20,000 light-years, the galaxies will distort one another through the force of gravity while passing each other, changing their structures on a grand scale.  Such galactic interactions are a common sight for Hubble, and have long been a field of study for astronomers. The intriguing behaviors of interacting galaxies take many forms; galactic cannibalism, galaxy harassment and even galaxy collisions. The Milky Way itself will eventually fall victim to the latter, merging with the Andromeda Galaxy in about 4.5 billion years. The fate of our galaxy shouldn’t be alarming though: while galaxies are populated by billions of stars, the distances between individual stars are so large that hardly any stellar collisions will occur.  Credit: ESA/Hubble &amp; NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000052/GSFC_20171208_Archive_e000052~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001979/collection.json","data":[{"title":"Hubble Sees Pinwheel of Star Birth","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001979","keywords":["Hubble Sees Pinwheel of Star Birth","hubble","hst","nasa","universe","galaxy","spiralgalaxy","space","star","goddardspaceflightcenter"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"NASA image release October 19, 2010  Though the universe is chock full of spiral-shaped galaxies, no two look exactly the same. This face-on spiral galaxy, called NGC 3982, is striking for its rich tapestry of star birth, along with its winding arms. The arms are lined with pink star-forming regions of glowing hydrogen, newborn blue star clusters, and obscuring dust lanes that provide the raw material for future generations of stars. The bright nucleus is home to an older population of stars, which grow ever more densely packed toward the center.  NGC 3982 is located about 68 million light-years away in the constellation Ursa Major. The galaxy spans about 30,000 light-years, one-third of the size of our Milky Way galaxy. This color image is composed of exposures taken by the Hubble Space Telescope's Wide Field Planetary Camera 2 (WFPC2), the Advanced Camera for Surveys (ACS), and the Wide Field Camera 3 (WFC3). The observations were taken between March 2000 and August 2009. The rich color range comes from the fact that the galaxy was photographed invisible and near-infrared light. Also used was a filter that isolates hydrogen emission that emanates from bright star-forming regions dotting the spiral arms.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc. in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: A. Riess (STScI)  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001979/GSFC_20171208_Archive_e001979~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000154/collection.json","data":[{"title":"Hubble Spotlight on Irregular Galaxy","album":"Test","media_type":"image","description":"This delicate blue group of stars — actually an irregular galaxy named IC 3583 — sits some 30 million light-years away in the constellation of Virgo (The Virgin).  It may seem to have no discernable structure, but IC 3583 has been found to have a bar of stars running through its center. These structures are common throughout the Universe, and are found within the majority of spiral, many irregular, and some lenticular galaxies. Two of our closest cosmic neighbors, the Large and Small Magellanic Clouds, are barred, indicating that they may have once been barred spiral galaxies that were disrupted or torn apart by the gravitational pull of the Milky Way.  Researchers at the University of Leicester, England note there are two types of irregular galaxy. Type I's are usually single galaxies of peculiar appearance. They contain a large fraction of young stars, and show the luminous nebulae that are also visible in spiral galaxies. Type II irregulars include the group known as interacting or disrupting galaxies, in which the strange appearance is due to two or more galaxies colliding, merging or otherwise interacting gravitationally.  Something similar might be happening with IC 3583. This small galaxy is thought to be gravitationally interacting with one of its neighbors, the spiral Messier 90. Together, the duo form a pairing known as Arp 76. It’s still unclear whether these flirtations are the cause of IC 3583’s irregular appearance — but whatever the cause, the galaxy makes for a strikingly delicate sight in this NASA/ESA Hubble Space Telescope image, glimmering in the blackness of space.  Image Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","keywords":["Hubble Spotlight on Irregular Galaxy","ic3583"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000154","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000154/GSFC_20171208_Archive_e000154~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000275/collection.json","data":[{"title":"Hubble Hotbed of Vigorous Star Formation","album":"Test","media_type":"image","description":"This galaxy is currently a hotbed of vigorous star formation. NGC 1569 is a starburst galaxy, meaning that — as the name suggests — it is bursting at the seams with stars, and is currently producing them at a rate far higher than that observed in most other galaxies. For almost 100 million years, NGC 1569 has pumped out stars more than 100 times faster than the Milky Way!  As a result, this glittering galaxy is home to super star clusters, three of which are visible in this image — one of the two bright clusters is actually the superposition of two massive clusters. Each containing more than a million stars, these brilliant blue clusters reside within a large cavity of gas carved out by multiple supernovae, the energetic remnants of massive stars.  In 2008, Hubble observed the galaxy's cluttered core and sparsely populated outer fringes. By pinpointing individual red giant stars, Hubble’s Advanced Camera for Surveys enabled astronomers to calculate a new — and much more precise — estimate for NGC 1569’s distance. This revealed that the galaxy is actually one and a half times farther away than previously thought, and a member of the IC 342 galaxy group.  Astronomers suspect that the IC 342 cosmic congregation is responsible for the star-forming frenzy observed in NGC 1569. Gravitational interactions between this galactic group are believed to be compressing the gas within NGC 1569. As it is compressed, the gas collapses, heats up and forms new stars.  Image credit: ESA/Hubble &amp; NASA, Aloisi, Ford; Acknowledgement: Judy Schmidt ","keywords":["Hubble Hotbed of Vigorous Star Formation","ngc1569"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000275","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000275/GSFC_20171208_Archive_e000275~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000492/collection.json","data":[{"title":"Hubble Views Two Galaxies Merging","album":"Test","media_type":"image","description":"This image, taken with the Wide Field Planetary Camera 2 on board the NASA/ESA Hubble Space Telescope, shows the galaxy NGC 6052, located around 230 million light-years away in the constellation of Hercules.  It would be reasonable to think of this as a single abnormal galaxy, and it was originally classified as such. However, it is in fact a “new” galaxy in the process of forming. Two separate galaxies have been gradually drawn together, attracted by gravity, and have collided. We now see them merging into a single structure.  As the merging process continues, individual stars are thrown out of their original orbits and placed onto entirely new paths, some very distant from the region of the collision itself. Since the stars produce the light we see, the “galaxy” now appears to have a highly chaotic shape. Eventually, this new galaxy will settle down into a stable shape, which may not resemble either of the two original galaxies.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt ","keywords":["Hubble Views Two Galaxies Merging","ngc6052"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000492","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000492/GSFC_20171208_Archive_e000492~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000941/collection.json","data":[{"title":"Hubble's View of Comet Siding Spring","album":"Test","media_type":"image","nasa_id":"GSFC_20171208_Archive_e000941","keywords":["Hubble's View of Comet Siding Spring","mars","space","nasa","hubble","nasagoddard","cometsidingspring"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","description":"MARCH 27, 2014: Comet Siding Spring is plunging toward the Sun along a roughly 1-million-year orbit. The comet, discovered in 2013, was within the radius of Jupiter's orbit when the Hubble Space Telescope photographed it on March 11, 2014. Hubble resolves two jets of dust coming from the solid icy nucleus. These persistent jets were first seen in Hubble pictures taken on Oct. 29, 2013. The feature should allow astronomers to measure the direction of the nucleus's pole, and hence, rotation axis. The comet will make its closest approach to our Sun on Oct. 25, 2014, at a distance of 130 million miles, well outside Earth's orbit. On its inbound leg, Comet Siding Spring will pass within 84,000 miles of Mars on Oct. 19, 2014, which is less than half the Moon's distance from Earth. The comet is not expected to become bright enough to be seen by the naked eye.  Credit: NASA, ESA, and J.-Y. Li (Planetary Science Institute)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000941/GSFC_20171208_Archive_e000941~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000798/collection.json","data":[{"title":"Hubble Spies a Loopy Galaxy","date_created":"2015-02-02T18:38:12Z","media_type":"image","description":"This NASA Hubble Space Telescope photo of NGC 7714 presents an especially striking view of the galaxy's smoke-ring-like structure. The golden loop is made of sun-like stars that have been pulled deep into space, far from the galaxy's center. The galaxy is located approximately 100 million light-years from Earth in the direction of the constellation Pisces.  The universe is full of such galaxies that are gravitationally stretched and pulled and otherwise distorted in gravitational tug-o'-wars with bypassing galaxies.  The companion galaxy doing the &quot;taffy pulling&quot; in this case, NGC 7715, lies just out of the field of view in this image. A very faint bridge of stars extends to the unseen companion. The close encounter has compressed interstellar gas to trigger bursts of star formation seen in bright blue arcs extending around NGC 7714's center.  The gravitational disruption of NGC 7714 began between 100 million and 200 million years ago, at the epoch when dinosaurs ruled the Earth.  The image was taken with the Wide Field Camera 3 and the Advanced Camera for Surveys in October 2011.  Credit: NASA and ESA. Acknowledgment: A. Gal-Yam (Weizmann Institute of Science)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Spies a Loopy Galaxy"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000798","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000798/GSFC_20171208_Archive_e000798~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002039/collection.json","data":[{"title":"Hubble Captures Bubbles And Baby Stars","album":"Test","media_type":"image","description":"Image release June 22, 2010  A spectacular new NASA/ESA Hubble Space Telescope image — one of the largest ever released of a star-forming region — highlights N11, part of a complex network of gas clouds and star clusters within our neighbouring galaxy, the Large Magellanic Cloud. This region of energetic star formation is one of the most active in the nearby Universe.  The Large Magellanic Cloud contains many bright bubbles of glowing gas. One of the largest and most spectacular has the name LHA 120-N 11, from its listing in a catalogue compiled by the American astronomer and astronaut Karl Henize in 1956, and is informally known as N11. Close up, the billowing pink clouds of glowing gas make N11 resemble a puffy swirl of fairground candy floss. From further away, its distinctive overall shape led some observers to nickname it the Bean Nebula. The dramatic and colourful features visible in the nebula are the telltale signs of star formation. N11 is a well-studied region that extends over 1000 light-years. It is the second largest star-forming region within the Large Magellanic Cloud and has produced some of the most massive stars known.    It is the process of star formation that gives N11 its distinctive look. Three successive generations of stars, each of which formed further away from the centre of the nebula than the last, have created shells of gas and dust. These shells were blown away from the newborn stars in the turmoil of their energetic birth and early life, creating the ring shapes so prominent in this image.  Beans are not the only terrestrial shapes to be found in this spectacular high resolution image from the NASA/ESA Hubble Space Telescope. In the upper left is the red bloom of nebula LHA 120-N 11A. Its rose-like petals of gas and dust are illuminated from within, thanks to the radiation from the massive hot stars at its centre. N11A is relatively compact and dense and is the site of the most recent burst of star development in the region.  Other star clusters abound in N11, including NGC 1761 at the bottom of the image, which is a group of massive hot young stars busily pouring intense ultraviolet radiation out into space. Although it is much smaller than our own galaxy, the Large Magellanic Cloud is a very vigorous region of star formation. Studying these stellar nurseries helps astronomers understand a lot more about how stars are born and their ultimate development and lifespan.  Both the Large Magellanic Cloud and its small companion, the Small Magellanic Cloud, are easily seen with the unaided eye and have always been familiar to people living in the southern hemisphere. The credit for bringing these galaxies to the attention of Europeans is usually given to Portuguese explorer Fernando de Magellan and his crew, who viewed it on their 1519 sea voyage. However, the Persian astronomer Abd Al-Rahman Al Sufi and the Italian explorer Amerigo Vespucci recorded the Large Magellanic Cloud in 964 and 1503 respectively.  Credit: NASA, ESA and Jesús Maíz Apellániz (Instituto de Astrofísica de Andalucía, Spain)  To learn more about Hubble go to: <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","keywords":["Hubble Captures Bubbles And Baby Stars","star","satellite","nasa","nebula","hubble","lightyears","hubblespacetelescope","n11","goddardspaceflightcenter","starformation"],"date_created":"2017-12-08T00:00:00Z","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002039","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002039/GSFC_20171208_Archive_e002039~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001260/collection.json","data":[{"title":"Hubble Sees a Star Set to Explode","date_created":"2014-01-10T17:02:00Z","media_type":"image","description":"Floating at the center of this new Hubble image is a lidless purple eye, staring back at us through space. This ethereal object, known officially as [SBW2007] 1 but sometimes nicknamed SBW1, is a nebula with a giant star at its center. The star was originally twenty times more massive than our sun, and is now encased in a swirling ring of purple gas, the remains of the distant era when it cast off its outer layers via violent pulsations and winds. But the star is not just any star; scientists say that it is destined to go supernova. Twenty-six years ago, another star with striking similarities went supernova — SN 1987A. Early Hubble images of SN 1987A show eerie similarities to SBW1. Both stars had identical rings of the same size and age, which were travelling at similar speeds; both were located in similar HII regions; and they had the same brightness. In this way SBW1 is a snapshot of SN1987a's appearance before it exploded, and unsurprisingly, astronomers love studying them together. At a distance of more than 20 000 light-years it will be safe to watch when the supernova goes off. If we are very lucky it may happen in our own lifetimes.  Credit: ESA/NASA, acknowledgement: Nick Rose  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Sees a Star Set to Explode"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001260","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001260/GSFC_20171208_Archive_e001260~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001292/collection.json","data":[{"title":"Hubble Sees a Bizarre Cosmic Rarity","date_created":"2013-12-06T20:55:54Z","media_type":"image","nasa_id":"GSFC_20171208_Archive_e001292","keywords":["Hubble Sees a Bizarre Cosmic Rarity"],"location":"Greenbelt, MD","description":"This new Hubble image shows a peculiar galaxy known as NGC 660, located around 45 million light-years away from us.  NGC 660 is classified as a &quot;polar ring galaxy,&quot; meaning that it has a belt of gas and stars around its center that it ripped from a near neighbor during a clash about one billion years ago.The first polar ring galaxy was observed in 1978 and only around a dozen more have been discovered since then, making them something of a cosmic rarity.  Unfortunately, NGC 660’s polar ring cannot be seen in this image, but the image has plenty of other features that make it of interest to astronomers – its central bulge is strangely off-kilter and, perhaps more intriguingly, it is thought to harbor exceptionally large amounts of dark matter. In addition, in late 2012 astronomers observed a massive outburst emanating from NGC 660 that was around ten times as bright as a supernova explosion. This burst was thought to be caused by a massive jet shooting out of the supermassive black hole at the center of the galaxy.   Credit: Hubble/NASA/European Space Agency  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001292/GSFC_20171208_Archive_e001292~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001165/collection.json","data":[{"title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","date_created":"2014-03-06T17:01:08Z","media_type":"image","description":"This series of images shows the asteroid P/2013 R3 breaking apart, as viewed by the NASA/ESA Hubble Space Telescope in 2013. This is the first time that such a body has been seen to undergo this kind of break-up.  The Hubble observations showed that there are ten distinct objects, each with comet-like dust tails, embedded within the asteroid's dusty envelope. The four largest rocky fragments are up to 200 metres in radius, about twice the length of a football pitch.  The date increases from left to right, with frames from 29 October 2013, 15 November 2013, 13 December 2013, and 14 January 2014 respectively, showing how the clumps of debris material move around. The 14 January 2014 frame was not included in the science paper and is additional data.  Credit: NASA, ESA, D. Jewitt (UCLA)  Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001165","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001165/GSFC_20171208_Archive_e001165~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001166/collection.json","data":[{"title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","date_created":"2014-03-06T17:01:08Z","media_type":"image","description":"Though fragile comet nuclei have been seen falling apart as they near the Sun, nothing like the slow breakup of an asteroid has ever before been observed in the asteroid belt. A series of Hubble Space Telescope images shows that the fragments are drifting away from each other at a leisurely one mile per hour. This makes it unlikely that the asteroid is disintegrating because of a collision with another asteroid. A plausible explanation is that the asteroid is crumbling due to a subtle effect of sunlight. This causes the rotation rate to slowly increase until centrifugal force pulls the asteroid apart. The asteroid's remnant debris, weighing in at 200,000 tons, will in the future provide a rich source of meteoroids.  Hubble Observation of P/2013 R3 - November 15, 2013  Credit: NASA, ESA, and D. Jewitt (University of California, Los Angeles)   Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001166","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001166/GSFC_20171208_Archive_e001166~thumb.jpg","rel":"preview"}]},{"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001167/collection.json","data":[{"title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","date_created":"2014-03-06T17:01:07Z","media_type":"image","description":"Though fragile comet nuclei have been seen falling apart as they near the Sun, nothing like the slow breakup of an asteroid has ever before been observed in the asteroid belt. A series of Hubble Space Telescope images shows that the fragments are drifting away from each other at a leisurely one mile per hour. This makes it unlikely that the asteroid is disintegrating because of a collision with another asteroid. A plausible explanation is that the asteroid is crumbling due to a subtle effect of sunlight. This causes the rotation rate to slowly increase until centrifugal force pulls the asteroid apart. The asteroid's remnant debris, weighing in at 200,000 tons, will in the future provide a rich source of meteoroids.  Hubble Observation of P/2013 R3 - November 15, 2013  Credit: NASA, ESA, and D. Jewitt (University of California, Los Angeles)   Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001167","center":"GSFC"}],"links":[{"render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001167/GSFC_20171208_Archive_e001167~thumb.jpg","rel":"preview"}]}],"version":"1.0","metadata":{"total_hits":436}}}
    http_version: 
  recorded_at: Tue, 26 Feb 2019 00:29:31 GMT
- request:
    method: get
    uri: https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '276432'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Origin,Content-Type,Accept,Authorization,X-Requested-With
      Access-Control-Allow-Methods:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - public, max-age=300, s-maxage=600
      Date:
      - Tue, 26 Feb 2019 00:29:31 GMT
      Server:
      - nginx/1.4.6 (Ubuntu)
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 17467161b347e9a9edf61422e33949d4.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - AJ3qYFfzTCBNErzTnlIe3zkCKBsHZfkkqcfkzCnONP9YvGlw33ipNQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"collection":{"metadata":{"total_hits":436},"version":"1.0","links":[{"rel":"next","prompt":"Next","href":"https://images-api.nasa.gov/search?q=hubble&page=2&center=GSFC&media_type=image"}],"href":"https://images-api.nasa.gov/search?center=GSFC&media_type=image&q=hubble","items":[{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-eyes-galactic-refurbishment_17322896925_o/hubble-eyes-galactic-refurbishment_17322896925_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-eyes-galactic-refurbishment_17322896925_o/collection.json","data":[{"keywords":["Hubble","galaxy","UGC 5797."],"description":"The smudge of stars at the center of this NASA/ESA Hubble Space Telescope image is a galaxy known as UGC 5797. UGC 5797 is an emission line galaxy, meaning that it is currently undergoing active star formation. The result is a stellar population that is constantly being refurbished as massive bright blue stars form. Galaxies with prolific star formation are not only veiled in a blue tint, but are key to the continuation of a stellar cycle.  In this image UGC 5797 appears in front of a background of spiral galaxies. Spiral galaxies have copious amounts of dust and gas — the main ingredient for stars — and therefore often also belong to the class of emission line galaxies.  Spiral galaxies have disk-like shapes that drastically vary in appearance depending on the angle at which they are observed. The collection of spiral galaxies in this frame exhibits this attribute acutely: Some are viewed face-on, revealing the structure of the spiral arms, while the two in the bottom left are seen edge-on, appearing as plain streaks in the sky. There are many spiral galaxies, with varying colors and at different angles, sprinkled across this image — just take a look.   Credit: ESA/Hubble & NASA, Acknowledgement: Luca Limatola","nasa_id":"hubble-eyes-galactic-refurbishment_17322896925_o","date_created":"2015-04-30T00:00:00Z","media_type":"image","title":"Hubble Eyes Galactic Refurbishment","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o/collection.json","data":[{"keywords":["Hubble","Milky Way","star"],"description":"Astronomers using NASA’s Hubble Space Telescope have uncovered surprising new clues about a hefty, rapidly aging star whose behavior has never been seen before in our Milky Way galaxy. In fact, the star is so weird that astronomers have nicknamed it “Nasty 1,” a play on its catalog name of NaSt1. The star may represent a brief transitory stage in the evolution of extremely massive stars.  First discovered several decades ago, Nasty 1 was identified as a Wolf-Rayet star, a rapidly evolving star that is much more massive than our sun. The star loses its hydrogen-filled outer layers quickly, exposing its super-hot and extremely bright helium-burning core.  But Nasty 1 doesn’t look like a typical Wolf-Rayet star. The astronomers using Hubble had expected to see twin lobes of gas flowing from opposite sides of the star, perhaps similar to those emanating from the massive star Eta Carinae, which is a Wolf-Rayet candidate.   Instead, Hubble revealed a pancake-shaped disk of gas encircling the star. The vast disk is nearly 2 trillion miles wide, and may have formed from an unseen companion star that snacked on the outer envelope of the newly formed Wolf-Rayet.  Based on current estimates, the nebula surrounding the stars is just a few thousand years old, and as close as 3,000 light-years from Earth.  Credits: NASA/Hubble","nasa_id":"hubble-observes-one-of-a-kind-star-nicknamed-nasty_17754652960_o","date_created":"2015-03-21T00:00:00Z","media_type":"image","title":"Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000741/GSFC_20171208_Archive_e000741~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000741/collection.json","data":[{"keywords":["Hubble 25"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000741","date_created":"2015-04-23T21:06:59Z","media_type":"image","title":"Hubble 25","description":"If you love Hubble as much as we do you will LOVE this video.  Sit back and enjoy 25 mesmerizing years of Hubble images!  #Hubble25  You can view all of these images on Flickr here: <a href=\"https://www.flickr.com/photos/40523828@N07/sets/72157649692430461\">www.flickr.com/photos/40523828@N07/sets/72157649692430461</a>  Credit NASA Goddard","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o/collection.json","data":[{"keywords":["Hubble","Jupiter","Aurora","Auroras"],"description":"Astronomers are using the NASA/ESA Hubble Space Telescope to study auroras — stunning light shows in a planet’s atmosphere — on the poles of the largest planet in the solar system, Jupiter. This observation program is supported by measurements made by NASA’s Juno spacecraft, currently on its way to Jupiter.  Jupiter, the largest planet in the solar system, is best known for its colorful storms, the most famous being the Great Red Spot. Now astronomers have focused on another beautiful feature of the planet, using Hubble's ultraviolet capabilities.  The extraordinary vivid glows shown in the new observations are known as auroras. They are created when high-energy particles enter a planet’s atmosphere near its magnetic poles and collide with atoms of gas. As well as producing beautiful images, this program aims to determine how various components of Jupiter’s auroras respond to different conditions in the solar wind, a stream of charged particles ejected from the sun.  This observation program is perfectly timed as NASA’s Juno spacecraft is currently in the solar wind near Jupiter and will enter the orbit of the planet in early July 2016. While Hubble is observing and measuring the auroras on Jupiter, Juno is measuring the properties of the solar wind itself; a perfect collaboration between a telescope and a space probe.  “These auroras are very dramatic and among the most active I have ever seen”, said Jonathan Nichols from the University of Leicester, U.K., and principal investigator of the study. “It almost seems as if Jupiter is throwing a firework party for the imminent arrival of Juno.”   Credits: NASA, ESA, and J. Nichols (University of Leicester)","nasa_id":"hubble-captures-vivid-auroras-in-jupiters-atmosphere_28000029525_o","date_created":"2016-06-30T00:00:00Z","media_type":"image","title":"Hubble Captures Vivid Auroras in Jupiter’s Atmosphere","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000034/GSFC_20171208_Archive_e000034~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000034/collection.json","data":[{"album":"Test","keywords":["Hubble’s Spirograph"],"description":"Hubble’s Spirograph  In this classic Hubble image from 2000, the planetary nebula IC 418 glows like a multifaceted jewel with enigmatic patterns. IC 418 lies about 2,000 light-years from Earth in the direction of the constellation Lepus.   A planetary nebula represents the final stage in the evolution of a star similar to our sun. The star at the center of IC 418 was a red giant a few thousand years ago, but then ejected its outer layers into space to form the nebula, which has now expanded to a diameter of about 0.1 light-year. The stellar remnant at the center is the hot core of the red giant, from which ultraviolet radiation floods out into the surrounding gas, causing it to fluoresce. Over the next several thousand years, the nebula will gradually disperse into space, and then the star will cool and fade away for billions of years as a white dwarf. Our own sun is expected to undergo a similar fate, but fortunately, this will not occur until some 5 billion years from now.  The Hubble image of IC 418 is shown with colors added to represent the different camera filters used that isolate light from various chemical elements. Red shows emission from ionized nitrogen (the coolest gas in the nebula, located furthest from the hot nucleus), green shows emission from hydrogen and blue traces the emission from ionized oxygen (the hottest gas, closest to the central star). The remarkable textures seen in the nebula are newly revealed by the Hubble Space Telescope, and their origin is still uncertain.   Read more: <a href=\"https://go.nasa.gov/2roofKS\" rel=\"nofollow\">go.nasa.gov/2roofKS</a>  Credit: NASA and The Hubble Heritage Team (STScI/AURA);  Acknowledgment: Dr. Raghvendra Sahai (JPL) and Dr. Arsen R. Hajian (USNO)","nasa_id":"GSFC_20171208_Archive_e000034","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble’s Spirograph","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-catches-stellar-exodus-in-action_17644845341_o/hubble-catches-stellar-exodus-in-action_17644845341_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-catches-stellar-exodus-in-action_17644845341_o/collection.json","data":[{"keywords":["Hubble","space","star","dwarf stars","dwarf star","Globular star"],"description":"Using NASA’s Hubble Space Telescope, astronomers have captured for the first time snapshots of fledging white dwarf stars beginning their slow-paced, 40-million-year migration from the crowded center of an ancient star cluster to the less populated suburbs.  White dwarfs are the burned-out relics of stars that rapidly lose mass, cool down and shut off their nuclear furnaces. As these glowing carcasses age and shed weight, their orbits begin to expand outward from the star cluster’s packed downtown. This migration is caused by a gravitational tussle among stars inside the cluster. Globular star clusters sort out stars according to their mass, governed by a gravitational billiard ball game where lower mass stars rob momentum from more massive stars. The result is that heavier stars slow down and sink to the cluster's core, while lighter stars pick up speed and move across the cluster to the edge. This process is known as \"mass segregation.\" Until these Hubble observations, astronomers had never definitively seen the dynamical conveyor belt in action.  Astronomers used Hubble to watch the white-dwarf exodus in the globular star cluster 47 Tucanae, a dense swarm of hundreds of thousands of stars in our Milky Way galaxy. The cluster resides 16,700 light-years away in the southern constellation Tucana.  Credits: NASA, ESA, and H. Richer and J. Heyl (University of British Columbia, Vancouver, Canada); acknowledgement: J. Mack (STScI) and G. Piotto (University of Padova, Italy)","nasa_id":"hubble-catches-stellar-exodus-in-action_17644845341_o","date_created":"2015-05-14T00:00:00Z","media_type":"image","title":"Hubble Catches Stellar Exodus in Action","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001840/GSFC_20171208_Archive_e001840~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001840/collection.json","data":[{"album":"Test","keywords":["Hubble's Necklace","nasa","goddard","hubble"],"description":"Image released 11 Aug 2011.  The &quot;Necklace Nebula&quot; is located 15,000 light-years away in the constellation Sagitta (the Arrow). In this composite image, taken on July 2, 2011, Hubble's Wide Field Camera 3 captured the glow of hydrogen (blue), oxygen (green), and nitrogen (red).  The object, aptly named the Necklace Nebula, is a recently discovered planetary nebula, the glowing remains of an ordinary, Sun-like star. The nebula consists of a bright ring, measuring 12 trillion miles wide, dotted with dense, bright knots of gas that resemble diamonds in a necklace.  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/necklace-nebula.html\" target=\"_blank\" rel=\"nofollow\"></a>  <b>Credit:</b> NASA, ESA, and the Hubble Heritage Team (STScI/AURA)  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://web.stagram.com/n/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001840","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble's Necklace","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o/collection.json","data":[{"keywords":["Hubble","Galaxy","Kiso 5639"],"description":"Fireworks shows are not just confined to Earth’s skies. NASA’s Hubble Space Telescope has captured a spectacular fireworks display in a small, nearby galaxy, which resembles a July 4th skyrocket.  A firestorm of star birth is lighting up one end of the diminutive galaxy Kiso 5639. The dwarf galaxy is shaped like a flattened pancake, but because it is tilted edge-on, it resembles a skyrocket, with a brilliant blazing head and a long, star-studded tail.  Kiso 5639 is a rare, nearby example of elongated galaxies that occur in abundance at larger distances, where we observe the universe during earlier epochs. Astronomers suggest that the frenzied star birth is sparked by intergalactic gas raining on one end of the galaxy as it drifts through space.  “I think Kiso 5639 is a beautiful, up-close example of what must have been common long ago,” said lead researcher Debra Elmegreen of Vassar College, in Poughkeepsie, New York. “The current thinking is that galaxies in the early universe grow from accreting gas from the surrounding neighborhood. It’s a stage that galaxies, including our Milky Way, must go through as they are growing up.”  Observations of the early universe, such as Hubble’s Ultra-Deep Field, reveal that about 10 percent of all galaxies have these elongated shapes, and are collectively called “tadpoles.” But studies of the nearby universe have turned up only a few of these unusual galaxies, including Kiso 5639. The development of the nearby star-making tadpole galaxies, however, has lagged behind that of their peers, which have spent billions of years building themselves up into many of the spiral galaxies seen today.  Elmegreen used Hubble’s Wide Field Camera 3 to conduct a detailed imaging study of Kiso 5639. The images in different filters reveal information about an object by dissecting its light into its component colors. Hubble’s crisp resolution helped Elmegreen and her team analyze the giant star-forming clumps in Kiso 5639 and determine the masses and ages of the star clusters.  The international team of researchers selected Kiso 5639 from a spectroscopic survey of 10 nearby tadpole galaxies, observed with the Grand Canary Telescope in La Palma, Spain, by Jorge Sanchez Almeida and collaborators at the Instituto de Astrofisica de Canarias. The observations revealed that in most of those galaxies, including Kiso 5639, the gas composition is not uniform.  The bright gas in the galaxy’s head contains fewer heavier elements (collectively called “metals”), such as carbon and oxygen, than the rest of the galaxy. Stars consist mainly of hydrogen and helium, but cook up other “heavier” elements. When the stars die, they release their heavy elements and enrich the surrounding gas.  “The metallicity suggests that there has to be rather pure gas, composed mostly of hydrogen, coming into the star-forming part of the galaxy, because intergalactic space contains more pristine hydrogen-rich gas,” Elmegreen explained. “Otherwise, the starburst region should be as rich in heavy elements as the rest of the galaxy.”  Hubble offers a detailed view of the galaxy’s star-making frenzy. The telescope uncovered several dozen clusters of stars in the galaxy’s star-forming head, which spans 2,700 light-years across. These clusters have an average age of less than 1 million years and masses that are three to six times larger than those in the rest of the galaxy. Other star formation is taking place throughout the galaxy but on a much smaller scale. Star clusters in the rest of the galaxy are between several million to a few billion years old.  “There is much more star formation going on in the head than what you would expect in such a tiny galaxy,” said team member Bruce Elmegreen of IBM’s Thomas J. Watson’s Research Center, in Yorktown Heights, New York. “And we think the star formation is triggered by the ongoing accretion of metal-poor gas onto a part of an otherwise quiescent dwarf galaxy.”  Hubble also revealed giant holes peppered throughout the galaxy’s starburst head. These cavities give the galaxy’s head a Swiss-cheese appearance because numerous supernova detonations – like firework aerial bursts – have carved out holes of rarified superheated gas.  The galaxy, located 82 million light-years away, has taken billions of years to develop because it has been drifting through an isolated “desert” in the universe, devoid of much gas.  What triggered the starburst in such a backwater galaxy? Based on simulations by Daniel Ceverino of the Center for Astronomy at Heidelberg University in Germany, and other team members, the observations suggest that less than 1 million years ago, Kiso 5639’s leading edge encountered a filament of gas. The filament dropped a large clump of matter onto the galaxy, stoking the vigorous star birth.  Debra Elmegreen expects that in the future other parts of the galaxy will join in the star-making fireworks show. “Galaxies rotate, and as Kiso 5639 continues to spin, another part of the galaxy may receive an infusion of new gas from this filament, instigating another round of star birth,” she said.  The team’s results have been accepted for publication in The Astrophysical Journal.  Other team members include Casiana Munoz-Tunon and Mercedes Filho (Instituto de Astrofísica de Canarias, Canary Islands), Jairo Mendez-Abreu (University of St. Andrews, United Kingdom), John Gallagher (University of Wisconsin-Madison), and Marc Rafelski (NASA's Goddard Space Flight Center, Greenbelt, Maryland).  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.","nasa_id":"hubble-reveals-stellar-fireworks-in-skyrocket-galaxy_27946907106_o","date_created":"2016-06-29T00:00:00Z","media_type":"image","title":"Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000791/GSFC_20171208_Archive_e000791~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000791/collection.json","data":[{"keywords":["Hubble Sees A Smiling Lens"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000791","date_created":"2015-02-10T16:40:13Z","media_type":"image","title":"Hubble Sees A Smiling Lens","description":"In the center of this image, taken with the NASA/ESA Hubble Space Telescope, is the galaxy cluster SDSS J1038+4849 — and it seems to be smiling.  You can make out its two orange eyes and white button nose. In the case of this “happy face”, the two eyes are very bright galaxies and the misleading smile lines are actually arcs caused by an effect known as strong gravitational lensing.  Galaxy clusters are the most massive structures in the Universe and exert such a powerful gravitational pull that they warp the spacetime around them and act as cosmic lenses which can magnify, distort and bend the light behind them. This phenomenon, crucial to many of Hubble’s discoveries, can be explained by Einstein’s theory of general relativity.  In this special case of gravitational lensing, a ring — known as an Einstein Ring — is produced from this bending of light, a consequence of the exact and symmetrical alignment of the source, lens and observer and resulting in the ring-like structure we see here.  Hubble has provided astronomers with the tools to probe these massive galaxies and model their lensing effects, allowing us to peer further into the early Universe than ever before. This object was studied by Hubble’s Wide Field and Planetary Camera 2 (WFPC2) and Wide Field Camera 3 (WFC3) as part of a survey of strong lenses.  A version of this image was entered into the Hubble’s Hidden Treasures image processing competition by contestant Judy Schmidt.  Image Credit: NASA/ESA ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000226/GSFC_20171208_Archive_e000226~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000226/collection.json","data":[{"album":"Test","keywords":["Hubble Peers into the Storm","lha120n159"],"description":"This shot from the NASA/ESA Hubble Space Telescope shows a maelstrom of glowing gas and dark dust within one of the Milky Way’s satellite galaxies, the Large Magellanic Cloud (LMC).  This stormy scene shows a stellar nursery known as N159, an HII region over 150 light-years across. N159 contains many hot young stars. These stars are emitting intense ultraviolet light, which causes nearby hydrogen gas to glow, and torrential stellar winds, which are carving out ridges, arcs, and filaments from the surrounding material.  At the heart of this cosmic cloud lies the Papillon Nebula, a butterfly-shaped region of nebulosity. This small, dense object is classified as a High-Excitation Blob, and is thought to be tightly linked to the early stages of massive star formation.  N159 is located over 160,000 light-years away. It resides just south of the Tarantula Nebula (heic1402), another massive star-forming complex within the LMC.  This image comes from Hubble’s Advanced Camera for Surveys.  The region was previously imaged by Hubble’s Wide Field Planetary Camera 2, which also resolved the Papillon Nebula for the first time.   Credit: ESA/Hubble &amp; NASA","nasa_id":"GSFC_20171208_Archive_e000226","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Peers into the Storm","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000013/GSFC_20171208_Archive_e000013~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000013/collection.json","data":[{"album":"Test","keywords":["Hubble's Cosmic Atlas","ngc4248"],"title":"Hubble's Cosmic Atlas","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000013","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Morphologies, masses, and structures - oh, my!   This beautiful clump of glowing gas, dark dust and glittering stars is the spiral galaxy NGC 4248, located about 24 million light-years away in the constellation of Canes Venatici (The Hunting Dogs).  This image was produced by the NASA/ESA Hubble Space Telescope as it embarked upon compiling the first Hubble ultraviolet “atlas,” for which the telescope targeted 50 nearby star-forming galaxies. The collection spans all kinds of different morphologies, masses, and structures. Studying this sample can help us to piece together the star-formation history of the Universe.  By exploring how massive stars form and evolve within such galaxies, astronomers can learn more about how, when, and where star formation occurs, how star clusters change over time, and how the process of forming new stars is related to the properties of both the host galaxy and the surrounding interstellar medium (the gas and dust that fills the space between individual stars).  This galaxy was imaged with observations from Hubble’s Wide Field Camera 3.  Image credit: ESA/Hubble &amp; NASA  ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002151/GSFC_20171208_Archive_e002151~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002151/collection.json","data":[{"album":"Test","keywords":["Hubble Space Telescope","shiny","space","nasa","telescope","galaxy","spaceshuttle","goddard","hubble","hst","sm4","hubblespacetelescope","spaceshuttleatlantis","goddardspaceflightcenter","sts125"],"title":"Hubble Space Telescope","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002151","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"The Hubble Space Telescope in a picture snapped by a Servicing Mission 4 crewmember just after the Space Shuttle Atlantis captured Hubble with its robotic arm on May 13, 2009, beginning the mission to upgrade and repair the telescope.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute conducts Hubble science operations.  Goddard is responsible for HST project management, including mission and science operations, servicing missions, and all associated development activities.  To learn more about the Hubble Space Telescope go here:  <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000001/GSFC_20171208_Archive_e000001~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000001/collection.json","data":[{"album":"Test","keywords":["Hubble's Megamaser Galaxy","mcg0138004","mcg0138005"],"title":"Hubble's Megamaser Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000001","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Feast your eyes on Hubble's Megamaser galaxy!   Phenomena across the Universe emit radiation spanning the entire electromagnetic spectrum — from high-energy gamma rays, which stream out from the most energetic events in the cosmos, to lower-energy microwaves and radio waves.  Microwaves, the very same radiation that can heat up your dinner, are produced by a multitude of astrophysical sources, including strong emitters known as masers (microwave lasers), even stronger emitters with the somewhat villainous name of megamasers and the centers of some galaxies. Especially intense and luminous galactic centers are known as active galactic nuclei. They are in turn thought to be driven by the presence of supermassive black holes, which drag surrounding material inwards and spit out bright jets and radiation as they do so.  The two galaxies shown here, imaged by the NASA/ESA Hubble Space Telescope, are named MCG+01-38-004 (the upper, red-tinted one) and MCG+01-38-005 (the lower, blue-tinted one). MCG+01-38-005 (also known as NGC 5765B) is a special kind of megamaser; the galaxy’s active galactic nucleus pumps out huge amounts of energy, which stimulates clouds of surrounding water. Water’s constituent atoms of hydrogen and oxygen are able to absorb some of this energy and re-emit it at specific wavelengths, one of which falls within the microwave regime, invisible to Hubble but detectable by microwave telescopes. MCG+01-38-005 is thus known as a water megamaser!  Astronomers can use such objects to probe the fundamental properties of the Universe. The microwave emissions from MCG+01-38-005 were used to calculate a refined value for the Hubble constant, a measure of how fast the Universe is expanding. This constant is named after the astronomer whose observations were responsible for the discovery of the expanding Universe and after whom the Hubble Space Telescope was named, Edwin Hubble.  ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002219/GSFC_20171208_Archive_e002219~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002219/collection.json","data":[{"keywords":["Hubble On Its Way"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002219","date_created":"2009-05-21T02:44:31Z","media_type":"image","description":"This still image of the Hubble Space Telescope was captured by an STS-125 crew member as the two spacecraft continue their relative separation.  During the week five spacewalks were performed to complete the final servicing mission for the orbital observatory.  Photo credit: NASA May 19, 2009","title":"Hubble On Its Way","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000137/GSFC_20171208_Archive_e000137~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000137/collection.json","data":[{"album":"Test","keywords":["Hubble's Slice of Sagittarius"],"description":"This stunning image, captured by the NASA/ESA Hubble Space Telescope’s Advanced Camera for Surveys (ACS), shows part of the sky in the constellation of Sagittarius (The Archer). The region is rendered in exquisite detail — deep red and bright blue stars are scattered across the frame, set against a background of thousands of more distant stars and galaxies. Two features are particularly striking: the colors of the stars, and the dramatic crosses that burst from the centers of the brightest bodies.  While some of the colors in this frame have been enhanced and tweaked during the process of creating the image from the observational data, different stars do indeed glow in different colors. Stars differ in color according to their surface temperature: very hot stars are blue or white, while cooler stars are redder. They may be cooler because they are smaller, or because they are very old and have entered the red giant phase, when an old star expands and cools dramatically as its core collapses.  The crosses are nothing to do with the stars themselves, and, because Hubble orbits above Earth’s atmosphere, nor are they due to any kind of atmospheric disturbance. They are actually known as diffraction spikes, and are caused by the structure of the telescope itself.  Like all big modern telescopes, Hubble uses mirrors to capture light and form images. Its secondary mirror is supported by struts, called telescope spiders, arranged in a cross formation, and they diffract the incoming light. Diffraction is the slight bending of light as it passes near the edge of an object. Every cross in this image is due to a single set of struts within Hubble itself! Whilst the spikes are technically an inaccuracy, many astrophotographers choose to emphasize and celebrate them as a beautiful feature of their images.  Image credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000137","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble's Slice of Sagittarius","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000394/GSFC_20171208_Archive_e000394~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000394/collection.json","data":[{"album":"Test","keywords":["Hubble Sees a Legion of Galaxies","space","nasa","hubble","nasagoddard","abell2744"],"description":"Peering deep into the early universe, this picturesque parallel field observation from the NASA/ESA Hubble Space Telescope reveals thousands of colorful galaxies swimming in the inky blackness of space. A few foreground stars from our own galaxy, the Milky Way, are also visible.  In October 2013 Hubble’s Wide Field Camera 3 (WFC3) and Advanced Camera for Surveys (ACS) began observing this portion of sky as part of the Frontier Fields program. This spectacular skyscape was captured during the study of the giant galaxy cluster Abell 2744, otherwise known as Pandora’s Box. While one of Hubble’s cameras concentrated on Abell 2744, the other camera viewed this adjacent patch of sky near to the cluster.  Containing countless galaxies of various ages, shapes and sizes, this parallel field observation is nearly as deep as the Hubble Ultra-Deep Field. In addition to showcasing the stunning beauty of the deep universe in incredible detail, this parallel field — when compared to other deep fields — will help astronomers understand how similar the universe looks in different directions.  Image credit: NASA, ESA and the HST Frontier Fields team (STScI),   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000394","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Sees a Legion of Galaxies","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001757/GSFC_20171208_Archive_e001757~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001757/collection.json","data":[{"album":"Test","keywords":["Hubble Spies a UFO","space","nasa","galaxy","hubble","hst","ufogalaxy"],"title":"Hubble Spies a UFO","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001757","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"The Hubble Space Telescope has spotted a UFO — well, the UFO Galaxy, to be precise. NGC 2683 is a spiral galaxy seen almost edge-on, giving it the shape of a classic science fiction spaceship. This is why the astronomers at the Astronaut Memorial Planetarium and Observatory gave it this attention-grabbing nickname. While a bird’s eye view lets us see the detailed structure of a galaxy (such as this Hubble image of a barred spiral), a side-on view has its own perks. In particular, it gives astronomers a great opportunity to see the delicate dusty lanes of the spiral arms silhouetted against the golden haze of the galaxy’s core. In addition, brilliant clusters of young blue stars shine scattered throughout the disc, mapping the galaxy’s star-forming regions. Perhaps surprisingly, side-on views of galaxies like this one do not prevent astronomers from deducing their structures. Studies of the properties of the light coming from NGC 2683 suggest that this is a barred spiral galaxy, even though the angle we see it at does not let us see this directly. NGC 2683, discovered on 5 February 1788 by the famous astronomer William Herschel, lies in the Northern constellation of Lynx. A constellation named not because of its resemblance to the feline animal, but because it is fairly faint, requiring the “sensitive eyes of a cat” to discern it. And when you manage to get a look at it, you’ll find treasures like this, making it well worth the effort. This image is produced from two adjacent fields observed in visible and infrared light by Hubble’s Advanced Camera for Surveys. A narrow strip which appears slightly blurred and crosses most the image horizontally is a result of a gap between Hubble’s detectors. This strip has been patched using images from observations of the galaxy made by ground-based telescopes, which show significantly less detail. The field of view is approximately 6.5 by 3.3 arcminutes.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000990/GSFC_20171208_Archive_e000990~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000990/collection.json","data":[{"keywords":["Hubble Paints a Spattering of Blue"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000990","date_created":"2014-09-12T15:45:08Z","media_type":"image","title":"Hubble Paints a Spattering of Blue","description":"Far beyond the stars in the constellation of Leo (The Lion) is irregular galaxy IC 559.  IC 559 is not your everyday galaxy. With its irregular shape and bright blue spattering of stars, it is a fascinating galactic anomaly. It may look like sparse cloud, but it is in fact full of gas and dust which is spawning new stars.  Discovered in 1893, IC 559 lacks the symmetrical spiral appearance of some of its galactic peers and not does not conform to a regular shape. It is actually classified as a “type Sm” galaxy — an irregular galaxy with some evidence for a spiral structure.  Irregular galaxies make up about a quarter of all known galaxies and do not fall into any of the regular classes of the Hubble sequence. Most of these uniquely shaped galaxies were not always so — IC 559 may have once been a conventional spiral galaxy that was then distorted and twisted by the gravity of a nearby cosmic companion.  This image, captured by the NASA/ESA Hubble Space Telescope’s Wide Field Camera 3, combines a wide range of wavelengths spanning the ultraviolet, optical, and infrared parts of the spectrum.  Image credit: ESA/Hubble, NASA, D. Calzetti (UMass) and the LEGUS Team  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000409/GSFC_20171208_Archive_e000409~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000409/collection.json","data":[{"album":"Test","keywords":["Hubble's Blue Bubble","wr31a"],"title":"Hubble's Blue Bubble","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000409","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":" A large blue bubble with a bright star in the center on a black background filled with stars  Sparkling at the center of this beautiful NASA/ESA Hubble Space Telescope image is a Wolf–Rayet star known as WR 31a, located about 30,000 light-years away in the constellation of Carina (The Keel).  The distinctive blue bubble appearing to encircle WR 31a is a Wolf–Rayet nebula — an interstellar cloud of dust, hydrogen, helium and other gases. Created when speedy stellar winds interact with the outer layers of hydrogen ejected by Wolf–Rayet stars, these nebulae are frequently ring-shaped or spherical. The bubble — estimated to have formed around 20,000 years ago — is expanding at a rate of around 220,000 kilometers (136,700 miles) per hour!  Unfortunately, the lifecycle of a Wolf–Rayet star is only a few hundred thousand years — the blink of an eye in cosmic terms. Despite beginning life with a mass at least 20 times that of the sun, Wolf–Rayet stars typically lose half their mass in less than 100,000 years. And WR 31a is no exception to this case. It will, therefore, eventually end its life as a spectacular supernova, and the stellar material expelled from its explosion will later nourish a new generation of stars and planets.  Image credi: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001152/GSFC_20171208_Archive_e001152~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001152/collection.json","data":[{"keywords":["Hubble’s cross-section of the cosmos"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001152","date_created":"2014-04-17T14:19:38Z","media_type":"image","description":"This new Hubble image showcases a remarkable variety of objects at different distances from us, extending back over halfway to the edge of the observable Universe. The galaxies in this image mostly lie about five billion light-years from Earth but the field also contains other objects, both significantly closer and far more distant.  Studies of this region of the sky have shown that many of the objects that appear to lie close together may actually be billions of light-years apart. This is because several groups of galaxies lie along our line of sight, creating something of an optical illusion. Hubble’s cross-section of the Universe is completed by distorted images of galaxies in the very distant background.  These objects are sometimes distorted due to a process called gravitational lensing, an extremely valuable technique in astronomy for studying very distant objects [1]. This lensing is caused by the bending of the space-time continuum by massive galaxies lying close to our line of sight to distant objects.  One of the lens systems visible here is called CLASS B1608+656, which appears as a small loop in the centre of the image. It features two foreground galaxies distorting and amplifying the light of a distant quasar the known as QSO-160913+653228. The light from this bright disc of matter, which is currently falling into a black hole, has taken nine billion years to reach us — two thirds of the age of the Universe.  As well as CLASS B1608+656, astronomers have identified two other gravitational lenses within this image. Two galaxies, dubbed Fred and Ginger by the researchers who studied them, contain enough mass to visibly distort the light from objects behind them. Fred, also known more prosaically as [FMK2006] ACS J160919+6532, lies near the lens galaxies in CLASS B1608+656, while Ginger ([FMK2006] ACS J160910+6532) is markedly closer to us. Despite their different distances from us, both can be seen near to CLASS B1608+656 in the central region of this Hubble image.  To capture distant and dim objects like these, Hubble required a long exposure. The image is made up of visible and infrared observations with a total exposure time of 14 hours.  More info: <a href=\"http://www.spacetelescope.org/news/heic1408/\" rel=\"nofollow\">www.spacetelescope.org/news/heic1408/</a>  Credit: NASA/ESA/Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","title":"Hubble’s cross-section of the cosmos","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001963/GSFC_20171208_Archive_e001963~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001963/collection.json","data":[{"album":"Test","keywords":["Hubble Captures Cosmic Ice Sculptures","space","nasa","hubble"],"title":"Hubble Captures Cosmic Ice Sculptures","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001963","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"NASA image release September 16, 2010  Enjoying a frozen treat on a hot summer day can leave a sticky mess as it melts in the Sun and deforms. In the cold vacuum of space, there is no edible ice cream, but there is radiation from massive stars that is carving away at cold molecular clouds, creating bizarre, fantasy-like structures.  These one-light-year-tall pillars of cold hydrogen and dust, imaged by the Hubble Space Telescope, are located in the Carina Nebula. Violent stellar winds and powerful radiation from massive stars are sculpting the surrounding nebula. Inside the dense structures, new stars may be born.  This image of dust pillars in the Carina Nebula is a composite of 2005 observations taken of the region in hydrogen light (light emitted by hydrogen atoms) along with 2010 observations taken in oxygen light (light emitted by oxygen atoms), both times with Hubble's Advanced Camera for Surveys. The immense Carina Nebula is an estimated 7,500 light-years away in the southern constellation Carina.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc. in Washington, D.C.  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001538/GSFC_20171208_Archive_e001538~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001538/collection.json","data":[{"album":"Test","keywords":["Hubble Nabs Space Invaders?","space","spaceinvaders","nasa","hubble"],"description":"The gravitational field surrounding this massive cluster of galaxies, Abell 68, acts as a natural lens in space to brighten and magnify the light coming from very distant background galaxies.  Like a fun house mirror, lensing creates a fantasy landscape of arc-like images and mirror images of background galaxies. The foreground cluster is 2 billion light-years away, and the lensed images come from galaxies far behind it.  In this photo, the image of a spiral galaxy at upper left has been stretched and mirrored into a shape similar to that of a simulated alien from the classic 1970s computer game &quot;Space Invaders!&quot; A second, less distorted image of the same galaxy appears to the left of the large, bright elliptical galaxy.  In the upper right of the photo is another striking feature of the image that is unrelated to gravitational lensing. What appears to be purple liquid dripping from a galaxy is a phenomenon called ram-pressure stripping. The gas clouds within the galaxy are being stripped out and heated up as the galaxy passes through a region of denser intergalactic gas.  This image was taken in infrared light by Hubble’s Wide Field Camera 3, and combined with near-infrared observations from Hubble’s Advanced Camera for Surveys.  The image is based in part on data spotted by Nick Rose in the Hubble’s Hidden Treasures image processing competition.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Md., manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Md., conducts Hubble science operations. STScI is operated by the Association of Universities for Research in Astronomy, Inc., in Washington.  To read more go to: <a href=\"http://1.usa.gov/Z6uDUp\" rel=\"nofollow\">1.usa.gov/Z6uDUp</a>  Credit: NASA and ESA Acknowledgement: N. Rose  For image files and more information about Abell 68, visit:  <a href=\"http://hubblesite.org/news/2013/09\" rel=\"nofollow\">hubblesite.org/news/2013/09</a> <a href=\"http://www.spacetelescope.org/news/heic04\" rel=\"nofollow\">www.spacetelescope.org/news/heic04</a> <a href=\"http://heritage.stsci.edu/2013/09\" rel=\"nofollow\">heritage.stsci.edu/2013/09</a> <a href=\"http://www.spacetelescope.org/projects/hiddentreasures/\" rel=\"nofollow\">www.spacetelescope.org/projects/hiddentreasures/</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001538","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Nabs Space Invaders?","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001539/GSFC_20171208_Archive_e001539~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001539/collection.json","data":[{"album":"Test","keywords":["Hubble Nabs Space Invaders?","space","spaceinvaders","nasa","hubble"],"title":"Hubble Nabs Space Invaders?","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001539","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"The gravitational field surrounding this massive cluster of galaxies, Abell 68, acts as a natural lens in space to brighten and magnify the light coming from very distant background galaxies.  Like a fun house mirror, lensing creates a fantasy landscape of arc-like images and mirror images of background galaxies. The foreground cluster is 2 billion light-years away, and the lensed images come from galaxies far behind it.  In this photo, the image of a spiral galaxy at upper left has been stretched and mirrored into a shape similar to that of a simulated alien from the classic 1970s computer game &quot;Space Invaders!&quot; A second, less distorted image of the same galaxy appears to the left of the large, bright elliptical galaxy.  In the upper right of the photo is another striking feature of the image that is unrelated to gravitational lensing. What appears to be purple liquid dripping from a galaxy is a phenomenon called ram-pressure stripping. The gas clouds within the galaxy are being stripped out and heated up as the galaxy passes through a region of denser intergalactic gas.  This image was taken in infrared light by Hubble’s Wide Field Camera 3, and combined with near-infrared observations from Hubble’s Advanced Camera for Surveys.  The image is based in part on data spotted by Nick Rose in the Hubble’s Hidden Treasures image processing competition.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Md., manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Md., conducts Hubble science operations. STScI is operated by the Association of Universities for Research in Astronomy, Inc., in Washington.  Credit: NASA and ESA Acknowledgement: N. Rose  For image files and more information about Abell 68, visit:  <a href=\"http://hubblesite.org/news/2013/09\" rel=\"nofollow\">hubblesite.org/news/2013/09</a> <a href=\"http://www.spacetelescope.org/news/heic04\" rel=\"nofollow\">www.spacetelescope.org/news/heic04</a> <a href=\"http://heritage.stsci.edu/2013/09\" rel=\"nofollow\">heritage.stsci.edu/2013/09</a> <a href=\"http://www.spacetelescope.org/projects/hiddentreasures/\" rel=\"nofollow\">www.spacetelescope.org/projects/hiddentreasures/</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001934/GSFC_20171208_Archive_e001934~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001934/collection.json","data":[{"album":"Test","keywords":["Hubble Supernova Bubble Resembles Holiday Ornament","nasa","hubble","holidayornament","goddardspaceflightcenter"],"description":"NASA image release December 14, 2010  A delicate sphere of gas, photographed by NASA's Hubble Space Telescope, floats serenely in the depths of space. The pristine shell, or bubble, is the result of gas that is being shocked by the expanding blast wave from a supernova. Called SNR 0509-67.5 (or SNR 0509 for short), the bubble is the visible remnant of a powerful stellar explosion in the Large Magellanic Cloud (LMC), a small galaxy about 160,000 light-years from Earth.  Ripples in the shell's surface may be caused by either subtle variations in the density of the ambient interstellar gas, or possibly driven from the interior by pieces of the ejecta. The bubble-shaped shroud of gas is 23 light-years across and is expanding at more than 11 million miles per hour (5,000 kilometers per second).  Astronomers have concluded that the explosion was one of an especially energetic and bright variety of supernovae. Known as Type Ia, such supernova events are thought to result from a white dwarf star in a binary system that robs its partner of material, takes on much more mass than it is able to handle, and eventually explodes.  Hubble's Advanced Camera for Surveys observed the supernova remnant on Oct. 28, 2006 with a filter that isolates light from glowing hydrogen seen in the expanding shell. These observations were then combined with visible-light images of the surrounding star field that were imaged with Hubble's Wide Field Camera 3 on Nov. 4, 2010.  With an age of about 400 years as seen from Earth, the supernova might have been visible to southern hemisphere observers around the year 1600, however, there are no known records of a &quot;new star&quot; in the direction of the LMC near that time. A more recent supernova in the LMC, SN 1987A, did catch the eye of Earth viewers and continues to be studied with ground- and space-based telescopes, including Hubble.  For images and more information about SNR 0509, visit:  <a href=\"http://hubblesite.org/news/2010/27\" rel=\"nofollow\">hubblesite.org/news/2010/27</a> <a href=\"http://heritage.stsci.edu/2010/27\" rel=\"nofollow\">heritage.stsci.edu/2010/27</a> <a href=\"http://www.nasa.gov/hubble\" rel=\"nofollow\">www.nasa.gov/hubble</a>  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc., in Washington, D.C.  <b>Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: J. Hughes (Rutgers University)</b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","nasa_id":"GSFC_20171208_Archive_e001934","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Supernova Bubble Resembles Holiday Ornament","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-spies-big-bang-frontiers_22202541749_o/hubble-spies-big-bang-frontiers_22202541749_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-spies-big-bang-frontiers_22202541749_o/collection.json","data":[{"keywords":["MACSJ0717.5+3745"],"description":"This image from the NASA/ESA Hubble Space Telescope shows the galaxy cluster MACSJ0717.5+3745. This is one of six being studied by the Hubble Frontier Fields programme, which together have produced the deepest images of gravitational lensing ever made. Due to the huge mass of the cluster it is bending the light of background objects, acting as a magnifying lens. It is one of the most massive galaxy clusters known, and it is also the largest known gravitational lens. Of all of the galaxy clusters known and measured, MACS J0717 lenses the largest area of the sky.","nasa_id":"hubble-spies-big-bang-frontiers_22202541749_o","date_created":"2015-10-22T00:00:00Z","media_type":"image","title":"Hubble Frontier Fields view of MACSJ0717.5+3745","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002105/GSFC_20171208_Archive_e002105~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002105/collection.json","data":[{"album":"Test","keywords":["NASA's Hubble Universe in 3-D","nasa","goddard","hubble","hst","orionnebula","gsfc","goddardspaceflightcenter","hubble3d"],"title":"NASA's Hubble Universe in 3-D","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002105","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This image depicts a vast canyon of dust and gas in the Orion Nebula from a 3-D computer model based on observations by NASA's Hubble Space Telescope and created by science visualization specialists at the Space Telescope Science Institute (STScI) in Baltimore, Md. A 3-D visualization of this model takes viewers on an amazing four-minute voyage through the 15-light-year-wide canyon.  Credit: NASA, G. Bacon, L. Frattare, Z. Levay, and F. Summers (STScI/AURA)  Go here to learn more about Hubble 3D:  <a href=\"http://www.nasa.gov/topics/universe/features/hubble_imax_premiere.html\" rel=\"nofollow\">www.nasa.gov/topics/universe/features/hubble_imax_premier...</a>  or  <a href=\"http://www.imax.com/hubble/\" rel=\"nofollow\">www.imax.com/hubble/</a>  Take an exhilarating ride through the Orion Nebula, a vast star-making factory 1,500 light-years away. Swoop through Orion's giant canyon of gas and dust. Fly past behemoth stars whose brilliant light illuminates and energizes the entire cloudy region. Zoom by dusty tadpole-shaped objects that are fledgling solar systems.  This virtual space journey isn't the latest video game but one of several groundbreaking astronomy visualizations created by specialists at the Space Telescope Science Institute (STScI) in Baltimore, the science operations center for NASA's Hubble Space Telescope. The cinematic space odysseys are part of the new Imax film &quot;Hubble 3D,&quot; which opens today at select Imax theaters worldwide.  The 43-minute movie chronicles the 20-year life of Hubble and includes highlights from the May 2009 servicing mission to the Earth-orbiting observatory, with footage taken by the astronauts.  The giant-screen film showcases some of Hubble's breathtaking iconic pictures, such as the Eagle Nebula's &quot;Pillars of Creation,&quot; as well as stunning views taken by the newly installed Wide Field Camera 3.  While Hubble pictures of celestial objects are awe-inspiring, they are flat 2-D photographs. For this film, those 2-D images have been converted into 3-D environments, giving the audience the impression they are space travelers taking a tour of Hubble's most popular targets.  &quot;A large-format movie is a truly immersive experience,&quot; says Frank Summers, an STScI astronomer and science visualization specialist who led the team that developed the movie visualizations. The team labored for nine months, working on four visualization sequences that comprise about 12 minutes of the movie.  &quot;Seeing these Hubble images in 3-D, you feel like you are flying through space and not just looking at picture postcards,&quot; Summers continued. &quot;The spacescapes are all based on Hubble images and data, though some artistic license is necessary to produce the full depth of field needed for 3-D.&quot;  The most ambitious sequence is a four-minute voyage through the Orion Nebula's gas-and-dust canyon, about 15 light-years across. During the ride, viewers will see bright and dark, gaseous clouds; thousands of stars, including a grouping of bright, hefty stars called the Trapezium; and embryonic planetary systems. The tour ends with a detailed look at a young circumstellar disk, which is much like the structure from which our solar system formed 4.5 billion years ago.  Based on a Hubble image of Orion released in 2006, the visualization was a collaborative effort between science visualization specialists at STScI, including Greg Bacon, who sculpted the Orion Nebula digital model, with input from STScI astronomer Massimo Roberto; the National Center for Supercomputing Applications at the University of Illinois at Urbana-Champaign; and the Spitzer Science Center at the California Institute of Technology in Pasadena.  For some of the sequences, STScI imaging specialists developed new techniques for transforming the 2-D Hubble images into 3-D. STScI image processing specialists Lisa Frattare and Zolt Levay, for example, created methods of splitting a giant gaseous pillar in the Carina Nebula into multiple layers to produce a 3-D effect, giving the structure depth. The Carina Nebula is a nursery for baby stars.  Frattare painstakingly removed the thousands of stars in the image so that Levay could separate the gaseous layers on the isolated Carina pillar. Frattare then replaced the stars into both foreground and background layers to complete the 3-D model. For added effect, the same separation was done for both visible and infrared Hubble images, allowing the film to cross-fade between wavelength views in 3-D.  In another sequence viewers fly into a field of 170,000 stars in the giant star cluster Omega Centauri. STScI astronomer Jay Anderson used his stellar database to create a synthetic star field in 3-D that matches recent razor-sharp Hubble photos.  The film's final four-minute sequence takes viewers on a voyage from our Milky Way Galaxy past many of Hubble's best galaxy shots and deep into space. Some 15,000 galaxies from Hubble's deepest surveys stretch billions of light-years across the universe in a 3-D sequence created by STScI astronomers and visualizers. The view dissolves into a cobweb that traces the universe's large-scale structure, the backbone from which galaxies were born.  In addition to creating visualizations, STScI's education group also provided guidance on the &quot;Hubble 3D&quot; Educator Guide, which includes standards-based lesson plans and activities about Hubble and its mission. Students will use the guide before or after seeing the movie.  &quot;The guide will enhance the movie experience for students and extend the movie into classrooms,&quot; says Bonnie Eisenhamer, STScI's Hubble Formal Education manager.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency (ESA) and is managed by NASA’s Goddard Space Flight Center (GSFC) in Greenbelt, Md. The Space Telescope Science Institute (STScI) conducts Hubble science operations. The institute is operated for NASA by the Association of Universities for Research in Astronomy, Inc., Washington, D.C.","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000117/GSFC_20171208_Archive_e000117~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000117/collection.json","data":[{"album":"Test","keywords":["Hubble's Glittering Frisbee Galaxy","ngc1448"],"title":"Hubble's Glittering Frisbee Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000117","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This image from Hubble’s Wide Field Camera 3 (WFC3) shows a section of NGC 1448, a spiral galaxy located about 50 million light-years from Earth in the little-known constellation of Horologium (The Pendulum Clock). We tend to think of spiral galaxies as massive and roughly circular celestial bodies, so this glittering oval does not immediately appear to fit the visual bill. What’s going on?  Imagine a spiral galaxy as a circular frisbee spinning gently in space. When we see it face on, our observations reveal a spectacular amount of detail and structure — a great example from Hubble is the telescope’s view of Messier 51, otherwise known as the Whirlpool Galaxy. However, the NGC 1448 frisbee is very nearly edge-on with respect to Earth, giving it an appearance that is more oval than circular. The spiral arms, which curve out from NGC 1448’s dense core, can just about be seen.  Although spiral galaxies might appear static with their picturesque shapes frozen in space, this is very far from the truth. The stars in these dramatic spiral configurations are constantly moving as they orbit around the galaxy’s core, with those on the inside making the orbit faster than those sitting further out.  This makes the formation and continued existence of a spiral galaxy’s arms something of a cosmic puzzle, because the arms wrapped around the spinning core should become wound tighter and tighter as time goes on — but this is not what we see. This is known as the winding problem.  Credit: ESA/Hubble &amp; NASA #nasagoddard #space #science #Hubble #star   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000129/GSFC_20171208_Archive_e000129~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000129/collection.json","data":[{"album":"Test","keywords":["Hubble Spotlights a Celestial Sidekick","fieldstars"],"title":"Hubble Spotlights a Celestial Sidekick","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000129","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This image was captured by the NASA/ESA Hubble Space Telescope’s Advanced Camera for Surveys (ACS), a highly efficient wide-field camera covering the optical and near-infrared parts of the spectrum. While this lovely image contains hundreds of distant stars and galaxies, one vital thing is missing — the object Hubble was actually studying at the time!  This is not because the target has disappeared. The ACS actually uses two detectors: the first captures the object being studied — in this case an open star cluster known as NGC 299 — while the other detector images the patch of space just ‘beneath’ it. This is what can be seen here.  Technically, this picture is merely a sidekick of the actual object of interest — but space is bursting with activity, and this field of bright celestial bodies offers plenty of interest on its own. It may initially seem to show just stars, but a closer look reveals many of these tiny objects to be galaxies. The spiral galaxies have arms curving out from a bright center. The fuzzier, less clearly shaped galaxies might be ellipticals. Some of these galaxies contain millions or even billions of stars, but are so distant that all of their starry residents are contained within just a small pinprick of light that appears to be the same size as a single star!  The bright blue dots are very hot stars, sometimes distorted into crosses by the struts supporting Hubble’s secondary mirror. The redder dots are cooler stars, possibly in the red giant phase when a dying star cools and expands.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000423/GSFC_20171208_Archive_e000423~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000423/collection.json","data":[{"keywords":["Hubble Finds Misbehaving Spiral"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000423","date_created":"2016-01-29T14:54:28Z","media_type":"image","title":"Hubble Finds Misbehaving Spiral","description":"Despite its unassuming appearance, the edge-on spiral galaxy captured in the left half of this NASA/ESA Hubble Space Telescope image is actually quite remarkable.  Located about one billion light-years away in the constellation of Eridanus, this striking galaxy — known as LO95 0313-192 — has a spiral shape similar to that of the Milky Way. It has a large central bulge, and arms speckled with brightly glowing gas mottled by thick lanes of dark dust. Its companion, sitting in the right of the frame, is known rather unpoetically as [LOY2001] J031549.8-190623.  Jets, outbursts of superheated gas moving at close to the speed of light, have long been associated with the cores of giant elliptical galaxies, and galaxies in the process of merging. However, in an unexpected discovery, astronomers found LO95 0313-192, even though it is a spiral galaxy, to have intense radio jets spewing out from its center. The galaxy appears to have two more regions that are also strongly emitting in the radio part of the spectrum, making it even rarer still.  The discovery of these giant jets in 2003 — not visible in this image, but indicated in this earlier Hubble composite — has been followed by the unearthing of a further three spiral galaxies containing radio-emitting jets in recent years. This growing class of unusual spirals continues to raise significant questions about how jets are produced within galaxies, and how they are thrown out into the cosmos.  Image credit: ESA/Hubble &amp; NASA; acknowledgement, Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000648/GSFC_20171208_Archive_e000648~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000648/collection.json","data":[{"keywords":["Hubble Sees a \"Mess of Stars\""],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000648","date_created":"2015-08-14T18:24:03Z","media_type":"image","title":"Hubble Sees a \"Mess of Stars\"","description":"Bursts of pink and red, dark lanes of mottled cosmic dust, and a bright scattering of stars — this NASA/ESA Hubble Space Telescope image shows part of a messy barred spiral galaxy known as NGC 428. It lies approximately 48 million light-years away from Earth in the constellation of Cetus (The Sea Monster).  Although a spiral shape is still just about visible in this close-up shot, overall NGC 428’s spiral structure appears to be quite distorted and warped, thought to be a result of a collision between two galaxies. There also appears to be a substantial amount of star formation occurring within NGC 428 — another telltale sign of a merger. When galaxies collide their clouds of gas can merge, creating intense shocks and hot pockets of gas, and often triggering new waves of star formation.  NGC 428 was discovered by William Herschel in December 1786. More recently a type of supernova designated SN2013ct was discovered within the galaxy by Stuart Parker of the BOSS (Backyard Observatory Supernova Search) project in Australia and New Zealand, although it is unfortunately not visible in this image.  This image was captured by Hubble’s Advanced Camera for Surveys (ACS) and Wide Field and Planetary Camera 2 (WFPC2).    Image credit: ESA/Hubble and NASA and S. Smartt (Queen's University Belfast), Acknowledgements: Nick Rose and Flickr user pennine cloud  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001955/GSFC_20171208_Archive_e001955~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001955/collection.json","data":[{"keywords":["Hubble reveals heart of Lagoon Nebula"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001955","date_created":"2010-09-22T15:18:34Z","media_type":"image","title":"Hubble reveals heart of Lagoon Nebula","description":"Image release date September 22, 2010  To view a video of this image go here: <a href=\"http://www.flickr.com/photos/gsfc/5014452203\">www.flickr.com/photos/gsfc/5014452203</a>  Caption: A spectacular new NASA/ESA Hubble Space Telescope image reveals the heart of the Lagoon Nebula. Seen as a massive cloud of glowing dust and gas, bombarded by the energetic radiation of new stars, this placid name hides a dramatic reality.  The Advanced Camera for Surveys (ACS) on the NASA/ESA Hubble Space Telescope has captured a dramatic view of gas and dust sculpted by intense radiation from hot young stars deep in the heart of the Lagoon Nebula (Messier 8). This spectacular object is named after the wide, lagoon-shaped dust lane that crosses the glowing gas of the nebula.  This structure is prominent in wide-field images, but cannot be seen in this close-up. However the strange billowing shapes and sandy texture visible in this image make the Lagoon Nebula’s watery name eerily appropriate from this viewpoint too.  Located four to five thousand light-years away, in the constellation of Sagittarius (the Archer), Messier 8 is a huge region of star birth that stretches across one hundred light-years. Clouds of hydrogen gas are slowly collapsing to form new stars, whose bright ultraviolet rays then light up the surrounding gas in a distinctive shade of red.  The wispy tendrils and beach-like features of the nebula are not caused by the ebb and flow of tides, but rather by ultraviolet radiation’s ability to erode and disperse the gas and dust into the distinctive shapes that we see.  In recent years astronomers probing the secrets of the Lagoon Nebula have found the first unambiguous proof that star formation by accretion of matter from the gas cloud is ongoing in this region.  Young stars that are still surrounded by an accretion disc occasionally shoot out long tendrils of matter from their poles. Several examples of these jets, known as Herbig-Haro objects, have been found in this nebula in the last five years, providing strong support for astronomers’ theories about star formation in such hydrogen-rich regions.  The Lagoon Nebula is faintly visible to the naked eye on dark nights as a small patch of grey in the heart of the Milky Way. Without a telescope, the nebula looks underwhelming because human eyes are unable to distinguish clearly between colours at low light levels. Charles Messier, the 18th century French astronomer, observed the nebula and included it in his famous astronomical catalogue, from which the nebula’s alternative name comes. But his relatively small refracting telescope would only have hinted at the dramatic structures and colours now visible thanks to Hubble.  The Hubble Space Telescope is a project of international cooperation between ESA and NASA.  Image credit: NASA, ESA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>  To learn more about the Hubble Space Telescope go here: <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000615/GSFC_20171208_Archive_e000615~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000615/collection.json","data":[{"album":"Test","keywords":["Hubble Sees a Galactic Sunflower","messier63"],"title":"Hubble Sees a Galactic Sunflower","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000615","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"The arrangement of the spiral arms in the galaxy Messier 63, seen here in an image from the NASA/ESA Hubble Space Telescope, recall the pattern at the center of a sunflower. So the nickname for this cosmic object — the Sunflower Galaxy — is no coincidence.  Discovered by Pierre Mechain in 1779, the galaxy later made it as the 63rd entry into fellow French astronomer Charles Messier’s famous catalogue, published in 1781. The two astronomers spotted the Sunflower Galaxy’s glow in the small, northern constellation Canes Venatici (the Hunting Dogs). We now know this galaxy is about 27 million light-years away and belongs to the M51 Group — a group of galaxies, named after its brightest member, Messier 51, another spiral-shaped galaxy dubbed the Whirlpool Galaxy.  Galactic arms, sunflowers and whirlpools are only a few examples of nature’s apparent preference for spirals. For galaxies like Messier 63 the winding arms shine bright because of the presence of recently formed, blue–white giant stars and clusters, readily seen in this Hubble image.  Image credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000158/GSFC_20171208_Archive_e000158~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000158/collection.json","data":[{"album":"Test","keywords":["Hubble Spies Spiral Galaxy","ngc3274"],"description":"Spiral galaxy NGC 3274 is a relatively faint galaxy located over 20 million light-years away in the constellation of Leo (The Lion).  This NASA/ESA Hubble Space Telescope image comes courtesy of Hubble's Wide Field Camera 3 (WFC3), whose multi-color vision allows astronomers to study a wide range of targets, from nearby star formation to galaxies in the most remote regions of the cosmos.    This image combines observations gathered in five different filters, bringing together ultraviolet, visible and infrared light to show off NGC 3274 in all its glory.  NGC 3274 was discovered by Wilhelm Herschel in 1783. The galaxy PGC 213714 is also visible on the upper right of the frame, located much farther away from Earth.  Image Credit: ESA/Hubble &amp; NASA, D. Calzetti  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","nasa_id":"GSFC_20171208_Archive_e000158","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Spies Spiral Galaxy","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000123/GSFC_20171208_Archive_e000123~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000123/collection.json","data":[{"album":"Test","keywords":["Hubble Hones In on a Hypergiant's Home","westerlund1"],"title":"Hubble Hones In on a Hypergiant's Home","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000123","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This beautiful Hubble image reveals a young super star cluster known as Westerlund 1, only 15,000 light-years away in our Milky Way neighborhood, yet home to one of the largest stars ever discovered.  Stars are classified according to their spectral type, surface temperature, and luminosity. While studying and classifying the cluster’s constituent stars, astronomers discovered that Westerlund 1 is home to an enormous star.  Originally named Westerlund 1-26, this monster star is a red supergiant (although sometimes classified as a hypergiant) with a radius over 1,500 times that of our sun. If Westerlund 1-26 were placed where our sun is in our solar system, it would extend out beyond the orbit of Jupiter.  Most of Westerlund 1’s stars are thought to have formed in the same burst of activity, meaning that they have similar ages and compositions. The cluster is relatively young in astronomical terms —at around three million years old it is a baby compared to our own sun, which is some 4.6 billion years old.  Credit: ESA/Hubble &amp; NASA","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000017/GSFC_20171208_Archive_e000017~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000017/collection.json","data":[{"album":"Test","keywords":["Hubble’s Hunting Dog Galaxy","ngc4242"],"title":"Hubble’s Hunting Dog Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000017","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Tucked away in the small northern constellation of Canes Venatici (The Hunting Dogs) is the galaxy NGC 4242, shown here as seen by the NASA/ESA Hubble Space Telescope. The galaxy lies some 30 million light-years from us. At this distance from Earth, actually not all that far on a cosmic scale, NGC 4242 is visible to anyone armed with even a basic telescope, as British astronomer William Herschel found when he discovered the galaxy in 1788.  This image shows the galaxy’s bright center and the surrounding dimmer and more diffuse “fuzz.” Despite appearing to be relatively bright in this image, studies have found that NGC 4242 is actually relatively dim (it has a moderate-to-low surface brightness and low luminosity) and also supports a low rate of star formation. The galaxy also seems to have a weak bar of stars cutting through its asymmetric center, and a very faint and poorly-defined spiral structure throughout its disk. But if NGC 4242 is not all that remarkable, as with much of the Universe, it is still a beautiful and ethereal sight.  Credit: ESA/Hubble &amp; NASA","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000382/GSFC_20171208_Archive_e000382~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000382/collection.json","data":[{"album":"Test","keywords":["Hubble Sees a Star ‘Inflating’ a Giant Bubble","star","space","nasa","hubble","nasagoddard"],"title":"Hubble Sees a Star ‘Inflating’ a Giant Bubble","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000382","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"For the 26th birthday of NASA’s Hubble Space Telescope, astronomers are highlighting a Hubble image of an enormous bubble being blown into space by a super-hot, massive star. The Hubble image of the Bubble Nebula, or NGC 7635, was chosen to mark the 26th anniversary of the launch of Hubble into Earth orbit by the STS-31 space shuttle crew on April 24, 1990  “As Hubble makes its 26th revolution around our home star, the sun, we celebrate the event with a spectacular image of a dynamic and exciting interaction of a young star with its environment. The view of the Bubble Nebula, crafted from WFC-3 images, reminds us that Hubble gives us a front row seat to the awe inspiring universe we live in,” said John Grunsfeld, Hubble astronaut and associate administrator of NASA’s Science Mission Directorate at NASA Headquarters, in Washington, D.C.    The Bubble Nebula is seven light-years across—about one-and-a-half times the distance from our sun to its nearest stellar neighbor, Alpha Centauri, and resides 7,100 light-years from Earth in the constellation Cassiopeia.  The seething star forming this nebula is 45 times more massive than our sun. Gas on the star gets so hot that it escapes away into space as a “stellar wind” moving at over four million miles per hour. This outflow sweeps up the cold, interstellar gas in front of it, forming the outer edge of the bubble much like a snowplow piles up snow in front of it as it moves forward.  As the surface of the bubble's shell expands outward, it slams into dense regions of cold gas on one side of the bubble. This asymmetry makes the star appear dramatically off-center from the bubble, with its location in the 10 o’clock position in the Hubble view.  Dense pillars of cool hydrogen gas laced with dust appear at the upper left of the picture, and more “fingers” can be seen nearly face-on, behind the translucent bubble.  The gases heated to varying temperatures emit different colors: oxygen is hot enough to emit blue light in the bubble near the star, while the cooler pillars are yellow from the combined light of hydrogen and nitrogen. The pillars are similar to the iconic columns in the “Pillars of Creation” Eagle Nebula. As seen with the structures in the Eagle Nebula, the Bubble Nebula pillars are being illuminated by the strong ultraviolet radiation from the brilliant star inside the bubble.  The Bubble Nebula was discovered in 1787 by William Herschel, a prominent British astronomer. It is being formed by a proto-typical Wolf-Rayet star, BD +60º2522, an extremely bright, massive, and short-lived star that has lost most of its outer hydrogen and is now fusing helium into heavier elements. The star is about four million years old, and in 10 million to 20 million years, it will likely detonate as a supernova.  Hubble’s Wide Field Camera-3 imaged the nebula in visible light with unprecedented clarity in February 2016. The colors correspond to blue for oxygen, green for hydrogen, and red for nitrogen. This information will help astronomers understand the geometry and dynamics of this complex system.  The Bubble Nebula is one of only a handful of astronomical objects that have been observed with several different instruments onboard Hubble. Hubble also imaged it with the Wide Field Planetary Camera (WFPC) in September 1992, and with Wide Field Planetary Camera-2 (WFPC2) in April 1999.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000383/GSFC_20171208_Archive_e000383~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000383/collection.json","data":[{"album":"Test","keywords":["Hubble Sees a Star ‘Inflating’ a Giant Bubble","star","space","nasa","hubble","nasagoddard"],"title":"Hubble Sees a Star ‘Inflating’ a Giant Bubble","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000383","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"For the 26th birthday of NASA’s Hubble Space Telescope, astronomers are highlighting a Hubble image of an enormous bubble being blown into space by a super-hot, massive star. The Hubble image of the Bubble Nebula, or NGC 7635, was chosen to mark the 26th anniversary of the launch of Hubble into Earth orbit by the STS-31 space shuttle crew on April 24, 1990  “As Hubble makes its 26th revolution around our home star, the sun, we celebrate the event with a spectacular image of a dynamic and exciting interaction of a young star with its environment. The view of the Bubble Nebula, crafted from WFC-3 images, reminds us that Hubble gives us a front row seat to the awe inspiring universe we live in,” said John Grunsfeld, Hubble astronaut and associate administrator of NASA’s Science Mission Directorate at NASA Headquarters, in Washington, D.C.    The Bubble Nebula is seven light-years across—about one-and-a-half times the distance from our sun to its nearest stellar neighbor, Alpha Centauri, and resides 7,100 light-years from Earth in the constellation Cassiopeia.  The seething star forming this nebula is 45 times more massive than our sun. Gas on the star gets so hot that it escapes away into space as a “stellar wind” moving at over four million miles per hour. This outflow sweeps up the cold, interstellar gas in front of it, forming the outer edge of the bubble much like a snowplow piles up snow in front of it as it moves forward.  As the surface of the bubble's shell expands outward, it slams into dense regions of cold gas on one side of the bubble. This asymmetry makes the star appear dramatically off-center from the bubble, with its location in the 10 o’clock position in the Hubble view.  Dense pillars of cool hydrogen gas laced with dust appear at the upper left of the picture, and more “fingers” can be seen nearly face-on, behind the translucent bubble.  The gases heated to varying temperatures emit different colors: oxygen is hot enough to emit blue light in the bubble near the star, while the cooler pillars are yellow from the combined light of hydrogen and nitrogen. The pillars are similar to the iconic columns in the “Pillars of Creation” Eagle Nebula. As seen with the structures in the Eagle Nebula, the Bubble Nebula pillars are being illuminated by the strong ultraviolet radiation from the brilliant star inside the bubble.  The Bubble Nebula was discovered in 1787 by William Herschel, a prominent British astronomer. It is being formed by a proto-typical Wolf-Rayet star, BD +60º2522, an extremely bright, massive, and short-lived star that has lost most of its outer hydrogen and is now fusing helium into heavier elements. The star is about four million years old, and in 10 million to 20 million years, it will likely detonate as a supernova.  Hubble’s Wide Field Camera-3 imaged the nebula in visible light with unprecedented clarity in February 2016. The colors correspond to blue for oxygen, green for hydrogen, and red for nitrogen. This information will help astronomers understand the geometry and dynamics of this complex system.  The Bubble Nebula is one of only a handful of astronomical objects that have been observed with several different instruments onboard Hubble. Hubble also imaged it with the Wide Field Planetary Camera (WFPC) in September 1992, and with Wide Field Planetary Camera-2 (WFPC2) in April 1999.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001569/GSFC_20171208_Archive_e001569~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001569/collection.json","data":[{"album":"Test","keywords":["Hubble Views a Dwarf Galaxy","space","nasa","galaxy","hubble","hst","ngc5477"],"title":"Hubble Views a Dwarf Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001569","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"The constellation of Ursa Major (The Great Bear) is home to Messier 101, the Pinwheel Galaxy. Messier 101 is one of the biggest and brightest spiral galaxies in the night sky. Like the Milky Way, Messier 101 is not alone, with smaller dwarf galaxies in its neighborhood.  NGC 5477, one of these dwarf galaxies in the Messier 101 group, is the subject of this image from the NASA/ESA Hubble Space Telescope. Without obvious structure, but with visible signs of ongoing star birth, NGC 5477 looks much like an typical dwarf irregular galaxy. The bright nebulae that extend across much of the galaxy are clouds of glowing hydrogen gas in which new stars are forming. These glow pinkish red in real life, although the selection of green and infrared filters through which this image was taken makes them appear almost white.  The observations were taken as part of a project to measure accurate distances to a range of galaxies within about 30 million light-years from Earth, by studying the brightness of red giant stars.  In addition to NGC 5477, the image includes numerous galaxies in the background, including some that are visible right through NGC 5477. This serves as a reminder that galaxies, far from being solid, opaque objects, are actually largely made up of the empty space between their stars.  This image is a combination of exposures taken through green and infrared filters using Hubble's Advanced Camera for Surveys. The field of view is approximately 3.3 by 3.3 arcminutes.     ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000722/GSFC_20171208_Archive_e000722~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000722/collection.json","data":[{"keywords":["Hubble Catches Stellar Exodus in Action"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000722","date_created":"2015-05-14T17:17:21Z","media_type":"image","title":"Hubble Catches Stellar Exodus in Action","description":"Using NASA’s Hubble Space Telescope, astronomers have captured for the first time snapshots of fledging white dwarf stars beginning their slow-paced, 40-million-year migration from the crowded center of an ancient star cluster to the less populated suburbs.  White dwarfs are the burned-out relics of stars that rapidly lose mass, cool down and shut off their nuclear furnaces. As these glowing carcasses age and shed weight, their orbits begin to expand outward from the star cluster’s packed downtown. This migration is caused by a gravitational tussle among stars inside the cluster. Globular star clusters sort out stars according to their mass, governed by a gravitational billiard ball game where lower mass stars rob momentum from more massive stars. The result is that heavier stars slow down and sink to the cluster's core, while lighter stars pick up speed and move across the cluster to the edge. This process is known as &quot;mass segregation.&quot; Until these Hubble observations, astronomers had never definitively seen the dynamical conveyor belt in action.  Astronomers used Hubble to watch the white-dwarf exodus in the globular star cluster 47 Tucanae, a dense swarm of hundreds of thousands of stars in our Milky Way galaxy. The cluster resides 16,700 light-years away in the southern constellation Tucana.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-catches-stellar-exodus-in-action\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-catches-stellar-exodu...</a>  Credits: NASA, ESA, and H. Richer and J. Heyl (University of British Columbia, Vancouver, Canada); acknowledgement: J. Mack (STScI) and G. Piotto (University of Padova, Italy)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/stsci-h-p1906c-f-514x514.a/stsci-h-p1906c-f-514x514.a~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/stsci-h-p1906c-f-514x514.a/collection.json","data":[{"keywords":["Uranus","Neptune"],"location":"NASA Goddard","nasa_id":"stsci-h-p1906c-f-514x514.a","date_created":"2019-02-11T00:00:00Z","media_type":"image","description":"This Hubble Space Telescope Wide Field Camera 3 image of Uranus, taken in November 2018, reveals a vast, bright stormy cloud cap across the planet's north pole.  Credits: NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","center":"GSFC","photographer":"NASA Hubble"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/stsci-h-p1906d-f-514x514.a/stsci-h-p1906d-f-514x514.a~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/stsci-h-p1906d-f-514x514.a/collection.json","data":[{"keywords":["Uranus","Neptune"],"location":"NASA Goddard","nasa_id":"stsci-h-p1906d-f-514x514.a","date_created":"2019-02-11T00:00:00Z","media_type":"image","description":"This Hubble Space Telescope Wide Field Camera 3 image of Neptune, taken in September and November 2018, shows a new dark storm (top center).  Credits: NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)","secondary_creator":"Space Telescope Science Institute Office","title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","center":"GSFC","photographer":"NASA Hubble"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001578/GSFC_20171208_Archive_e001578~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001578/collection.json","data":[{"album":"Test","keywords":["A Cosmic Holiday Ornament, Hubble-Style","nasa","hubble","hst"],"title":"A Cosmic Holiday Ornament, Hubble-Style","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001578","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"'Tis the season for holiday decorating and tree-trimming. Not to be left out, astronomers using NASA's Hubble Space Telescope have photographed a festive-looking nearby planetary nebula called NGC 5189. The intricate structure of this bright gaseous nebula resembles a glass-blown holiday ornament with a glowing ribbon entwined.  Planetary nebulae represent the final brief stage in the life of a medium-sized star like our sun. While consuming the last of the fuel in its core, the dying star expels a large portion of its outer envelope. This material then becomes heated by the radiation from the stellar remnant and radiates, producing glowing clouds of gas that can show complex structures, as the ejection of mass from the star is uneven in both time and direction. To read more go to: <a href=\"http://www.nasa.gov/mission_pages/hubble/science/ngc5189.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/ngc5189.html</a>  Credit: NASA, ESA, and G. Bacon (STScI)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000282/GSFC_20171208_Archive_e000282~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000282/collection.json","data":[{"album":"Test","keywords":["Hubble Friday - Heavy Metal Stars","metal","star","cluster","hubble","ngc6496"],"title":"Hubble Friday - Heavy Metal Stars","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000282","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Hubble rocks out with heavy metal stars!  This 10.5-billion-year-old globular cluster, NGC 6496, is home to heavy-metal stars of a celestial kind! The stars comprising this spectacular spherical cluster are enriched with much higher proportions of metals — elements heavier than hydrogen and helium are curiously known as metals in astronomy — than stars found in similar clusters.  A handful of these high-metallicity stars are also variable stars, meaning that their brightness fluctuates over time. NGC 6496 hosts a selection of long-period variables — giant pulsating stars whose brightness can take up to, and even over, a thousand days to change — and short-period eclipsing binaries, which dim when eclipsed by a stellar companion.  The nature of the variability of these stars can reveal important information about their mass, radius, luminosity, temperature, composition, and evolution, providing astronomers with measurements that would be difficult or even impossible to obtain through other methods.  NGC 6496 was discovered in 1826 by Scottish astronomer James Dunlop. The cluster resides at about 35,000 light-years away in the southern constellation of Scorpius (The Scorpion).  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt Text credit: European Space Agency  Read more: <a href=\"http://go.nasa.gov/1U2wqGW\" rel=\"nofollow\">go.nasa.gov/1U2wqGW</a>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20150723_2015-13352_015/GSFC_20150723_2015-13352_015~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20150723_2015-13352_015/collection.json","data":[{"keywords":["Preston Burch at the Hubble 25th Anniversary event for employees"],"description":"Preston Burch at the Hubble 25th Anniversary event for employees at Goddard Space Flight Center   ","nasa_id":"GSFC_20150723_2015-13352_015","date_created":"2015-07-23T00:00:00Z","media_type":"image","title":"Preston Burch at the Hubble 25th Anniversary event for employees","center":"GSFC","photographer":"NASA/GSFC/Bill Hrybyk"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000733/GSFC_20171208_Archive_e000733~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000733/collection.json","data":[{"keywords":["Hubble Eyes Galactic Refurbishment"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000733","date_created":"2015-04-30T15:58:57Z","media_type":"image","title":"Hubble Eyes Galactic Refurbishment","description":"The smudge of stars at the center of this NASA/ESA Hubble Space Telescope image is a galaxy known as UGC 5797. UGC 5797 is an emission line galaxy, meaning that it is currently undergoing active star formation. The result is a stellar population that is constantly being refurbished as massive bright blue stars form. Galaxies with prolific star formation are not only veiled in a blue tint, but are key to the continuation of a stellar cycle.  In this image UGC 5797 appears in front of a background of spiral galaxies. Spiral galaxies have copious amounts of dust and gas — the main ingredient for stars — and therefore often also belong to the class of emission line galaxies.  Spiral galaxies have disk-like shapes that drastically vary in appearance depending on the angle at which they are observed. The collection of spiral galaxies in this frame exhibits this attribute acutely: Some are viewed face-on, revealing the structure of the spiral arms, while the two in the bottom left are seen edge-on, appearing as plain streaks in the sky. There are many spiral galaxies, with varying colors and at different angles, sprinkled across this image — just take a look.   Credit: ESA/Hubble &amp; NASA, Acknowledgement: Luca Limatola  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000022/GSFC_20171208_Archive_e000022~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000022/collection.json","data":[{"album":"Test","keywords":["Hubble’s Hidden Galaxy","ic342"],"title":"Hubble’s Hidden Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000022","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"IC 342 is a challenging cosmic target. Although it is bright, the galaxy sits near the equator of the Milky Way’s galactic disk, where the sky is thick with glowing cosmic gas, bright stars, and dark, obscuring dust. In order for astronomers to see the intricate spiral structure of IC 342, they must gaze through a large amount of material contained within our own galaxy — no easy feat! As a result IC 342 is relatively difficult to spot and image, giving rise to its intriguing nickname: the “Hidden Galaxy.”  Located very close (in astronomical terms) to the Milky Way, this sweeping spiral galaxy would be among the brightest in the sky were it not for its dust-obscured location. The galaxy is very active, as indicated by the range of colors visible in this NASA/ESA Hubble Space Telescope image, depicting the very central region of the galaxy. A beautiful mixture of hot, blue star-forming regions, redder, cooler regions of gas, and dark lanes of opaque dust can be seen, all swirling together around a bright core. In 2003, astronomers confirmed this core to be a specific type of central region known as an HII nucleus — a name that indicates the presence of ionized hydrogen — that is likely to be creating many hot new stars.  Credit: ESA/Hubble &amp; NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000025/GSFC_20171208_Archive_e000025~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000025/collection.json","data":[{"keywords":["Hubble Eyes a Powerful Galaxy"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000025","date_created":"2017-06-30T17:03:34Z","media_type":"image","title":"Hubble Eyes a Powerful Galaxy","description":"Not all galaxies have the luxury of possessing a simple moniker or quirky nickname.   This impressive galaxy imaged by the NASA/ESA Hubble Space Telescope is one of the unlucky ones, and goes by a name that looks more like a password for a computer:  2XMM J143450.5+033843.  Such a name may seem like a random jumble of numbers and letters, but like all galactic epithets it has a distinct meaning. This galaxy, for example, was detected and observed as part of the second X-ray sky survey performed by ESA’s XMM-Newton Observatory. Its celestial coordinates form the rest of the bulky name, following the “J”: a right ascension value of 14h (hours) 34m (minutes) 50.5s (seconds). This can be likened to terrestrial longitude. It also has a declination of +03d (degrees) 38m (minutes) 43s (seconds). Declination can be likened to terrestrial latitude. The other fuzzy object in the frame was named in the same way — it is a bright galaxy named 2XMM J143448.3+033749.  2XMM J143450.5+033843 lies nearly 400 million light-years away from Earth. It is a Seyfert galaxy that is dominated by something known as an Active Galactic Nucleus — its core is thought to contain a supermassive black hole that is emitting huge amounts of radiation, pouring energetic X-rays out into the Universe.  Photo credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000687/GSFC_20171208_Archive_e000687~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000687/collection.json","data":[{"keywords":["Hubble peeks at a spiral galaxy"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000687","date_created":"2015-07-10T18:26:01Z","media_type":"image","title":"Hubble peeks at a spiral galaxy","description":"This little-known galaxy, officially named J04542829-6625280, but most often referred to as LEDA 89996, is a classic example of a spiral galaxy. The galaxy is much like our own galaxy, the Milky Way. The disk-shaped galaxy is seen face on, revealing the winding structure of the spiral arms. Dark patches in these spiral arms are in fact dust and gas — the raw materials for new stars. The many young stars that form in these regions make the spiral arms appear bright and bluish.  The galaxy sits in a vibrant area of the night sky within the constellation of Dorado (The Swordfish), and appears very close to the Large Magellanic Cloud  — one of the satellite galaxies of the Milky Way.  The observations were carried out with the high resolution channel of Hubble’s Advanced Camera for Surveys.   Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Flickr user C. Claude  <b><a href=\"http://go.nasa.gov/1Tqugil\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://go.nasa.gov/1Tqugin\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://go.nasa.gov/1Tqugir\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://go.nasa.gov/1TqujdP\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://go.nasa.gov/1TqujdT\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000794/GSFC_20171208_Archive_e000794~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000794/collection.json","data":[{"keywords":["Hubble's Little Sombrero"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000794","date_created":"2015-02-06T17:12:07Z","media_type":"image","title":"Hubble's Little Sombrero","description":"Galaxies can take many shapes and be oriented any way relative to us in the sky. This can make it hard to figure out their actual morphology, as a galaxy can look very different from different viewpoints. A special case is when we are lucky enough to observe a spiral galaxy directly from its edge, providing us with a spectacular view like the one seen in this picture of the week.  This is NGC 7814, also known as the “Little Sombrero.” Its larger namesake, the Sombrero Galaxy, is another stunning example of an edge-on galaxy — in fact, the “Little Sombrero” is about the same size as its bright namesake at about 60,000 light-years across, but as it lies farther away, and so appears smaller in the sky.  NGC 7814 has a bright central bulge and a bright halo of glowing gas extending outwards into space. The dusty spiral arms appear as dark streaks. They consist of dusty material that absorbs and blocks light from the galactic center behind it. The field of view of this NASA/ESA Hubble Space Telescope image would be very impressive even without NGC 7814 in front; nearly all the objects seen in this image are galaxies as well.  Credit: ESA/Hubble &amp; NASA Acknowledgement: Josh Barrington  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000401/GSFC_20171208_Archive_e000401~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000401/collection.json","data":[{"keywords":["Hubble and a Stellar Fingerprint"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000401","date_created":"2016-03-04T14:33:23Z","media_type":"image","title":"Hubble and a Stellar Fingerprint","description":"Showcased at the center of this NASA/ESA Hubble Space Telescope image is an emission-line star known as IRAS 12196-6300.  Located just under 2,300 light-years from Earth, this star displays prominent emission lines, meaning that the star’s light, dispersed into a spectrum, shows up as a rainbow of colors marked with a characteristic pattern of dark and bright lines. The characteristics of these lines, when compared to the “fingerprints” left by particular atoms and molecules, can be used to reveal IRAS 12196-6300’s chemical composition.  Under 10 million years old and not yet burning hydrogen at its core, unlike the sun, this star is still in its infancy. Further evidence of IRAS 12196-6300’s youth is provided by the presence of reflection nebulae. These hazy clouds, pictured floating above and below IRAS 12196-6300, are created when light from a star reflects off a high concentration of nearby dust, such as the dusty material still remaining from IRAS 12196-6300’s formation.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000607/GSFC_20171208_Archive_e000607~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000607/collection.json","data":[{"album":"Test","keywords":["Hubble Zooms in on Shrapnel from an Exploded Star","nasa","nebula","hubble","nasagoddard"],"description":"NASA’s Hubble Space Telescope has unveiled in stunning detail a small section of the expanding remains of a massive star that exploded about 8,000 years ago.  Called the Veil Nebula, the debris is one of the best-known supernova remnants, deriving its name from its delicate, draped filamentary structures. The entire nebula is 110 light-years across, covering six full moons on the sky as seen from Earth, and resides about 2,100 light-years away in the constellation Cygnus, the Swan.   This 3-D visualization flies across a small portion of the Veil Nebula as photographed by the Hubble Space Telescope.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-zooms-in-on-shrapnel-from-an-exploded-star\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-zooms-in-on-shrapnel-...</a>  Credit: NASA, ESA, and F. Summers, G. Bacon, Z. Levay, and L. Frattare (Viz 3D Team, STScI)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000607","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Zooms in on Shrapnel from an Exploded Star","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001885/GSFC_20171208_Archive_e001885~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001885/collection.json","data":[{"album":"Test","keywords":["NASA's Hubble Celebrates 21st Anniversary with \"Rose\" of Galaxies","21","space","nasa","telescope","galaxy","hubble","hst","anniversay","goddardspaceflightcenter","arp273","ugc1810","ugc1813"],"title":"NASA's Hubble Celebrates 21st Anniversary with \"Rose\" of Galaxies","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001885","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"NASA image release April 20, 2011  To see a video of this image go here: <a href=\"http://www.flickr.com/photos/gsfc/5637796622\">www.flickr.com/photos/gsfc/5637796622</a>  To celebrate the 21st anniversary of the Hubble Space Telescope's deployment into space, astronomers at the Space Telescope Science Institute in Baltimore, Md., pointed Hubble's eye at an especially photogenic pair of interacting galaxies called Arp 273. The larger of the spiral galaxies, known as UGC 1810, has a disk that is distorted into a rose-like shape by the gravitational tidal pull of the companion galaxy below it, known as UGC 1813. This image is a composite of Hubble Wide Field Camera 3 data taken on December 17, 2010, with three separate filters that allow a broad range of wavelengths covering the ultraviolet, blue, and red portions of the spectrum.  Hubble was launched April 24, 1990, aboard Discovery's STS-31 mission. Hubble discoveries   revolutionized nearly all areas of current astronomical research from planetary science to cosmology.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)  To read more about this image go here: <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble-rose.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble-rose.html</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o/collection.json","data":[{"keywords":["Hubble","HST","exoplanet"],"description":"Astronomers using NASA’s Hubble Space Telescope have discovered an immense cloud of hydrogen dubbed “The Behemoth” bleeding from a planet orbiting a nearby star. The enormous, comet-like feature is about 50 times the size of the parent star. The hydrogen is evaporating from a warm, Neptune-sized planet, due to extreme radiation from the star.  This phenomenon has never been seen around an exoplanet so small. It may offer clues to how other planets with hydrogen-enveloped atmospheres could have their outer layers evaporated by their parent star, leaving behind solid, rocky cores. Hot, rocky planets such as these that roughly the size of Earth are known as Hot-Super Earths.  “This cloud is very spectacular, though the evaporation rate does not threaten the planet right now,” explains the study’s leader, David Ehrenreich of the Observatory of the University of Geneva in Switzerland. “But we know that in the past, the star, which is a faint red dwarf, was more active. This means that the planet evaporated faster during its first billion years of existence because of the strong radiation from the young star. Overall, we estimate that it may have lost up to 10 percent of its atmosphere over the past several billion years.”  Caption: This artist's concept shows \"The Behemoth,\" an enormous comet-like cloud of hydrogen bleeding off of a warm, Neptune-sized planet just 30 light-years from Earth. Also depicted is the parent star, which is a faint red dwarf named GJ 436. The hydrogen is evaporating from the planet due to extreme radiation from the star. A phenomenon this large has never before been seen around any exoplanet.  Credits: NASA, ESA, and G. Bacon (STScI)","nasa_id":"hubble-sees-a-behemoth-bleeding-atmosphere-around-a-warm-exoplanet_19125041621_o","date_created":"2015-06-24T00:00:00Z","media_type":"image","title":"Hubble Sees a “Behemoth” Bleeding Atmosphere Around a Warm Exoplanet","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001824/GSFC_20171208_Archive_e001824~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001824/collection.json","data":[{"album":"Test","keywords":["Hubble's Neptune Anniversary Pictures","nasa","neptune","hubble","hst","goddardspaceflightcenter","165years"],"description":"NASA image release July 12, 2011  Neptune: 23:09 UT (June 25, 2011)  Today, Neptune has arrived at the same location in space where it was discovered nearly 165 years ago. To commemorate the event, NASA's Hubble Space Telescope has taken these &quot;anniversary pictures&quot; of the blue-green giant planet.  Neptune is the most distant major planet in our solar system. German astronomer Johann Galle discovered the planet on September 23, 1846. At the time, the discovery doubled the size of the known solar system. The planet is 2.8 billion miles (4.5 billion kilometers) from the Sun, 30 times farther than Earth. Under the Sun's weak pull at that distance, Neptune plods along in its huge orbit, slowly completing one revolution approximately every 165 years.  <b>To read more go <a href=\"http://www.nasa.gov/mission_pages/hubble/science/neptune-circuit.html\" rel=\"nofollow\"> here</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://web.stagram.com/n/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e001824","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble's Neptune Anniversary Pictures","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000640/GSFC_20171208_Archive_e000640~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000640/collection.json","data":[{"album":"Test","keywords":["A Hubble Cosmic Couple","star","space","nasa","hubble","m167","nasagoddard","wr124"],"description":"Here we see the spectacular cosmic pairing of the star Hen 2-427 — more commonly known as WR 124 — and the nebula M1-67 which surrounds it. Both objects, captured here by the NASA/ESA Hubble Space Telescope are found in the constellation of Sagittarius and lie 15,000 light-years away.  The star Hen 2-427 shines brightly at the very center of this explosive image and around the hot clumps of surrounding gas that are being ejected into space at over 93,210 miles (150,000 km) per hour.  Hen 2-427 is a Wolf–Rayet star, named after the astronomers Charles Wolf and Georges Rayet. Wolf–Rayet are super-hot stars characterized by a fierce ejection of mass.  The nebula M1-67 is estimated to be no more than 10,000 years old — just a baby in astronomical terms — but what a beautiful and magnificent sight it makes.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000640","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"A Hubble Cosmic Couple","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000384/GSFC_20171208_Archive_e000384~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000384/collection.json","data":[{"album":"Test","keywords":["Hubble Peers into the Mouth of Leo A","space","nasa","hubble","leoa","hubblespacetelescope","nasagoddard"],"title":"Hubble Peers into the Mouth of Leo A","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000384","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"At first glance, this NASA/ESA Hubble Space Telescope image seems to show an array of different cosmic objects, but the speckling of stars shown here actually forms a single body — a nearby dwarf galaxy known as Leo A. Its few million stars are so sparsely distributed that some distant background galaxies are visible through it. Leo A itself is at a distance of about 2.5 million light-years from Earth and a member of the Local Group of galaxies; a group that includes the Milky Way and the well-known Andromeda galaxy.  Astronomers study dwarf galaxies because they are very numerous and are simpler in structure than their giant cousins. However, their small size makes them difficult to study at great distances. As a result, the dwarf galaxies of the Local Group are of particular interest, as they are close enough to study in detail.  As it turns out, Leo A is a rather unusual galaxy. It is one of the most isolated galaxies in the Local Group, has no obvious structural features beyond being a roughly spherical mass of stars, and shows no evidence for recent interactions with any of its few neighbors. However, the galaxy’s contents are overwhelmingly dominated by relatively young stars, something that would normally be the result of a recent interaction with another galaxy. Around 90% of the stars in Leo A are less than eight billion years old — young in cosmic terms! This raises a number of intriguing questions about why star formation in Leo A did not take place on the “usual” timescale, but instead waited until it was good and ready.  Image credit: ESA/Hubble &amp; NASA; Acknowledgment: Judy Schmidt","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001464/GSFC_20171208_Archive_e001464~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001464/collection.json","data":[{"album":"Test","keywords":["Hubble reveals the Ring Nebula’s true shape","nasa","nebula","hubble","hubblespacetelescope"],"description":"Caption: In this composite image, visible-light observations by NASA’s Hubble Space Telescope are combined with infrared data from the ground-based Large Binocular Telescope in Arizona to assemble a dramatic view of the well-known Ring Nebula.   Credit: NASA, ESA, C.R. Robert O’Dell (Vanderbilt University), G.J. Ferland (University of Kentucky), W.J. Henney and M. Peimbert (National Autonomous University of Mexico) Credit for Large Binocular Telescope data: David Thompson (University of Arizona)   ----  The Ring Nebula's distinctive shape makes it a popular illustration for astronomy books. But new observations by NASA's Hubble Space Telescope of the glowing gas shroud around an old, dying, sun-like star reveal a new twist.  &quot;The nebula is not like a bagel, but rather, it's like a jelly doughnut, because it's filled with material in the middle,&quot; said C. Robert O'Dell of Vanderbilt University in Nashville, Tenn. He leads a research team that used Hubble and several ground-based telescopes to obtain the best view yet of the iconic nebula. The images show a more complex structure than astronomers once thought and have allowed them to construct the most precise 3-D model of the nebula.  &quot;With Hubble's detail, we see a completely different shape than what's been thought about historically for this classic nebula,&quot; O'Dell said. &quot;The new Hubble observations show the nebula in much clearer detail, and we see things are not as simple as we previously thought.&quot;   The Ring Nebula is about 2,000 light-years from Earth and measures roughly 1 light-year across. Located in the constellation Lyra, the nebula is a popular target for amateur astronomers. Read more: <a href=\"http://1.usa.gov/14VAOMk\" rel=\"nofollow\">1.usa.gov/14VAOMk</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e001464","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble reveals the Ring Nebula’s true shape","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000144/GSFC_20171208_Archive_e000144~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000144/collection.json","data":[{"album":"Test","keywords":["Hubble Gazes at a Cosmic Megamaser"],"description":"This galaxy has a far more exciting and futuristic classification than most — it hosts a megamaser. Megamasers are intensely bright, around 100 million times brighter than the masers found in galaxies like the Milky Way. The entire galaxy essentially acts as an astronomical laser that beams out microwave emission rather than visible light (hence the ‘m’ replacing the ‘l’).  A megamaser is a process that involves some components within the galaxy (like gas) that is in the right physical condition to cause the amplification of light (in this case, microwaves).  But there are other parts of the galaxy (like stars for example) that aren’t part of the maser process.  This megamaser galaxy is named IRAS 16399-0937 and is located over 370 million light-years from Earth. This NASA/ESA Hubble Space Telescope image belies the galaxy’s energetic nature, instead painting it as a beautiful and serene cosmic rosebud. The image comprises observations captured across various wavelengths by two of Hubble’s instruments: the Advanced Camera for Surveys (ACS), and the Near Infrared Camera and Multi-Object Spectrometer (NICMOS).  NICMOS’s superb sensitivity, resolution, and field of view gave astronomers the unique opportunity to observe the structure of IRAS 16399-0937 in detail. They found it hosts a double nucleus — the galaxy’s core is thought to be formed of two separate cores in the process of merging. The two components, named IRAS 16399N and IRAS 16399S for the northern and southern parts respectively, sit over 11,000 light-years apart. However, they are both buried deep within the same swirl of cosmic gas and dust and are interacting, giving the galaxy its peculiar structure.  The nuclei are very different. IRAS 16399S appears to be a starburst region, where new stars are forming at an incredible rate. IRAS 16399N, however, is something known as a LINER nucleus (Low Ionization Nuclear Emission Region), which is a region whose emission mostly stems from weakly-ionized or neutral atoms of particular gases. The northern nucleus also hosts a black hole with some 100 million times the mass of the sun!  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt (geckzilla)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>    ","nasa_id":"GSFC_20171208_Archive_e000144","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Gazes at a Cosmic Megamaser","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001708/GSFC_20171208_Archive_e001708~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001708/collection.json","data":[{"album":"Test","keywords":["Hubble Views a Cosmic Skyrocket"],"title":"Hubble Views a Cosmic Skyrocket","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001708","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"NASA image release July 3, 2012  Caption: Resembling a Fourth of July skyrocket, Herbig-Haro 110 is a geyser of hot gas from a newborn star that splashes up against and ricochets off the dense core of a cloud of molecular hydrogen. Although the plumes of gas look like whiffs of smoke, they are actually billions of times less dense than the smoke from a July 4 firework. This Hubble Space Telescope photo shows the integrated light from plumes, which are light-years across.  -- Herbig-Haro (HH) objects come in a wide array of shapes, but the basic configuration stays the same. Twin jets of heated gas, ejected in opposite directions away from a forming star, stream through interstellar space. Astronomers suspect that these outflows are fueled by gas accreting onto a young star surrounded by a disk of dust and gas. The disk is the &quot;fuel tank,&quot; the star is the gravitational engine, and the jets are the exhaust.  When these energetic jets slam into colder gas, the collision plays out like a traffic jam on the interstate. Gas within the shock front slows to a crawl, but more gas continues to pile up as the jet keeps slamming into the shock from behind. Temperatures climb sharply, and this curving, flared region starts to glow. These &quot;bow shocks&quot; are so named because they resemble the waves that form at the front of a boat.  In the case of the single HH 110 jet, astronomers observe a spectacular and unusual permutation on this basic model. Careful study has repeatedly failed to find the source star driving HH 110, and there may be good reason for this: perhaps the HH 110 outflow is itself generated by another jet.  Astronomers now believe that the nearby HH 270 jet grazes an immovable obstacle - a much denser, colder cloud core - and gets diverted off at about a 60-degree angle. The jet goes dark and then reemerges, having reinvented itself as HH 110.  The jet shows that these energetic flows are like the erratic outbursts from a Roman candle. As fast-moving blobs of gas catch up and collide with slower blobs, new shocks arise along the jet's interior. The light emitted from excited gas in these hot blue ridges marks the boundaries of these interior collisions. By measuring the current velocity and positions of different blobs and hot ridges along the chain within the jet, astronomers can effectively &quot;rewind&quot; the outflow, extrapolating the blobs back to the moment when they were emitted. This technique can be used to gain insight into the source star's history of mass accretion.  This image is a composite of data taken with Hubble's Advanced Camera for Surveys in 2004 and 2005 and the Wide Field Camera 3 in April 2011.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA)   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/stsci-h-p1906a-f-1028x543/stsci-h-p1906a-f-1028x543~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/stsci-h-p1906a-f-1028x543/collection.json","data":[{"keywords":["Uranus","Neptune","Hubble","NASA Goddard"],"location":"NASA Goddard","nasa_id":"stsci-h-p1906a-f-1028x543","date_created":"2019-02-11T00:00:00Z","media_type":"image","description":"During its routine yearly monitoring of the weather on our solar system's outer planets, NASA's Hubble Space Telescope has uncovered a new mysterious dark storm on Neptune (right) and provided a fresh look at a long-lived storm circling around the north polar region on Uranus (left).","secondary_creator":"Space Telescope Science Institute Office of Public Outreach","title":"Hubble Reveals Dynamic Atmospheres of Uranus, Neptune","center":"GSFC","photographer":"NASA, ESA, A. Simon (NASA Goddard Space Flight Center), and M.H. Wong and A. Hsu (University of California, Berkeley)"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000390/GSFC_20171208_Archive_e000390~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000390/collection.json","data":[{"album":"Test","keywords":["Hubble’s Journey to the Center of our Galaxy"],"title":"Hubble’s Journey to the Center of our Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000390","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This picture, spanning 50 light-years across, is a mosaic stitched from nine separate images from Hubble’s Wide Field Camera 3. The center of the Milky Way is located 27,000 light-years away. The “snowstorm” of stars in the image is just the tip of the iceberg: Astronomers estimate that about 10 million stars in this cluster are too faint to be captured in this image.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/2016/hubble-s-journey-to-the-center-of-our-galaxy\" rel=\"nofollow\">www.nasa.gov/feature/goddard/2016/hubble-s-journey-to-the...</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000699/GSFC_20171208_Archive_e000699~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000699/collection.json","data":[{"keywords":["Hubble View of a Nitrogen-Rich Nebula"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000699","date_created":"2015-06-26T15:34:26Z","media_type":"image","title":"Hubble View of a Nitrogen-Rich Nebula","description":"This NASA/ESA Hubble Space Telescope image shows a planetary nebula named NGC 6153, located about 4,000 light-years away in the southern constellation of Scorpius (The Scorpion). The faint blue haze across the frame shows what remains of a star like the sun after it has depleted most of its fuel. When this happens, the outer layers of the star are ejected, and get excited and ionized by the energetic ultraviolet light emitted by the bright hot core of the star, forming the nebula.  NGC 6153 is a planetary nebula that is elliptical in shape, with an extremely rich network of loops and filaments, shown clearly in this Hubble image. However, this is not what makes this planetary nebula so interesting for astronomers.  Measurements show that NGC 6153 contains large amounts of neon, argon, oxygen, carbon and chlorine — up to three times more than can be found in the solar system. The nebula contains a whopping five times more nitrogen than our sun! Although it may be that the star developed higher levels of these elements as it grew and evolved, it is more likely that the star originally formed from a cloud of material that already contained a lot more of these elements.  Text credit: European Space Agency Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Matej Novak  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001059/GSFC_20171208_Archive_e001059~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001059/collection.json","data":[{"keywords":["Grand Swirls from NASA's Hubble"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001059","date_created":"2014-06-06T14:35:47Z","media_type":"image","title":"Grand Swirls from NASA's Hubble","description":"This new Hubble image shows NGC 1566, a beautiful galaxy located approximately 40 million light-years away in the constellation of Dorado (The Dolphinfish). NGC 1566 is an intermediate spiral galaxy, meaning that while it does not have a well-defined bar-shaped region of stars at its center — like barred spirals — it is not quite an unbarred spiral either.  The small but extremely bright nucleus of NGC 1566 is clearly visible in this image, a telltale sign of its membership of the Seyfert class of galaxies. The centers of such galaxies are very active and luminous, emitting strong bursts of radiation and potentially harboring supermassive black holes that are many millions of times the mass of the sun.  NGC 1566 is not just any Seyfert galaxy; it is the second brightest Seyfert galaxy known. It is also the brightest and most dominant member of the Dorado Group, a loose concentration of galaxies that together comprise one of the richest galaxy groups of the southern hemisphere. This image highlights the beauty and awe-inspiring nature of this unique galaxy group, with NGC 1566 glittering and glowing, its bright nucleus framed by swirling and symmetrical lavender arms.  This image was taken by Hubble’s Wide Field Camera 3 (WFC3) in the near-infrared part of the spectrum.    European Space Agency Credit:  ESA/Hubble &amp; NASA, Acknowledgement: Flickr user Det58  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002058/GSFC_20171208_Archive_e002058~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002058/collection.json","data":[{"keywords":["Hubble's Wide View of 'Mystic Mountain' in Infrared"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002058","date_created":"2010-04-23T13:33:42Z","media_type":"image","title":"Hubble's Wide View of 'Mystic Mountain' in Infrared","description":"NASA image release April 22, 2010  This is a NASA Hubble Space Telescope near-infrared-light image of a three-light-year-tall pillar of gas and dust that is being eaten away by the brilliant light from nearby stars in the tempestuous stellar nursery called the Carina Nebula, located 7,500 light-years away in the southern constellation Carina. The image marks the 20th anniversary of Hubble's launch and deployment into an orbit around Earth. The image reveals a plethora of stars behind the gaseous veil of the nebula's wall of hydrogen, laced with dust. The foreground pillar becomes semi-transparent because infrared light from background stars penetrates through much of the dust. A few stars inside the pillar also become visible. The false colors are assigned to three different infrared wavelength ranges. Hubble's Wide Field Camera 3 observed the pillar in February and March 2010. Object Names: HH 901, HH 902 Image Type: Astronomical  Credit: NASA, ESA, and M. Livio and the Hubble 20th Anniversary Team (STScI)  To read learn more about this image go to:  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble20th-img.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble20th-img....</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000982/GSFC_20171208_Archive_e000982~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000982/collection.json","data":[{"keywords":["Hubble Feathers the Peacock"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000982","date_created":"2014-09-19T14:34:49Z","media_type":"image","title":"Hubble Feathers the Peacock","description":"This picture, taken by the NASA/ESA Hubble Space Telescope’s Wide Field Planetary Camera 2 (WFPC2), shows a galaxy known as NGC 6872 in the constellation of Pavo (The Peacock). Its unusual shape is caused by its interactions with the smaller galaxy that can be seen just above NGC 6872, called IC 4970. They both lie roughly 300 million light-years away from Earth.  From tip to tip, NGC 6872 measures over 500,000 light-years across, making it the second largest spiral galaxy discovered to date. In terms of size it is beaten only by NGC 262, a galaxy that measures a mind-boggling 1.3 million light-years in diameter! To put that into perspective, our own galaxy, the Milky Way, measures between 100,000 and 120,000 light-years across, making NGC 6872 about five times its size.  The upper left spiral arm of NGC 6872 is visibly distorted and is populated by star-forming regions, which appear blue on this image. This may have been be caused by IC 4970 recently passing through this arm — although here, recent means 130 million years ago! Astronomers have noted that NGC 6872 seems to be relatively sparse in terms of free hydrogen, which is the basis material for new stars, meaning that if it weren’t for its interactions with IC 4970, NGC 6872 might not have been able to produce new bursts of star formation.  Credit: Image credit: ESA/Hubble &amp; NASA / Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000657/GSFC_20171208_Archive_e000657~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000657/collection.json","data":[{"keywords":["Hubble Finds a Little Gem"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000657","date_created":"2015-08-07T13:31:43Z","media_type":"image","title":"Hubble Finds a Little Gem","description":"This colorful bubble is a planetary nebula called NGC 6818, also known as the Little Gem Nebula. It is located in the constellation of Sagittarius (The Archer), roughly 6,000 light-years away from us. The rich glow of the cloud is just over half a light-year across — humongous compared to its tiny central star — but still a little gem on a cosmic scale.  When stars like the sun enter &quot;retirement,&quot; they shed their outer layers into space to create glowing clouds of gas called planetary nebulae. This ejection of mass is uneven, and planetary nebulae can have very complex shapes. NGC 6818 shows knotty filament-like structures and distinct layers of material, with a bright and enclosed central bubble surrounded by a larger, more diffuse cloud.  Scientists believe that the stellar wind from the central star propels the outflowing material, sculpting the elongated shape of NGC 6818. As this fast wind smashes through the slower-moving cloud it creates particularly bright blowouts at the bubble’s outer layers.  Hubble previously imaged this nebula back in 1997 with its Wide Field Planetary Camera 2, using a mix of filters that highlighted emission from ionized oxygen and hydrogen. This image, while from the same camera, uses different filters to reveal a different view of the nebula.    Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000767/GSFC_20171208_Archive_e000767~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000767/collection.json","data":[{"keywords":["Panta rhei as Seen by Hubble"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000767","date_created":"2015-02-20T20:05:54Z","media_type":"image","description":"Panta rhei is a simplified version of the famous Greek philosopher Heraclitus' teachings. It basically means, everything flows. And everything in the Universe is indeed continually on the move, spiraling and shifting through space.  Some cosmic objects move a little further than others — take the subject of this NASA/ESA Hubble Space Telescope image, a globular cluster of stars known as Palomar 12. Although it currently lies on the outskirts of the Milky Way’s halo, Palomar 12 was not born here. When astronomers first studied this cluster, they were puzzled by its strangely young age when compared to the other clusters in the galaxy. It appeared to be around 30 percent younger than other Milky Way globulars. Surely if it had been born within our galaxy, it would have sprung to life at a similar time to its cluster companions?  A bit more digging revealed that Palomar 12 was actually ripped from its initial home, the Sagittarius Dwarf Elliptical galaxy, around 1.7 billion years ago via tidal interactions between its former home and our galaxy. The dwarf galaxy that Palomar 12 once called home is a satellite galaxy to ours, and closely orbits around us — even occasionally passing through the plane of our galaxy. In fact, it is being slowly torn apart and consumed by the Milky Way.  The sparkling stars in this picture were imaged by Hubble’s Advanced Camera for Surveys.  Credit: ESA/NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","title":"Panta rhei as Seen by Hubble","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001921/GSFC_20171208_Archive_e001921~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001921/collection.json","data":[{"keywords":["NASA's Hubble Zooms in on a Space Oddity"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001921","date_created":"2011-01-11T18:27:29Z","media_type":"image","title":"NASA's Hubble Zooms in on a Space Oddity","description":"NASA image release January 10, 2011  In this image by NASA's Hubble Space Telescope, an unusual, ghostly green blob of gas appears to float near a normal-looking spiral galaxy.  The bizarre object, dubbed Hanny's Voorwerp (Hanny's Object in Dutch), is the only visible part of a 300,000-light-year-long streamer of gas stretching around the galaxy, called IC 2497. The greenish Voorwerp is visible because a searchlight beam of light from the galaxy's core illuminated it. This beam came from a quasar, a bright, energetic object that is powered by a black hole. The quasar may have turned off about 200,000 years ago.  This Hubble view uncovers a pocket of star clusters, the yellowish-orange area at the tip of Hanny's Voorwerp. The star clusters are confined to an area that is a few thousand light-years wide. The youngest stars are a couple of million years old. The Voorwerp is the size of our Milky Way galaxy, and its bright green color is from glowing oxygen.  Hubble also shows that gas flowing from IC 2497 may have instigated the star birth by compressing the gas in Hanny's Voorwerp. The galaxy is located about 650 million light-years from Earth.  What appears to be a gaping hole in Hanny's Voorwerp actually may be a shadow cast by an object in the quasar's light path. The feature gives the illusion of a hole about 20,000 light-years wide. Hubble reveals sharp edges but no other changes in the gas around the apparent opening, suggesting that an object close to the quasar may have blocked some of the light and projected a shadow on the Voorwerp. This phenomenon is similar to a fly on a movie projector lens casting a shadow on a movie screen.  An interaction between IC 2497 and another galaxy about a billion years ago may have created Hanny's Voorwerp and fueled the quasar. The Hubble image shows that IC 2497 has been disturbed, with complex dust patches, warped spiral arms, and regions of star formation around its core. These features suggest the aftermath of a galaxy merger. The bright spots in the central part of the galaxy are star-forming regions. The small, pinkish object to the lower right of IC 2497 is an edge-on spiral galaxy in the background.  The image was made by combining data from the Advanced Camera for Surveys (ACS) and the Wide Field Camera 3 (WFC3). The ACS exposures were taken April 12, 2010; the WFC3 data, April 4, 2010.  Object Names: Hanny's Voorwerp, IC 2497  Image Type: Astronomical  Credit: NASA, ESA, W. Keel (University of Alabama), and the Galaxy Zoo Team  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000256/GSFC_20171208_Archive_e000256~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000256/collection.json","data":[{"album":"Test","keywords":["A Hubble Sky Full of Stars","nasa","hubble","space","stars","global","cluster","ngc4833"],"description":"So Coldplay isn't the only one to see a sky full of stars, these are 22K light-years away  Located approximately 22,000 light-years away in the constellation of Musca (The Fly), this tightly packed collection of stars — known as a globular cluster — goes by the name of NGC 4833. This NASA/ESA Hubble Space Telescope image shows the dazzling stellar group in all its glory.  NGC 4833 is one of the over 150 globular clusters known to reside within the Milky Way. These objects are thought to contain some of the oldest stars in our galaxy. Studying these ancient cosmic clusters can help astronomers to unravel how a galaxy formed and evolved, and give an idea of the galaxy’s age.  Globular clusters are responsible for some of the most striking sights in the cosmos, with hundreds of thousands of stars congregating in the same region of space. Hubble has observed many of these clusters during its time in orbit around our planet, each as breathtaking as the last.  bit.ly/2b85p36   Image credit: ESA/Hubble and NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","nasa_id":"GSFC_20171208_Archive_e000256","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"A Hubble Sky Full of Stars","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000506/GSFC_20171208_Archive_e000506~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000506/collection.json","data":[{"album":"Test","keywords":["A Galaxy at the Center of the Hubble Tuning Fork","space","nasa","galaxy","lenticular","hubble","nasagoddard","mrk820"],"title":"A Galaxy at the Center of the Hubble Tuning Fork","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000506","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This galaxy is known as Mrk 820 and is classified as a lenticular galaxy — type S0 on the Hubble Tuning Fork. The Hubble Tuning Fork is used to classify galaxies according to their morphology. Elliptical galaxies look like smooth blobs in the sky and lie on the handle of the fork. They are arranged along the handle based on how elliptical they are, with the more spherical galaxies furthest from the tines of the fork, and the more egg-shaped ones closest to the end of the handle where it divides. The two prongs of the tuning fork represent types of unbarred and barred spiral galaxies.  Lenticular galaxies like Mrk 820 are in the transition zone between ellipticals and spirals and lie right where the fork divides. A closer look at the appearance of Mrk 820 reveals hints of a spiral structure embedded in a circular halo of stars.  Surrounding Mrk 820 in this image is a good sampling of other galaxy types, covering almost every type found on the Hubble Tuning Fork, both elliptical and spiral. Most of the smears and specks are distant galaxies, but the prominent bright object at the bottom is a foreground star called TYC 4386-787-1.  Credit: ESA/Hubble &amp; NASA and N. Gorin (STScI), Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000528/GSFC_20171208_Archive_e000528~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000528/collection.json","data":[{"album":"Test","keywords":["Hubble Spies Big Bang Frontiers","big","galaxy","galaxies","bang","hubble","hubblespacetelescope","bingbang","macsj071753745"],"description":"Observations by the NASA/ESA Hubble Space Telescope have taken advantage of gravitational lensing to reveal the largest sample of the faintest and earliest known galaxies in the universe. Some of these galaxies formed just 600 million years after the big bang and are fainter than any other galaxy yet uncovered by Hubble. The team has determined for the first time with some confidence that these small galaxies were vital to creating the universe that we see today.  An international team of astronomers, led by Hakim Atek of the Ecole Polytechnique Fédérale de Lausanne, Switzerland, has discovered over 250 tiny galaxies that existed only 600-900 million years after the big bang— one of the largest samples of dwarf galaxies yet to be discovered at these epochs. The light from these galaxies took over 12 billion years to reach the telescope, allowing the astronomers to look back in time when the universe was still very young.  Read more: <a href=\"http://www.nasa.gov/feature/goddard/hubble-spies-big-bang-frontiers\" rel=\"nofollow\">www.nasa.gov/feature/goddard/hubble-spies-big-bang-frontiers</a>  Credit: NASA/ESA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b> ","nasa_id":"GSFC_20171208_Archive_e000528","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Spies Big Bang Frontiers","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000100/GSFC_20171208_Archive_e000100~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000100/collection.json","data":[{"album":"Test","keywords":["Alien aurorae spotted on Uranus by Hubble","uranus"],"title":"Alien aurorae spotted on Uranus by Hubble","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000100","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This is a composite image of Uranus by Voyager 2 and two different observations made by Hubble — one for the ring and one for the auroras.  Ever since Voyager 2 beamed home spectacular images of the planets in the 1980s, planet-lovers have been hooked on auroras on other planets. Auroras are caused by streams of charged particles like electrons that come from various origins such as solar winds, the planetary ionosphere, and moon volcanism. They become caught in powerful magnetic fields and are channeled into the upper atmosphere, where their interactions with gas particles, such as oxygen or nitrogen, set off spectacular bursts of light.  The auroras on Jupiter and Saturn are well-studied, but not much is known about the auroras of the giant ice planet Uranus. In 2011, the NASA/ESA Hubble Space Telescope became the first Earth-based telescope to snap an image of the auroras on Uranus. In 2012 and 2014 a team led by an astronomer from Paris Observatory took a second look at the auroras using the ultraviolet capabilities of the Space Telescope Imaging Spectrograph (STIS) installed on Hubble.  They tracked the interplanetary shocks caused by two powerful bursts of solar wind traveling from the sun to Uranus, then used Hubble to capture their effect on Uranus’ auroras — and found themselves observing the most intense auroras ever seen on the planet. By watching the auroras over time, they collected the first direct evidence that these powerful shimmering regions rotate with the planet. They also re-discovered Uranus’ long-lost magnetic poles, which were lost shortly after their discovery by Voyager 2 in 1986 due to uncertainties in measurements and the featureless planet surface.  Credit: ESA/Hubble &amp; NASA, L. Lamy / Observatoire de Paris  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000012/GSFC_20171208_Archive_e000012~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000012/collection.json","data":[{"album":"Test","keywords":["Hubble's Hockey Stick Galaxy","ngc4656"],"description":"The star of this NASA/ESA Hubble Space Telescope image is a galaxy known as NGC 4656, located in the constellation of Canes Venatici (The Hunting Dogs). However, it also has a somewhat more interesting and intriguing name: the Hockey Stick Galaxy! The reason for this is a little unclear from this partial view, which shows the bright central region, but the galaxy is actually shaped like an elongated, warped stick, stretching out through space until it curls around at one end to form a striking imitation of a celestial hockey stick.  This unusual shape is thought to be due to an interaction between NGC 4656 and a couple of near neighbors, NGC 4631 (otherwise known as The Whale Galaxy) and NGC 4627 (a small elliptical). Galactic interactions can completely reshape a celestial object, shifting and warping its constituent gas, stars, and dust into bizarre and beautiful configurations.  Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000012","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble's Hockey Stick Galaxy","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000677/GSFC_20171208_Archive_e000677~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000677/collection.json","data":[{"album":"Test","keywords":["Hubble Looks in on a Galactic Nursery","ngc1140"],"title":"Hubble Looks in on a Galactic Nursery","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000677","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This dramatic image shows the NASA/ESA Hubble Space Telescope’s view of dwarf galaxy known as NGC 1140, which lies 60 million light-years away in the constellation of Eridanus. As can be seen in this image NGC 1140 has an irregular form, much like the Large Magellanic Cloud — a small galaxy that orbits the Milky Way.  This small galaxy is undergoing what is known as a starburst. Despite being almost ten times smaller than the Milky Way it is creating stars at about the same rate, with the equivalent of one star the size of our sun being created per year. This is clearly visible in the image, which shows the galaxy illuminated by bright, blue-white, young stars.  Galaxies like NGC 1140 — small, starbursting and containing large amounts of primordial gas with far fewer elements heavier than hydrogen and helium than are present in our sun — are of particular interest to astronomers. Their composition makes them similar to the intensely star-forming galaxies in the early Universe. And these early Universe galaxies were the building blocks of present-day large galaxies like our galaxy, the Milky Way. But, as they are so far away these early Universe galaxies are harder to study so these closer starbursting galaxies are a good substitute for learning more about galaxy evolution.  The vigorous star formation will have a very destructive effect on this small dwarf galaxy in its future. When the larger stars in the galaxy die, and explode as supernovae, gas is blown into space and may easily escape the gravitational pull of the galaxy. The ejection of gas from the galaxy means it is throwing out its potential for future stars as this gas is one of the building blocks of star formation. NGC 1140’s starburst cannot last for long.  Image credit: ESA/Hubble &amp; NASA ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000159/GSFC_20171208_Archive_e000159~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000159/collection.json","data":[{"album":"Test","keywords":["Hubble Nets a Subtle Swarm","ngc4789a"],"description":"This Hubble image shows NGC 4789A, a dwarf irregular galaxy in the constellation of Coma Berenices. It certainly lives up to its name — the stars that call this galaxy home are smeared out across the sky in an apparently disorderly and irregular jumble, giving NGC 4789A a far more subtle and abstract appearance than its glitzy spiral and elliptical cousins.  These stars may look as if they have been randomly sprinkled on the sky, but they are all held together by gravity. The colors in this image have been deliberately exaggerated to emphasize the mix of blue and red stars. The blue stars are bright, hot and massive stars that have formed relatively recently, whereas the red stars are much older. The presence of both tells us that stars have been forming in this galaxy throughout its history.  At a distance of just over 14 million light-years away NGC 4789A is relatively close to us, allowing us to see many of the individual stars within its bounds. This image also reveals numerous other galaxies, far more distant, that appear as fuzzy shapes spread across the image.  Image Credit: ESA/Hubble &amp; NASA, Acknowledgements: Judy Schmidt (Geckzilla)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","nasa_id":"GSFC_20171208_Archive_e000159","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Nets a Subtle Swarm","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000433/GSFC_20171208_Archive_e000433~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000433/collection.json","data":[{"album":"Test","keywords":["Hubble Spies a Rebel","space","nasa","hubble","nasagoddard","ngc5408"],"description":"Most galaxies possess a majestic spiral or elliptical structure. About a quarter of galaxies, though, defy such conventional, rounded aesthetics, instead sporting a messy, indefinable shape. Known as irregular galaxies, this group includes NGC 5408, the galaxy that has been snapped here by the NASA/ESA Hubble Space Telescope.  John Herschel recorded the existence of NGC 5408 in June 1834. Astronomers had long mistaken NGC 5408 for a planetary nebula, an expelled cloud of material from an aging star. Instead, bucking labels, NGC 5408 turned out to be an entire galaxy, located about 16 million light-years from Earth in the constellation of Centaurus (The Centaur).  In yet another sign of NGC 5408 breaking convention, the galaxy is associated with an object known as an ultraluminous X-ray source, dubbed NGC 5408 X-1, one of the best studied of its class. These rare objects beam out prodigious amounts of energetic X-rays. Astrophysicists believe these sources to be strong candidates for intermediate-mass black holes. This hypothetical type of black hole has significantly less mass than the supermassive black holes found in galactic centers, which can have billions of times the mass of the sun, but have a good deal more mass than the black holes formed when giant stars collapse.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","nasa_id":"GSFC_20171208_Archive_e000433","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Spies a Rebel","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001513/GSFC_20171208_Archive_e001513~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001513/collection.json","data":[{"album":"Test","keywords":["Hubble’s View of a Changing Fan","space","nasa","hubble","heliophysics","solarsystemexploration","goddardbahrefhttpwwwnasagovaudienceformediafeaturesmpphotoguidelineshtmlrelnofollownasaimageusepolicyabbahrefhttpwwwnasagovcentersgoddardhomeindexhtmlrelnofollownasagoddardspaceflightcenterabenable"],"title":"Hubble’s View of a Changing Fan","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001513","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"The Universe is rarely static, although the timescales involved can be very long. Since modern astronomical observations began we have been observing the birthplaces of new stars and planets, searching for and studying the subtle changes that help us to figure out what is happening within.  The bright spot located at the edge of the bluish fan-shaped structure in this Hubble image is a young star called V* PV Cephei, or PV Cep. It is a favorite target for amateur astronomers because the fan-shaped nebulosity, known as GM 1-29 or Gyulbudaghian’s Nebula, changes over a timescale of months. The brightness of the star has also varied over time.  Images of PV Cep taken in 1952 showed a nebulous streak, similar to a comet’s tail. However, this had vanished when new images of the star were obtained some twenty-five years later. Instead, the blue fan-shaped nebula had appeared. Twenty-five years is a very short period on cosmic timescales, so astronomers think that the mysterious streak may have been a temporary phenomenon, such as the remnants of a massive stellar flare — similar to the solar flares we are used to seeing in the solar system.  At the same time as this was happening, the star itself was brightening. This provided the light to illuminate the newly formed fan-shaped nebula. This brightening might be related to the start of the hydrogen-burning phase of the star, which would mean that it was reaching maturity.  PV Cep is thought to be surrounded by a disc of gas and dust, which would stop light from escaping in all directions. The fan-like appearance is therefore probably a result of starlight escaping from the dust disc and projecting onto the nebula.  PV Cep is located in the northern constellation of Cepheus at a distance of over 1600 light-years from Earth.   European Space Agency/NASA Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000332/GSFC_20171208_Archive_e000332~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000332/collection.json","data":[{"album":"Test","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"title":"Hubble Takes Mars Portrait Near Close Approach","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000332","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000334/GSFC_20171208_Archive_e000334~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000334/collection.json","data":[{"album":"Test","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","nasa_id":"GSFC_20171208_Archive_e000334","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Takes Mars Portrait Near Close Approach","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000333/GSFC_20171208_Archive_e000333~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000333/collection.json","data":[{"album":"Test","keywords":["Hubble Takes Mars Portrait Near Close Approach","mars","nasa","hubble","hubblespacetelescope","nasagoddard"],"title":"Hubble Takes Mars Portrait Near Close Approach","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000333","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Mars is looking mighty fine in this portrait nabbed by the Hubble Space Telescope on a near close approach!  Read more: <a href=\"http://go.nasa.gov/1rWYiBT\" rel=\"nofollow\">go.nasa.gov/1rWYiBT</a>  The Hubble Space Telescope is more well known for its picturesque views of nebulae and galaxies, but it's also useful for studying our own planets, including Mars.  Hubble imaged Mars on May 12, 2016 - ten days before Mars would be on the exact opposite side of the Earth from the Sun.  Bright, frosty polar caps, and clouds above a vivid, rust-colored landscape reveal Mars as a dynamic seasonal planet in this NASA Hubble Space Telescope view taken on May 12, 2016, when Mars was 50 million miles from Earth. The Hubble image reveals details as small as 20 to 30 miles across.  The large, dark region at far right is Syrtis Major Planitia, one of the first features identified on the surface of the planet by seventeenth-century observers. Christiaan Huygens used this feature to measure the rotation rate of Mars. (A Martian day is about 24 hours and 37 minutes.) Today we know that Syrtis Major is an ancient, inactive shield volcano. Late-afternoon clouds surround its summit in this view.  A large oval feature to the south of Syrtis Major is the bright Hellas Planitia basin. About 1,100 miles across and nearly five miles deep, it was formed about 3.5 billion years ago by an asteroid impact.  The orange area in the center of the image is Arabia Terra, a vast upland region in northern Mars that covers about 2,800 miles. The landscape is densely cratered and heavily eroded, indicating that it could be among the oldest terrains on the planet. Dried river canyons (too small to be seen here) wind through the region and empty into the large northern lowlands.  Credit: NASA, ESA, the Hubble Heritage Team (STScI/AURA), J. Bell (ASU), and M. Wolff (Space Science Institute) #nasagoddard #mars #hubble #space  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>     ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000278/GSFC_20171208_Archive_e000278~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000278/collection.json","data":[{"album":"Test","keywords":["Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","nasa","galaxy","hubble","nasagoddard"],"description":"Fireworks shows are not just confined to Earth’s skies. NASA’s Hubble Space Telescope has captured a spectacular fireworks display in a small, nearby galaxy, which resembles a July 4th skyrocket.  A firestorm of star birth is lighting up one end of the diminutive galaxy Kiso 5639. The dwarf galaxy is shaped like a flattened pancake, but because it is tilted edge-on, it resembles a skyrocket, with a brilliant blazing head and a long, star-studded tail.  Kiso 5639 is a rare, nearby example of elongated galaxies that occur in abundance at larger distances, where we observe the universe during earlier epochs. Astronomers suggest that the frenzied star birth is sparked by intergalactic gas raining on one end of the galaxy as it drifts through space.  “I think Kiso 5639 is a beautiful, up-close example of what must have been common long ago,” said lead researcher Debra Elmegreen of Vassar College, in Poughkeepsie, New York. “The current thinking is that galaxies in the early universe grow from accreting gas from the surrounding neighborhood. It’s a stage that galaxies, including our Milky Way, must go through as they are growing up.”  Observations of the early universe, such as Hubble’s Ultra-Deep Field, reveal that about 10 percent of all galaxies have these elongated shapes, and are collectively called “tadpoles.” But studies of the nearby universe have turned up only a few of these unusual galaxies, including Kiso 5639. The development of the nearby star-making tadpole galaxies, however, has lagged behind that of their peers, which have spent billions of years building themselves up into many of the spiral galaxies seen today.  Elmegreen used Hubble’s Wide Field Camera 3 to conduct a detailed imaging study of Kiso 5639. The images in different filters reveal information about an object by dissecting its light into its component colors. Hubble’s crisp resolution helped Elmegreen and her team analyze the giant star-forming clumps in Kiso 5639 and determine the masses and ages of the star clusters.  The international team of researchers selected Kiso 5639 from a spectroscopic survey of 10 nearby tadpole galaxies, observed with the Grand Canary Telescope in La Palma, Spain, by Jorge Sanchez Almeida and collaborators at the Instituto de Astrofisica de Canarias. The observations revealed that in most of those galaxies, including Kiso 5639, the gas composition is not uniform.  The bright gas in the galaxy’s head contains fewer heavier elements (collectively called “metals”), such as carbon and oxygen, than the rest of the galaxy. Stars consist mainly of hydrogen and helium, but cook up other “heavier” elements. When the stars die, they release their heavy elements and enrich the surrounding gas.  “The metallicity suggests that there has to be rather pure gas, composed mostly of hydrogen, coming into the star-forming part of the galaxy, because intergalactic space contains more pristine hydrogen-rich gas,” Elmegreen explained. “Otherwise, the starburst region should be as rich in heavy elements as the rest of the galaxy.”  Hubble offers a detailed view of the galaxy’s star-making frenzy. The telescope uncovered several dozen clusters of stars in the galaxy’s star-forming head, which spans 2,700 light-years across. These clusters have an average age of less than 1 million years and masses that are three to six times larger than those in the rest of the galaxy. Other star formation is taking place throughout the galaxy but on a much smaller scale. Star clusters in the rest of the galaxy are between several million to a few billion years old.  “There is much more star formation going on in the head than what you would expect in such a tiny galaxy,” said team member Bruce Elmegreen of IBM’s Thomas J. Watson’s Research Center, in Yorktown Heights, New York. “And we think the star formation is triggered by the ongoing accretion of metal-poor gas onto a part of an otherwise quiescent dwarf galaxy.”  Hubble also revealed giant holes peppered throughout the galaxy’s starburst head. These cavities give the galaxy’s head a Swiss-cheese appearance because numerous supernova detonations – like firework aerial bursts – have carved out holes of rarified superheated gas.  The galaxy, located 82 million light-years away, has taken billions of years to develop because it has been drifting through an isolated “desert” in the universe, devoid of much gas.  What triggered the starburst in such a backwater galaxy? Based on simulations by Daniel Ceverino of the Center for Astronomy at Heidelberg University in Germany, and other team members, the observations suggest that less than 1 million years ago, Kiso 5639’s leading edge encountered a filament of gas. The filament dropped a large clump of matter onto the galaxy, stoking the vigorous star birth.  Debra Elmegreen expects that in the future other parts of the galaxy will join in the star-making fireworks show. “Galaxies rotate, and as Kiso 5639 continues to spin, another part of the galaxy may receive an infusion of new gas from this filament, instigating another round of star birth,” she said.  The team’s results have been accepted for publication in The Astrophysical Journal.  Other team members include Casiana Munoz-Tunon and Mercedes Filho (Instituto de Astrofísica de Canarias, Canary Islands), Jairo Mendez-Abreu (University of St. Andrews, United Kingdom), John Gallagher (University of Wisconsin-Madison), and Marc Rafelski (NASA's Goddard Space Flight Center, Greenbelt, Maryland).  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center in Greenbelt, Maryland, manages the telescope. The Space Telescope Science Institute (STScI) in Baltimore, Maryland, conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy in Washington, D.C.  For images and more information about Kiso 5639 and Hubble, visit:   <a href=\"http://hubblesite.org/news/2016/23\" rel=\"nofollow\">hubblesite.org/news/2016/23</a>  <a href=\"http://www.nasa.gov/hubble\" rel=\"nofollow\">www.nasa.gov/hubble</a>  Image credit: NASA, ESA, and D. Elmegreen (Vassar College)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>      ","nasa_id":"GSFC_20171208_Archive_e000278","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Reveals Stellar Fireworks in ‘Skyrocket’ Galaxy","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001017/GSFC_20171208_Archive_e001017~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001017/collection.json","data":[{"keywords":["Hubble Revisits a Globular Cluster’s Age"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001017","date_created":"2014-08-13T20:30:40Z","media_type":"image","title":"Hubble Revisits a Globular Cluster’s Age","description":"This new NASA/ESA Hubble Space Telescope image shows the globular cluster IC 4499.  Globular clusters are big balls of old stars that orbit around their host galaxy. It has long been believed that all the stars within a globular cluster form at the about same time, a property which can be used to determine the cluster's age. For more massive globulars however, detailed observations have shown that this is not entirely true — there is evidence that they instead consist of multiple populations of stars born at different times. One of the driving forces behind this behavior is thought to be gravity: more massive globulars manage to grab more gas and dust, which can then be transformed into new stars.  IC 4499 is a somewhat special case. Its mass lies somewhere between low-mass globulars, which show a single generation build-up, and the more complex and massive globulars which can contain more than one generation of stars. By studying objects like IC 4499 astronomers can therefore explore how mass affects a cluster's contents. Astronomers found no sign of multiple generations of stars in IC 4499 — supporting the idea that less massive clusters in general only consist of a single stellar generation.  Hubble observations of IC 4499 have also helped to pinpoint the cluster's age: observations of this cluster from the 1990s suggested a puzzlingly young age when compared to other globular clusters within the Milky Way. However, since those first estimates new Hubble data have been obtained and it has been found to be much more likely that IC 4499 is actually roughly the same age as other Milky Way clusters at approximately 12 billion years old.         Credit: ESA and NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000720/GSFC_20171208_Archive_e000720~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000720/collection.json","data":[{"keywords":["Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000720","date_created":"2015-05-21T19:22:40Z","media_type":"image","title":"Hubble Observes One-of-a-Kind Star Nicknamed ‘Nasty’","description":"Astronomers using NASA’s Hubble Space Telescope have uncovered surprising new clues about a hefty, rapidly aging star whose behavior has never been seen before in our Milky Way galaxy. In fact, the star is so weird that astronomers have nicknamed it “Nasty 1,” a play on its catalog name of NaSt1. The star may represent a brief transitory stage in the evolution of extremely massive stars.  First discovered several decades ago, Nasty 1 was identified as a Wolf-Rayet star, a rapidly evolving star that is much more massive than our sun. The star loses its hydrogen-filled outer layers quickly, exposing its super-hot and extremely bright helium-burning core.  But Nasty 1 doesn’t look like a typical Wolf-Rayet star. The astronomers using Hubble had expected to see twin lobes of gas flowing from opposite sides of the star, perhaps similar to those emanating from the massive star Eta Carinae, which is a Wolf-Rayet candidate.   Instead, Hubble revealed a pancake-shaped disk of gas encircling the star. The vast disk is nearly 2 trillion miles wide, and may have formed from an unseen companion star that snacked on the outer envelope of the newly formed Wolf-Rayet.  Based on current estimates, the nebula surrounding the stars is just a few thousand years old, and as close as 3,000 light-years from Earth.  Read more: <a href=\"http://www.nasa.gov/feature/hubble-observes-one-of-a-kind-star-nicknamed-nasty\" rel=\"nofollow\">www.nasa.gov/feature/hubble-observes-one-of-a-kind-star-n...</a>  Credits: NASA/Hubble  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001014/GSFC_20171208_Archive_e001014~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001014/collection.json","data":[{"keywords":["Hubble Sees a Silver Needle in the Sky"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001014","date_created":"2014-08-22T15:19:02Z","media_type":"image","title":"Hubble Sees a Silver Needle in the Sky","description":"This stunning new image from the NASA/ESA Hubble Space Telescope shows part of the sky in the constellation of Canes Venatici (The Hunting Dogs).  Although this region of the sky is not home to any stellar heavyweights, being mostly filled with stars of average brightness, it does contain five Messier objects and numerous intriguing galaxies — including NGC 5195, a small barred spiral galaxy considered to be one of the most beautiful galaxies visible, and its nearby interacting partner the Whirlpool Galaxy (heic0506a). The quirky Sunflower Galaxy is another notable galaxy in this constellation, and is one of the largest and brightest edge-on galaxies in our skies.  Joining this host of characters is spiral galaxy NGC 4244, nicknamed the Silver Needle Galaxy, shown in this new image from Hubble. This galaxy spans some 65,000 light-years and lies around 13.5 million light-years away. It appears as a wafer-thin streak across the sky, with loosely wound spiral arms hidden from view as we observe the galaxy from the side. It is part of a group of galaxies known as the M94 Group.   Numerous bright clumps of gas can be seen scattered across its length, along with dark dust lanes surrounding the galaxy’s core. NGC 4244 also has a bright star cluster at its center. Although we can make out the galaxy’s bright central region and star-spattered arms, we cannot see any more intricate structure due to the galaxy’s position; from Earth, we see it stretched out as a flattened streak across the sky. A number of different observations were pieced together to form this mosaic, and gaps in Hubble’s coverage have been filled in using ground-based data. The Hubble observations were taken as part of the Galaxy Halos, Outer disks, Substructure, Thick disks and Star clusters (GHOSTS) survey, which is scanning nearby galaxies to explore how they and their stars formed to get a more complete view of the history of the Universe.   European Space Agency Credit: NASA &amp; ESA, Acknowledgement: Roelof de Jong  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002076/GSFC_20171208_Archive_e002076~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002076/collection.json","data":[{"album":"Test","keywords":["Hubble Captures Spectacular \"Landscape\" in the Carina Nebula","space","nasa","hubble","hubblespacetelescope","goddardspaceflightcenter","hubble20thanniversary","hubble20years"],"description":"NASA image release April 22, 2010  NASA's Hubble Space Telescope captured this billowing cloud of cold interstellar gas and dust rising from a tempestuous stellar nursery located in the Carina Nebula, 7,500 light-years away in the southern constellation Carina. This pillar of dust and gas serves as an incubator for new stars and is teeming with new star-forming activity. Hot, young stars erode and sculpt the clouds into this fantasy landscape by sending out thick stellar winds and scorching ultraviolet radiation. The low-density regions of the nebula are shredded while the denser parts resist erosion and remain as thick pillars. In the dark, cold interiors of these columns new stars continue to form. In the process of star formation, a disk around the proto-star slowly accretes onto the star's surface. Part of the material is ejected along jets perpendicular to the accretion disk. The jets have speeds of several hundreds of miles per second. As these jets plow into the surround nebula, they create small, glowing patches of nebulosity, called Herbig-Haro (HH) objects.  Long streamers of gas can be seen shooting in opposite directions off the pedestal on the upper right-hand side of the image. Another pair of jets is visible in a peak near the top-center of the image. These jets (known as HH 901 and HH 902, respectively) are common signatures of the births of new stars. This image celebrates the 20th anniversary of Hubble's launch and deployment into an orbit around Earth. Hubble's Wide Field Camera 3 observed the pillar on Feb. 1-2, 2010. The colors in this composite image correspond to the glow of oxygen (blue), hydrogen and nitrogen (green), and sulfur (red). Object Names: HH 901, HH 902 Image Type: Astronomical  Credit: NASA, ESA, and M. Livio and the Hubble 20th Anniversary Team (STScI)  To read learn more about this image go to:  <a href=\"http://www.nasa.gov/mission_pages/hubble/science/hubble20th-img.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/science/hubble20th-img....</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","nasa_id":"GSFC_20171208_Archive_e002076","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Captures Spectacular \"Landscape\" in the Carina Nebula","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000995/GSFC_20171208_Archive_e000995~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000995/collection.json","data":[{"album":"Test","keywords":["Hubble Sees Spiral in Serpens","space","nasa","galaxy","esa","darkmatter","hubble","pgc54493"],"title":"Hubble Sees Spiral in Serpens","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000995","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This new NASA/ESA Hubble Space Telescope image shows a beautiful spiral galaxy known as PGC 54493, located in the constellation of Serpens (The Serpent). This galaxy is part of a galaxy cluster that has been studied by astronomers exploring an intriguing phenomenon known as weak gravitational lensing.  This effect, caused by the uneven distribution of matter (including dark matter) throughout the Universe, has been explored via surveys such as the Hubble Medium Deep Survey. Dark matter is one of the great mysteries in cosmology. It behaves very differently from ordinary matter as it does not emit or absorb light or other forms of electromagnetic energy — hence the term &quot;dark.&quot;  Even though we cannot observe dark matter directly, we know it exists. One prominent piece of evidence for the existence of this mysterious matter is known as the &quot;galaxy rotation problem.&quot; Galaxies rotate at such speeds and in such a way that ordinary matter alone — the stuff we see — would not be able to hold them together. The amount of mass that is &quot;missing&quot; visibly is dark matter, which is thought to make up some 27 percent of the total contents of the Universe, with dark energy and normal matter making up the rest. PGC 55493 has been studied in connection with an effect known as cosmic shearing. This is a weak gravitational lensing effect that creates tiny distortions in images of distant galaxies.   European Space Agency ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002173/GSFC_20171208_Archive_e002173~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002173/collection.json","data":[{"album":"Test","keywords":["Hubble Sees Stars and a Stripe in Celestial Fireworks","space","nasa","telescope","galaxy","goddard","hubble","hubblespacetelescope","goddardspaceflightcenter"],"title":"Hubble Sees Stars and a Stripe in Celestial Fireworks","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002173","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Release date: July 1, 2008  SN 1006 Supernova Remnant (Hubble)  A delicate ribbon of gas floats eerily in our galaxy. A contrail from an alien spaceship? A jet from a black-hole? Actually this image, taken by NASA's Hubble Space Telescope, is a very thin section of a supernova remnant caused by a stellar explosion that occurred more than 1,000 years ago.  On or around May 1, 1006 A.D., observers from Africa to Europe to the Far East witnessed and recorded the arrival of light from what is now called SN 1006, a tremendous supernova explosion caused by the final death throes of a white dwarf star nearly 7,000 light-years away. The supernova was probably the brightest star ever seen by humans, and surpassed Venus as the brightest object in the night time sky, only to be surpassed by the moon. It was visible even during the day for weeks, and remained visible to the naked eye for at least two and a half years before fading away.  It wasn't until the mid-1960s that radio astronomers first detected a nearly circular ring of material at the recorded position of the supernova. The ring was almost 30 arcminutes across, the same angular diameter as the full moon. The size of the remnant implied that the blast wave from the supernova had expanded at nearly 20 million miles per hour over the nearly 1,000 years since the explosion occurred. In 1976, the first detection of exceedingly faint optical emission of the supernova remnant was reported, but only for a filament located on the northwest edge of the radio ring. A tiny portion of this filament is revealed in detail by the Hubble observation. The twisting ribbon of light seen by Hubble corresponds to locations where the expanding blast wave from the supernova is now sweeping into very tenuous surrounding gas.  The hydrogen gas heated by this fast shock wave emits radiation in visible light. Hence, the optical emission provides astronomers with a detailed &quot;snapshot&quot; of the actual position and geometry of the shock front at any given time. Bright edges within the ribbon correspond to places where the shock wave is seen exactly edge on to our line of sight. Today we know that SN 1006 has a diameter of nearly 60 light-years, and it is still expanding at roughly 6 million miles per hour. Even at this tremendous speed, however, it takes observations typically separated by years to see significant outward motion of the shock wave against the grid of background stars. In the Hubble image as displayed, the supernova would have occurred far off the lower right corner of the image, and the motion would be toward the upper left.  SN 1006 resides within our Milky Way Galaxy. Located more than 14 degrees off the plane of the galaxy's disk, there is relatively little confusion with other foreground and background objects in the field when trying to study this object. In the Hubble image, many background galaxies (orange extended objects) far off in the distant universe can be seen dotting the image. Most of the white dots are foreground or background stars in our Milky Way galaxy.  This image is a composite of hydrogen-light observations taken with Hubble's Advanced Camera for Surveys in February 2006 and Wide Field Planetary Camera 2 observations in blue, yellow-green, and near-infrared light taken in April 2008. The supernova remnant, visible only in the hydrogen-light filter was assigned a red hue in the Heritage color image.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: W. Blair (Johns Hopkins University)  To learn more about the Hubble Space Telescope go here:  <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000052/GSFC_20171208_Archive_e000052~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000052/collection.json","data":[{"album":"Test","keywords":["Hubble Catches a Galaxy Duo by the \"Hare\"","iras060762139"],"title":"Hubble Catches a Galaxy Duo by the \"Hare\"","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000052","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This image from the NASA/ESA Hubble Space Telescope shows the unusual galaxy IRAS 06076-2139, found in the constellation Lepus (The Hare). Hubble’s Wide Field Camera 3 (WFC3) and Advanced Camera for Surveys (ACS) instruments observed the galaxy from a distance of 500 million light-years.  This particular object stands out from the crowd by actually being composed of two separate galaxies rushing past each other at about 2 million kilometers (1,243,000 miles) per hour. This speed is most likely too fast for them to merge and form a single galaxy. However, because of their small separation of only about 20,000 light-years, the galaxies will distort one another through the force of gravity while passing each other, changing their structures on a grand scale.  Such galactic interactions are a common sight for Hubble, and have long been a field of study for astronomers. The intriguing behaviors of interacting galaxies take many forms; galactic cannibalism, galaxy harassment and even galaxy collisions. The Milky Way itself will eventually fall victim to the latter, merging with the Andromeda Galaxy in about 4.5 billion years. The fate of our galaxy shouldn’t be alarming though: while galaxies are populated by billions of stars, the distances between individual stars are so large that hardly any stellar collisions will occur.  Credit: ESA/Hubble &amp; NASA   <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>   ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001979/GSFC_20171208_Archive_e001979~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001979/collection.json","data":[{"album":"Test","keywords":["Hubble Sees Pinwheel of Star Birth","hubble","hst","nasa","universe","galaxy","spiralgalaxy","space","star","goddardspaceflightcenter"],"title":"Hubble Sees Pinwheel of Star Birth","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001979","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"NASA image release October 19, 2010  Though the universe is chock full of spiral-shaped galaxies, no two look exactly the same. This face-on spiral galaxy, called NGC 3982, is striking for its rich tapestry of star birth, along with its winding arms. The arms are lined with pink star-forming regions of glowing hydrogen, newborn blue star clusters, and obscuring dust lanes that provide the raw material for future generations of stars. The bright nucleus is home to an older population of stars, which grow ever more densely packed toward the center.  NGC 3982 is located about 68 million light-years away in the constellation Ursa Major. The galaxy spans about 30,000 light-years, one-third of the size of our Milky Way galaxy. This color image is composed of exposures taken by the Hubble Space Telescope's Wide Field Planetary Camera 2 (WFPC2), the Advanced Camera for Surveys (ACS), and the Wide Field Camera 3 (WFC3). The observations were taken between March 2000 and August 2009. The rich color range comes from the fact that the galaxy was photographed invisible and near-infrared light. Also used was a filter that isolates hydrogen emission that emanates from bright star-forming regions dotting the spiral arms.  The Hubble Space Telescope is a project of international cooperation between NASA and the European Space Agency. NASA's Goddard Space Flight Center manages the telescope. The Space Telescope Science Institute (STScI) conducts Hubble science operations. STScI is operated for NASA by the Association of Universities for Research in Astronomy, Inc. in Washington, D.C.  Credit: NASA, ESA, and the Hubble Heritage Team (STScI/AURA) Acknowledgment: A. Riess (STScI)  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Join us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000154/GSFC_20171208_Archive_e000154~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000154/collection.json","data":[{"album":"Test","keywords":["Hubble Spotlight on Irregular Galaxy","ic3583"],"title":"Hubble Spotlight on Irregular Galaxy","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000154","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"This delicate blue group of stars — actually an irregular galaxy named IC 3583 — sits some 30 million light-years away in the constellation of Virgo (The Virgin).  It may seem to have no discernable structure, but IC 3583 has been found to have a bar of stars running through its center. These structures are common throughout the Universe, and are found within the majority of spiral, many irregular, and some lenticular galaxies. Two of our closest cosmic neighbors, the Large and Small Magellanic Clouds, are barred, indicating that they may have once been barred spiral galaxies that were disrupted or torn apart by the gravitational pull of the Milky Way.  Researchers at the University of Leicester, England note there are two types of irregular galaxy. Type I's are usually single galaxies of peculiar appearance. They contain a large fraction of young stars, and show the luminous nebulae that are also visible in spiral galaxies. Type II irregulars include the group known as interacting or disrupting galaxies, in which the strange appearance is due to two or more galaxies colliding, merging or otherwise interacting gravitationally.  Something similar might be happening with IC 3583. This small galaxy is thought to be gravitationally interacting with one of its neighbors, the spiral Messier 90. Together, the duo form a pairing known as Arp 76. It’s still unclear whether these flirtations are the cause of IC 3583’s irregular appearance — but whatever the cause, the galaxy makes for a strikingly delicate sight in this NASA/ESA Hubble Space Telescope image, glimmering in the blackness of space.  Image Credit: ESA/Hubble &amp; NASA  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagrid.me/nasagoddard/?vm=grid\" rel=\"nofollow\">Instagram</a></b>  ","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000275/GSFC_20171208_Archive_e000275~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000275/collection.json","data":[{"album":"Test","keywords":["Hubble Hotbed of Vigorous Star Formation","ngc1569"],"description":"This galaxy is currently a hotbed of vigorous star formation. NGC 1569 is a starburst galaxy, meaning that — as the name suggests — it is bursting at the seams with stars, and is currently producing them at a rate far higher than that observed in most other galaxies. For almost 100 million years, NGC 1569 has pumped out stars more than 100 times faster than the Milky Way!  As a result, this glittering galaxy is home to super star clusters, three of which are visible in this image — one of the two bright clusters is actually the superposition of two massive clusters. Each containing more than a million stars, these brilliant blue clusters reside within a large cavity of gas carved out by multiple supernovae, the energetic remnants of massive stars.  In 2008, Hubble observed the galaxy's cluttered core and sparsely populated outer fringes. By pinpointing individual red giant stars, Hubble’s Advanced Camera for Surveys enabled astronomers to calculate a new — and much more precise — estimate for NGC 1569’s distance. This revealed that the galaxy is actually one and a half times farther away than previously thought, and a member of the IC 342 galaxy group.  Astronomers suspect that the IC 342 cosmic congregation is responsible for the star-forming frenzy observed in NGC 1569. Gravitational interactions between this galactic group are believed to be compressing the gas within NGC 1569. As it is compressed, the gas collapses, heats up and forms new stars.  Image credit: ESA/Hubble &amp; NASA, Aloisi, Ford; Acknowledgement: Judy Schmidt ","nasa_id":"GSFC_20171208_Archive_e000275","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Hotbed of Vigorous Star Formation","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000492/GSFC_20171208_Archive_e000492~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000492/collection.json","data":[{"album":"Test","keywords":["Hubble Views Two Galaxies Merging","ngc6052"],"description":"This image, taken with the Wide Field Planetary Camera 2 on board the NASA/ESA Hubble Space Telescope, shows the galaxy NGC 6052, located around 230 million light-years away in the constellation of Hercules.  It would be reasonable to think of this as a single abnormal galaxy, and it was originally classified as such. However, it is in fact a “new” galaxy in the process of forming. Two separate galaxies have been gradually drawn together, attracted by gravity, and have collided. We now see them merging into a single structure.  As the merging process continues, individual stars are thrown out of their original orbits and placed onto entirely new paths, some very distant from the region of the collision itself. Since the stars produce the light we see, the “galaxy” now appears to have a highly chaotic shape. Eventually, this new galaxy will settle down into a stable shape, which may not resemble either of the two original galaxies.  Image credit: ESA/Hubble &amp; NASA, Acknowledgement: Judy Schmidt ","nasa_id":"GSFC_20171208_Archive_e000492","date_created":"2017-12-08T00:00:00Z","media_type":"image","title":"Hubble Views Two Galaxies Merging","location":"Greenbelt, MD","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000941/GSFC_20171208_Archive_e000941~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000941/collection.json","data":[{"album":"Test","keywords":["Hubble's View of Comet Siding Spring","mars","space","nasa","hubble","nasagoddard","cometsidingspring"],"title":"Hubble's View of Comet Siding Spring","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000941","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"MARCH 27, 2014: Comet Siding Spring is plunging toward the Sun along a roughly 1-million-year orbit. The comet, discovered in 2013, was within the radius of Jupiter's orbit when the Hubble Space Telescope photographed it on March 11, 2014. Hubble resolves two jets of dust coming from the solid icy nucleus. These persistent jets were first seen in Hubble pictures taken on Oct. 29, 2013. The feature should allow astronomers to measure the direction of the nucleus's pole, and hence, rotation axis. The comet will make its closest approach to our Sun on Oct. 25, 2014, at a distance of 130 million miles, well outside Earth's orbit. On its inbound leg, Comet Siding Spring will pass within 84,000 miles of Mars on Oct. 19, 2014, which is less than half the Moon's distance from Earth. The comet is not expected to become bright enough to be seen by the naked eye.  Credit: NASA, ESA, and J.-Y. Li (Planetary Science Institute)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000798/GSFC_20171208_Archive_e000798~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000798/collection.json","data":[{"keywords":["Hubble Spies a Loopy Galaxy"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e000798","date_created":"2015-02-02T18:38:12Z","media_type":"image","title":"Hubble Spies a Loopy Galaxy","description":"This NASA Hubble Space Telescope photo of NGC 7714 presents an especially striking view of the galaxy's smoke-ring-like structure. The golden loop is made of sun-like stars that have been pulled deep into space, far from the galaxy's center. The galaxy is located approximately 100 million light-years from Earth in the direction of the constellation Pisces.  The universe is full of such galaxies that are gravitationally stretched and pulled and otherwise distorted in gravitational tug-o'-wars with bypassing galaxies.  The companion galaxy doing the &quot;taffy pulling&quot; in this case, NGC 7715, lies just out of the field of view in this image. A very faint bridge of stars extends to the unseen companion. The close encounter has compressed interstellar gas to trigger bursts of star formation seen in bright blue arcs extending around NGC 7714's center.  The gravitational disruption of NGC 7714 began between 100 million and 200 million years ago, at the epoch when dinosaurs ruled the Earth.  The image was taken with the Wide Field Camera 3 and the Advanced Camera for Surveys in October 2011.  Credit: NASA and ESA. Acknowledgment: A. Gal-Yam (Weizmann Institute of Science)  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission. <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b> <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b> <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002039/GSFC_20171208_Archive_e002039~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e002039/collection.json","data":[{"album":"Test","keywords":["Hubble Captures Bubbles And Baby Stars","star","satellite","nasa","nebula","hubble","lightyears","hubblespacetelescope","n11","goddardspaceflightcenter","starformation"],"title":"Hubble Captures Bubbles And Baby Stars","location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e002039","date_created":"2017-12-08T00:00:00Z","media_type":"image","description":"Image release June 22, 2010  A spectacular new NASA/ESA Hubble Space Telescope image — one of the largest ever released of a star-forming region — highlights N11, part of a complex network of gas clouds and star clusters within our neighbouring galaxy, the Large Magellanic Cloud. This region of energetic star formation is one of the most active in the nearby Universe.  The Large Magellanic Cloud contains many bright bubbles of glowing gas. One of the largest and most spectacular has the name LHA 120-N 11, from its listing in a catalogue compiled by the American astronomer and astronaut Karl Henize in 1956, and is informally known as N11. Close up, the billowing pink clouds of glowing gas make N11 resemble a puffy swirl of fairground candy floss. From further away, its distinctive overall shape led some observers to nickname it the Bean Nebula. The dramatic and colourful features visible in the nebula are the telltale signs of star formation. N11 is a well-studied region that extends over 1000 light-years. It is the second largest star-forming region within the Large Magellanic Cloud and has produced some of the most massive stars known.    It is the process of star formation that gives N11 its distinctive look. Three successive generations of stars, each of which formed further away from the centre of the nebula than the last, have created shells of gas and dust. These shells were blown away from the newborn stars in the turmoil of their energetic birth and early life, creating the ring shapes so prominent in this image.  Beans are not the only terrestrial shapes to be found in this spectacular high resolution image from the NASA/ESA Hubble Space Telescope. In the upper left is the red bloom of nebula LHA 120-N 11A. Its rose-like petals of gas and dust are illuminated from within, thanks to the radiation from the massive hot stars at its centre. N11A is relatively compact and dense and is the site of the most recent burst of star development in the region.  Other star clusters abound in N11, including NGC 1761 at the bottom of the image, which is a group of massive hot young stars busily pouring intense ultraviolet radiation out into space. Although it is much smaller than our own galaxy, the Large Magellanic Cloud is a very vigorous region of star formation. Studying these stellar nurseries helps astronomers understand a lot more about how stars are born and their ultimate development and lifespan.  Both the Large Magellanic Cloud and its small companion, the Small Magellanic Cloud, are easily seen with the unaided eye and have always been familiar to people living in the southern hemisphere. The credit for bringing these galaxies to the attention of Europeans is usually given to Portuguese explorer Fernando de Magellan and his crew, who viewed it on their 1519 sea voyage. However, the Persian astronomer Abd Al-Rahman Al Sufi and the Italian explorer Amerigo Vespucci recorded the Large Magellanic Cloud in 964 and 1503 respectively.  Credit: NASA, ESA and Jesús Maíz Apellániz (Instituto de Astrofísica de Andalucía, Spain)  To learn more about Hubble go to: <a href=\"http://www.nasa.gov/mission_pages/hubble/main/index.html\" rel=\"nofollow\">www.nasa.gov/mission_pages/hubble/main/index.html</a>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b>  is home to the nation's largest organization of combined scientists, engineers and technologists that build spacecraft, instruments and new technology to study the Earth, the sun, our solar system, and the universe.","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001260/GSFC_20171208_Archive_e001260~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001260/collection.json","data":[{"keywords":["Hubble Sees a Star Set to Explode"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001260","date_created":"2014-01-10T17:02:00Z","media_type":"image","title":"Hubble Sees a Star Set to Explode","description":"Floating at the center of this new Hubble image is a lidless purple eye, staring back at us through space. This ethereal object, known officially as [SBW2007] 1 but sometimes nicknamed SBW1, is a nebula with a giant star at its center. The star was originally twenty times more massive than our sun, and is now encased in a swirling ring of purple gas, the remains of the distant era when it cast off its outer layers via violent pulsations and winds. But the star is not just any star; scientists say that it is destined to go supernova. Twenty-six years ago, another star with striking similarities went supernova — SN 1987A. Early Hubble images of SN 1987A show eerie similarities to SBW1. Both stars had identical rings of the same size and age, which were travelling at similar speeds; both were located in similar HII regions; and they had the same brightness. In this way SBW1 is a snapshot of SN1987a's appearance before it exploded, and unsurprisingly, astronomers love studying them together. At a distance of more than 20 000 light-years it will be safe to watch when the supernova goes off. If we are very lucky it may happen in our own lifetimes.  Credit: ESA/NASA, acknowledgement: Nick Rose  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001292/GSFC_20171208_Archive_e001292~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001292/collection.json","data":[{"keywords":["Hubble Sees a Bizarre Cosmic Rarity"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001292","date_created":"2013-12-06T20:55:54Z","media_type":"image","title":"Hubble Sees a Bizarre Cosmic Rarity","description":"This new Hubble image shows a peculiar galaxy known as NGC 660, located around 45 million light-years away from us.  NGC 660 is classified as a &quot;polar ring galaxy,&quot; meaning that it has a belt of gas and stars around its center that it ripped from a near neighbor during a clash about one billion years ago.The first polar ring galaxy was observed in 1978 and only around a dozen more have been discovered since then, making them something of a cosmic rarity.  Unfortunately, NGC 660’s polar ring cannot be seen in this image, but the image has plenty of other features that make it of interest to astronomers – its central bulge is strangely off-kilter and, perhaps more intriguingly, it is thought to harbor exceptionally large amounts of dark matter. In addition, in late 2012 astronomers observed a massive outburst emanating from NGC 660 that was around ten times as bright as a supernova explosion. This burst was thought to be caused by a massive jet shooting out of the supermassive black hole at the center of the galaxy.   Credit: Hubble/NASA/European Space Agency  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>  <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.  <b>Follow us on <a href=\"http://twitter.com/NASA_GoddardPix\" rel=\"nofollow\">Twitter</a></b>  <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>  <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001165/GSFC_20171208_Archive_e001165~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001165/collection.json","data":[{"keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001165","date_created":"2014-03-06T17:01:08Z","media_type":"image","description":"This series of images shows the asteroid P/2013 R3 breaking apart, as viewed by the NASA/ESA Hubble Space Telescope in 2013. This is the first time that such a body has been seen to undergo this kind of break-up.  The Hubble observations showed that there are ten distinct objects, each with comet-like dust tails, embedded within the asteroid's dusty envelope. The four largest rocky fragments are up to 200 metres in radius, about twice the length of a football pitch.  The date increases from left to right, with frames from 29 October 2013, 15 November 2013, 13 December 2013, and 14 January 2014 respectively, showing how the clumps of debris material move around. The 14 January 2014 frame was not included in the science paper and is additional data.  Credit: NASA, ESA, D. Jewitt (UCLA)  Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001166/GSFC_20171208_Archive_e001166~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001166/collection.json","data":[{"keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001166","date_created":"2014-03-06T17:01:08Z","media_type":"image","description":"Though fragile comet nuclei have been seen falling apart as they near the Sun, nothing like the slow breakup of an asteroid has ever before been observed in the asteroid belt. A series of Hubble Space Telescope images shows that the fragments are drifting away from each other at a leisurely one mile per hour. This makes it unlikely that the asteroid is disintegrating because of a collision with another asteroid. A plausible explanation is that the asteroid is crumbling due to a subtle effect of sunlight. This causes the rotation rate to slowly increase until centrifugal force pulls the asteroid apart. The asteroid's remnant debris, weighing in at 200,000 tons, will in the future provide a rich source of meteoroids.  Hubble Observation of P/2013 R3 - November 15, 2013  Credit: NASA, ESA, and D. Jewitt (University of California, Los Angeles)   Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","center":"GSFC"}]},{"links":[{"rel":"preview","render":"image","href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001167/GSFC_20171208_Archive_e001167~thumb.jpg"}],"href":"https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e001167/collection.json","data":[{"keywords":["Hubble Witnesses an Asteroid Mysteriously Disintegrating"],"location":"Greenbelt, MD","nasa_id":"GSFC_20171208_Archive_e001167","date_created":"2014-03-06T17:01:07Z","media_type":"image","description":"Though fragile comet nuclei have been seen falling apart as they near the Sun, nothing like the slow breakup of an asteroid has ever before been observed in the asteroid belt. A series of Hubble Space Telescope images shows that the fragments are drifting away from each other at a leisurely one mile per hour. This makes it unlikely that the asteroid is disintegrating because of a collision with another asteroid. A plausible explanation is that the asteroid is crumbling due to a subtle effect of sunlight. This causes the rotation rate to slowly increase until centrifugal force pulls the asteroid apart. The asteroid's remnant debris, weighing in at 200,000 tons, will in the future provide a rich source of meteoroids.  Hubble Observation of P/2013 R3 - November 15, 2013  Credit: NASA, ESA, and D. Jewitt (University of California, Los Angeles)   Read more: <a href=\"http://1.usa.gov/1ig2E0x\" rel=\"nofollow\">1.usa.gov/1ig2E0x</a>  <b><a href=\"http://www.nasa.gov/audience/formedia/features/MP_Photo_Guidelines.html\" rel=\"nofollow\">NASA image use policy.</a></b>   <b><a href=\"http://www.nasa.gov/centers/goddard/home/index.html\" rel=\"nofollow\">NASA Goddard Space Flight Center</a></b> enables NASA’s mission through four scientific endeavors: Earth Science, Heliophysics, Solar System Exploration, and Astrophysics. Goddard plays a leading role in NASA’s accomplishments by contributing compelling scientific knowledge to advance the Agency’s mission.   <b>Follow us on <a href=\"http://twitter.com/NASAGoddardPix\" rel=\"nofollow\">Twitter</a></b>   <b>Like us on <a href=\"http://www.facebook.com/pages/Greenbelt-MD/NASA-Goddard/395013845897?ref=tsd\" rel=\"nofollow\">Facebook</a></b>   <b>Find us on <a href=\"http://instagram.com/nasagoddard?vm=grid\" rel=\"nofollow\">Instagram</a></b>","title":"Hubble Witnesses an Asteroid Mysteriously Disintegrating","center":"GSFC"}]}]}}
    http_version: 
  recorded_at: Tue, 26 Feb 2019 00:29:31 GMT
recorded_with: VCR 4.0.0
